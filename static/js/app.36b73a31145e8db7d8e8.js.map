{"version":3,"sources":["webpack:///static/js/app.36b73a31145e8db7d8e8.js","webpack:///./src/lib/createInputsModel.js","webpack:///./src/lib/programs/updatePositionProgram.js","webpack:///./src/lib/shaderGraph/BaseShaderNode.js","webpack:///./src/lib/programs/colorModes.js","webpack:///./src/lib/autoPresets.js","webpack:///./src/lib/generate-equation.js","webpack:///./src/lib/editor/getParsedVectorFieldFunction.js","webpack:///./src/lib/shaderGraph/ValueIntegrator.js","webpack:///./src/lib/programs/audioProgram.js","webpack:///./src/lib/shaderGraph/shaderBasedColor_WAS.js","webpack:///./src/lib/utils/request.js","webpack:///./src/lib/gl-utils.js","webpack:///./src/lib/shaderGraph/UserDefinedVelocityFunction.js","webpack:///./src/lib/utils/floatPacking.js","webpack:///./src/lib/shaderGraph/UserDefinedVelocityHamiltonianFunctions.js","webpack:///./src/lib/programs/inputs/imageInput.js","webpack:///./src/lib/scene.js","webpack:///./src/lib/shaderGraph/parts/simplex-noise.js","webpack:///./src/lib/shaderGraph/DrawParticleGraph_WAS.js","webpack:///./src/lib/appState.js","webpack:///./src/lib/programs/updatePositionProgram_WAS.js","webpack:///./src/lib/shaderGraph/updatePositionGraph.js","webpack:///./src/lib/shaderGraph/renderNodes.js","webpack:///./src/lib/shaderGraph/updatePositionGraph_WAS.js","webpack:///./src/lib/utils/makeStatCounter.js","webpack:///./src/lib/programs/drawParticlesProgram_WAS.js","webpack:///./src/lib/shaderGraph/parts/decodeFloatRGBA.js","webpack:///./src/lib/shaderGraph/TexturePositionNode.js","webpack:///./src/lib/nativeMain.js","webpack:///./src/lib/shaderGraph/parts/encodeFloatRGBA.js","webpack:///./src/lib/shaderGraph/DrawParticleGraph.js","webpack:///./src/lib/shaderGraph/customInput.js","webpack:///./src/lib/isSmallScreen.js","webpack:///./src/lib/shaderGraph/shaderBasedColor.js","webpack:///./src/lib/editor/vectorFieldState.js","webpack:///./src/lib/wrapVectorField.js","webpack:///./src/lib/bus.js","webpack:///./src/lib/programs/inputs/loadTexture.js","webpack:///./src/lib/programs/colorProgram.js","webpack:///./src/lib/programs/screenProgram.js","webpack:///./src/lib/shaderGraph/RungeKuttaIntegrator.js","webpack:///./src/lib/editor/fetchGLSL.js","webpack:///./src/lib/utils/textureCollection_WAS.js","webpack:///./src/lib/programs/inputs/inputCollection.js","webpack:///./src/lib/wglPanZoom.js","webpack:///./src/lib/utils/cursorUpdater.js","webpack:///./src/lib/utils/textureCollection.js","webpack:///./src/lib/config.js","webpack:///./src/lib/shaderGraph/TextureValueNode.js","webpack:///./src/lib/autoMode.js","webpack:///./src/lib/editor/pragmaParser.js","webpack:///./src/lib/shaderGraph/PanzoomTransform.js"],"names":["webpackJsonp","/eR5","module","__webpack_exports__","__webpack_require__","createInputsModel","ctx","getInputs","inputs","addInput","inputNumber","vm","createInputElementViewModel","push","i","__WEBPACK_IMPORTED_MODULE_0__programs_inputs_inputCollection__","i0","__WEBPACK_IMPORTED_MODULE_3__appState_js__","getQS","get","link","updateBinding","immediate","pendingUpdate","clearTimeout","setBinding","setTimeout","input","error","binding","__WEBPACK_IMPORTED_MODULE_2__programs_inputs_imageInput__","done","set","err","bindInput","name","3xg8","updatePositionProgram","updateCode","vectorField","particlePositionShaderCodeBuilder","setCustomVectorField","fragment","getFragmentShader","vertex","getVertexShader","newProgram","__WEBPACK_IMPORTED_MODULE_0__gl_utils__","createProgram","gl","updateProgram","unload","colorMode","__WEBPACK_IMPORTED_MODULE_2__colorModes__","VELOCITY","readVelocity","requestSpeedUpdate","updateParticlesCount","x","y","particleStateResolution","dimensions","particleState","readTextures","dispose","__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__","writeTextures","prepareToDraw","program","setColorMinMax","bindTextures","updateParticlesPositions","useProgram","bindAttribute","quadBuffer","a_pos","updateBindings","audioTexture","bindTexture","uniform1i","uniform1f","u_rand_seed","frameSeed","u_h","integrationTimeStep","frame","cursor","uniform4f","clickX","clickY","hoverX","hoverY","bbox","uniform2f","u_min","minX","minY","u_max","maxX","maxY","u_drop_rate","dropProbability","length","writeInfo","u_out_coordinate","bindFramebuffer","framebuffer","texture","viewport","drawArrays","TRIANGLES","pendingVectorLines","processVectorLinesRequest","temp","putVectorLinesRequestIntoQueue","request","resolutionOfParticlesInRequest","resolution","numParticles","texturesForRead","texturesForWrite","velocity_x","Uint8Array","readPixels","RGBA","UNSIGNED_BYTE","velocity_y","xStats","__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__","yStats","decoded_velocity_x","Float32Array","decoded_velocity_y","idx","vx","readFloat","vy","add","vectorLineInfo","__WEBPACK_IMPORTED_MODULE_7__bus___default","a","fire","__WEBPACK_IMPORTED_MODULE_3__colorProgram__","on","buffer","offset","__WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__","__WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__","__WEBPACK_IMPORTED_MODULE_7__bus__","n","4KA4","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default","BaseShaderNode","this","key","value","6c6E","UNIFORM","ANGLE","DUAL","CUSTOM","7QEO","timeStep","fadeOut","cx","cy","w","h","code","showBindings","particleCount","7l3+","normalizeProbabilities","sum","fList","forEach","element","getProbability","probability","generateArguments","item","p","Math","random","cumulativeProbability","Error","render","generate","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default","probabilityClass","POINT","LENGTH","cfProb","TRIGONOMETRY","ARITHMETICS","MINMAX","EXP","SIGN","BaseFunctionNode","className","SingleArgumentFunction","_BaseFunctionNode","operator","_this","__proto__","call","prevP","args","DualArgumentFunction","_BaseFunctionNode2","_this2","left","right","ConstantFunction","_BaseFunctionNode3","constant","_this3","b","85ps","getParsedVectorFieldFunction","vectorFieldCode","__WEBPACK_IMPORTED_MODULE_1__pragmaParser__","then","pragmaParseResult","getCode","parserResult","glslParser","check","globals","vectorFieldGlobals","log","errorCount","parserError","diag","diagnostics","firstError","range","lineColumn","source","_lineOffsets","line","contents","substr","column","substring","start","end","prefix","diagText","text","whitespace","errorDetail","isFloatError","indexOf","Array","join","__WEBPACK_IMPORTED_MODULE_0__bus__","__WEBPACK_IMPORTED_MODULE_0__bus___default","e","bind","catch","oe","8MpI","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__","__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default","__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__","ValueIntegrator","_BaseShaderNode","94y8","audioProgram","off","updateAudioBuffer","deleteTexture","updateTextures","audioDirty","TEXTURE_2D","texImage2D","audioBuffer","newBuffer","audioWidth","__WEBPACK_IMPORTED_MODULE_1__gl_utils__","createTexture","NEAREST","Aa0I","shaderBasedColor_WAS","vfCode","colorCode","color","color2","getVariables","udf","getDefines","integrate","getMethods","getFunctions","getColorFunctionBody","__WEBPACK_IMPORTED_MODULE_3__programs_colorModes__","r","g","r2","g2","b2","a2","getMain","__WEBPACK_IMPORTED_MODULE_1__UserDefinedVelocityFunction__","__WEBPACK_IMPORTED_MODULE_2__RungeKuttaIntegrator__","_color","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default","_color2","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__","C8nW","url","options","download","resolve","reject","updateProgress","lengthComputable","progress","loaded","total","percent","transferComplete","req","status","response","responseType","JSON","parse","transferFailed","transferCanceled","XMLHttpRequest","addEventListener","open","send","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__","Ddjs","unit","activeTexture","TEXTURE0","createBuffer","data","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","filter","width","height","texParameteri","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","TEXTURE_MIN_FILTER","TEXTURE_MAG_FILTER","FRAMEBUFFER","framebufferTexture2D","COLOR_ATTACHMENT0","attribute","numComponents","enableVertexAttribArray","vertexAttribPointer","FLOAT","vertexSource","fragmentSource","deleteProgram","vertexShader","createShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","wrapper","numAttributes","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","numUniforms","ACTIVE_UNIFORMS","uniform","getActiveUniform","getUniformLocation","type","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","DuZ1","__WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__","__WEBPACK_IMPORTED_MODULE_7__customInput__","UserDefinedVelocityFunction","newUpdateCode","FaU1","encodeFloatRGBA","val","out","writeOffset","mag","abs","exponent","floor","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default","exp2","mantissa","c","d","decodeFloatRGBA","A","B","C","D","exp","LN2","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__","HI/o","UserDefinedVelocityHamiltonianFunctions","updateHamiltonianCode","newUpdateHamiltonianCode","I6d+","createImageInputBinding","callbacks","handleError","setTexture","loadedTexture","__WEBPACK_IMPORTED_MODULE_3__bus___default","inputIndex","realIndex","FREE_TEXTURE_UNIT","__WEBPACK_IMPORTED_MODULE_0__loadTexture__","__WEBPACK_IMPORTED_MODULE_2__config__","__WEBPACK_IMPORTED_MODULE_3__bus__","JHsM","initScene","moveBoundingBox","changes","parsedBoundingBox","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default","assignIfPossible","undefined","heightChange","prevWidth","applyBoundingBox","change","newBoundingBox","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default","startRecord","capturer","currentCapturer","stopRecord","setColorMode","mode","parseInt","__WEBPACK_IMPORTED_MODULE_7__appState__","getColorMode","drawProgramField","updateColorMode","drawProgramBC","drawProgramValue","getIntegrationTimeStep","setIntegrationTimeStep","f","parseFloat","__WEBPACK_IMPORTED_MODULE_6__bus___default","setPaused","shouldPause","isPaused","nextFrame","setBCDrawingMode","shouldBCDrawingMode","bc_drawing_mode","setDrawFill","shouldDrawFill","draw_fill","setFieldMode","shouldFieldMode","field_mode","setFadeOutSpeed","fadeOpacity","setFadeout","getFadeOutSpeed","getFadeout","getParticlesCount","getParticleCount","setParticlesCount","newParticleCount","setParticleCount","setDropProbability","getDropProbability","onResize","setWidthHeight","window","innerWidth","innerHeight","screenProgram","updateScreenTextures","updateBoundingBox","currentPanZoomTransform","dx","max","dy","canvasRect","top","canvas","style","stop","panzoom","removeEventListener","cursorUpdater","vectorFieldEditorState","vectorFieldEditorStateBC","vectorFieldEditorStateValue","lastAnimationFrame","requestAnimationFrame","draw","cancelAnimationFrame","drawScreen","capture","fadeOutLastFrame","drawParticles","value_mode","value_transfer","drawing_click_sum","convertCursor2bcParams","renderCurrentScreen","getTextures","ceil","sqrt","restoreBBox","savedBBox","getBBox","sX","PI","E","sY","tX","tY","w2","h2","showRectangle","bottom","transform","clientX","scale","clientY","boundingBoxUpdated","round","saveBBox","resetBoundingBox","boundingBox","moveBy","field_color","field_color_second","reach_color","avoid_color","value_color","bc","getBC","bbox_at_bc_enc","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_json_stringify___default","disable","DEPTH_TEST","STENCIL_TEST","bc_reach_mode","bc_flip_mode","thresh","createFramebuffer","__WEBPACK_IMPORTED_MODULE_4__gl_utils__","colorFunction","getColorFunction","screenTextureUnit","inputsModel","__WEBPACK_IMPORTED_MODULE_14__createInputsModel__","__WEBPACK_IMPORTED_MODULE_9__programs_screenProgram__","__WEBPACK_IMPORTED_MODULE_11__programs_drawParticlesProgram_WAS__","__WEBPACK_IMPORTED_MODULE_12__utils_cursorUpdater__","__WEBPACK_IMPORTED_MODULE_13__editor_vectorFieldState__","encodeBCValue","api","getCanvasRect","getBoundingBox","getBoundaryConditionBox","__WEBPACK_IMPORTED_MODULE_5_panzoom___default","controller","__WEBPACK_IMPORTED_MODULE_8__wglPanZoom__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_json_stringify__","__WEBPACK_IMPORTED_MODULE_5_panzoom__","__WEBPACK_IMPORTED_MODULE_6__bus__","JjDM","M7m/","addMethods","producer","array","addMain","textureBasedPosition","__WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__","__WEBPACK_IMPORTED_MODULE_3__shaderBasedColor_WAS__","DrawParticleGraph_WAS","decodePositions","colorParts","methods","main","NEgR","qs","defined","defaults","cm","currentState","setColorFunction","cf","fadeout","fo","pc","dt","clamp","dp","qx","qy","shape","makeBBox","arguments","pendingSave","oldCode","__WEBPACK_IMPORTED_MODULE_4__wrapVectorField__","defaultVectorField","getDefaultCode","saveCode","vf","number","min","__WEBPACK_IMPORTED_MODULE_1_query_state__","__WEBPACK_IMPORTED_MODULE_1_query_state___default","__WEBPACK_IMPORTED_MODULE_2__bus__","__WEBPACK_IMPORTED_MODULE_2__bus___default","useSearch","rewriteHashToSearch","wrapVectorField","settingsPanel","collapsed","onChange","scene","OIwR","updatePositionProgram_WAS","texture_type","__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection_WAS__","reach","avoid","bc_textures","__WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph_WAS__","Qv35","__WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__","__WEBPACK_IMPORTED_MODULE_7__renderNodes__","__WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__","__WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__","__WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__","UpdatePositionGraph","readStoredPosition","udfVelocity","integratePositions","dropParticles","RandomParticleDropper","writeComputedPosition","panZoomDecode","decode","panZoomEncode","velocityCode","setNewUpdateCode","nodes","getMainBody","apply","S+/9","renderNodes","addToCode","node","Ug/m","__WEBPACK_IMPORTED_MODULE_9__UserDefinedVelocityHamiltonianFunctions__","__WEBPACK_IMPORTED_MODULE_10__PanzoomTransform__","__WEBPACK_IMPORTED_MODULE_11__RungeKuttaIntegrator__","__WEBPACK_IMPORTED_MODULE_12__TextureValueNode__","__WEBPACK_IMPORTED_MODULE_13__ValueIntegrator__","UpdatePositionGraph_WAS","readStoredValue","udfVelocityHamiltonian","integrateValues","writeComputedValue","V39N","makeStatCounter","reset","Number","POSITIVE_INFINITY","NEGATIVE_INFINITY","getMin","getMax","X++8","drawParticlesProgram_WAS","color_start","color_start2","initDrawProgram","drawProgram","drawGraph","__WEBPACK_IMPORTED_MODULE_2__shaderGraph_DrawParticleGraph_WAS__","vertexShaderCode","currentVectorField","onKeyUp","external_textures","particleIndices","particleStateX","particleStateY","__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__","particleIndexBuffer","deleteBuffer","valueIndices","valueReachRGBA","valueAvoidRGBA","reach_mode","avoid_mode","flip_mode","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default","sign","console","flr_ix","valueReachRGBA_enc","valueAvoidRGBA_enc","bc_val","old_val_rgba","slice","valueIndexBuffer","eraseBC","erase_reach","erase_avoid","a_index","u_particles_res","bbox_enc","u_min_enc","u_max_enc","bc_cx","bc_cy","bc_qx","bc_qy","bc_shape","POINTS","pow","onKeyDown","keysPressed","which","target","document","body","preventDefault","external_program","__WEBPACK_IMPORTED_MODULE_3__updatePositionProgram_WAS__","__WEBPACK_IMPORTED_MODULE_5__config__","isAudioEnabled","__WEBPACK_IMPORTED_MODULE_6__audioProgram__","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__","XFig","XMEc","__WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__","__WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__","TexturePosition","isDecode","YJWA","CCapture","ffmpegScriptLoaded","ffmpegServer","createElement","setAttribute","onload","head","appendChild","format","framerate","verbose","extension","codec","ffmpegArguments","isRecording","__WEBPACK_IMPORTED_MODULE_1__bus___default","FFMpegServer","save","Object","defineProperty","__WEBPACK_IMPORTED_MODULE_0__scene__","__WEBPACK_IMPORTED_MODULE_1__bus__","__WEBPACK_IMPORTED_MODULE_2__autoMode__","getElementById","ctxOptions","antialiasing","getContext","webGLEnabled","a8s+","aZPT","__WEBPACK_IMPORTED_MODULE_3__shaderBasedColor__","DrawParticleGraph","bvb0","getInputUniforms","bwl9","isSmallScreen","c5NW","shaderBasedColor","__WEBPACK_IMPORTED_MODULE_2__programs_colorModes__","__WEBPACK_IMPORTED_MODULE_0__UserDefinedVelocityFunction__","__WEBPACK_IMPORTED_MODULE_1__RungeKuttaIntegrator__","c5hq","createVectorFieldEditorState","parseCode","__WEBPACK_IMPORTED_MODULE_1__appState__","setCode","currentVectorFieldCode","trySetNewCode","result","cancelled","updateErrorInfo","customCode","__WEBPACK_IMPORTED_MODULE_2__getParsedVectorFieldFunction__","currentResult","currentVectorFieldVersion","capturedVersion","message","persistedCode","cj2E","field","eBcr","exports","eventify","egvE","loadTexture","reportError","rejectTexture","internalFormat","srcFormat","srcType","image","isPowerOf2","generateMipmap","LINEAR","resolveTexture","Image","crossOrigin","onerror","src","gIFv","colorProgram","disposeTextures","velocity_x_texture","velocity_y_texture","pendingSpeedUpdate","speedNeedsUpdate","u_velocity_range","velocityCounter","OUT_V_X","OUT_V_Y","updateMinMax","v","__WEBPACK_IMPORTED_MODULE_3__utils_makeStatCounter__","__WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__","h62Y","makeScreenProgram","screenTexture","lastRenderedBoundingBox","boundBoxTextureTransform","drawTexture","backgroundTexture","NO_TRANSFORM","saveLastBbox","enable","BLEND","blendFunc","SRC_ALPHA","ONE_MINUS_SRC_ALPHA","clearColor","backgroundColor","clear","COLOR_BUFFER_BIT","emptyPixels","opacity","textureTransform","u_screen","u_opacity_border","u_opacity","uniform3f","u_transform","i69e","RungeKuttaIntegrator","iw7m","fetchGLSL","trimmed","trim","cachedResponse","loadedLinks","__WEBPACK_IMPORTED_MODULE_2__utils_request__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map__","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map___default","jE6c","textureCollection_WAS","assignProgramUniforms","textures","tInfo","index","extra_tag","unit_offset","map","n67P","createInputCollection","inputBinding","prevBinding","boundInputs","currentProgram","updateInputBinding","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map___default","__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map__","p0IO","wglPanZoom","updateBoundingBoxCallback","lastDx","lastDy","lastScale","applyTransform","newTransform","getOwner","p2DF","p9aJ","createCursorUpdater","onMouseMove","onMouseClick","onTouchStart","onTouchMove","firstTouch","touches","setClick","setHover","getSceneXFromClientX","getSceneYFromClientY","pKWO","pXNl","textureCollection","rvz5","__WEBPACK_IMPORTED_MODULE_0__appState__","defaultConfig","vectorLinesEnabled","s3Ju","TextureValue","sbZs","initAutoMode","_scene","__WEBPACK_IMPORTED_MODULE_3__appState__","autoSource","includes","autoTime","warn","parsedMilliseconds","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_number_is_nan___default","test","delayTime","next","immediately","scheduledUpdate","__WEBPACK_IMPORTED_MODULE_6__wrapVectorField__","__WEBPACK_IMPORTED_MODULE_5__generate_equation__","incomingPresetsQueue","shuffle","__WEBPACK_IMPORTED_MODULE_4__autoPresets__","preset","shift","animateBBox","endBBox","startBBox","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default","startTime","Date","now","diffMinX","diffMaxX","diffMinY","diffMaxY","factor","inputArray","outputArray","j","__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__","__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_number_is_nan__","svlg","makePragmaParser","nullCode","parsedLines","processLineByLine","pending","all","outputLines","processPragma","pragmaInclude","include","insertIndex","currentIndex","__WEBPACK_IMPORTED_MODULE_1__fetchGLSL_js__","lines","split","vhRe","PanzoomTransform","config","srcPosName","posName"],"mappings":"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","file":"static/js/app.36b73a31145e8db7d8e8.js","sourcesContent":["webpackJsonp([4],{\n\n/***/ \"/eR5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createInputsModel;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__programs_inputs_inputCollection__ = __webpack_require__(\"n67P\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__programs_inputs_videoInput__ = __webpack_require__(\"p2DF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__programs_inputs_imageInput__ = __webpack_require__(\"I6d+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__appState_js__ = __webpack_require__(\"NEgR\");\n\n\n\n\n\n// Allows to bind media elements to vector field\nfunction createInputsModel(ctx) {\n  ctx.inputs = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__programs_inputs_inputCollection__[\"a\" /* default */])();\n  var inputs = [];\n  readInputsFromAppState();\n\n  var api = {\n    getInputs: getInputs,\n    addInput: addInput\n  };\n\n  return api;\n\n  function getInputs() {\n    return inputs;\n  }\n\n  function addInput(inputNumber) {\n    var vm = createInputElementViewModel(ctx, inputNumber);\n    inputs.push(vm);\n    return vm;\n  }\n\n  function readInputsFromAppState() {\n    var i0 = __WEBPACK_IMPORTED_MODULE_3__appState_js__[\"a\" /* default */].getQS().get('i0');\n    if (i0) {\n      var vm = addInput(0);\n      vm.link = i0;\n      vm.updateBinding( /* immediate = */true);\n    }\n  }\n}\n\nfunction createInputElementViewModel(ctx, inputNumber) {\n  var pendingUpdate = null;\n\n  var input = {\n    link: '',\n    error: null,\n    name: 'input' + inputNumber,\n    updateBinding: updateBinding\n  };\n\n  return input;\n\n  function updateBinding(immediate) {\n    if (pendingUpdate) {\n      clearTimeout(pendingUpdate);\n      pendingUpdate = null;\n    }\n\n    if (immediate) {\n      setBinding();\n    } else {\n      pendingUpdate = setTimeout(setBinding, 300);\n    }\n  }\n\n  function setBinding() {\n    input.error = null;\n    pendingUpdate = null;\n    var binding = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__programs_inputs_imageInput__[\"a\" /* default */])(ctx, input.link, {\n      done: function done() {\n        // TODO: Preview\n        __WEBPACK_IMPORTED_MODULE_3__appState_js__[\"a\" /* default */].getQS().set('i' + inputNumber, input.link);\n      },\n      error: function error(err) {\n        // TODO: Better Error checking\n        input.error = err;\n      }\n    });\n    ctx.inputs.bindInput(0, binding);\n  }\n}\n\n/***/ }),\n\n/***/ \"3xg8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = updatePositionProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__ = __webpack_require__(\"Qv35\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__colorModes__ = __webpack_require__(\"6c6E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__colorProgram__ = __webpack_require__(\"gIFv\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__ = __webpack_require__(\"pXNl\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__ = __webpack_require__(\"V39N\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__bus__);\n\n\n\n\n\n\n\n\n\nvar particlePositionShaderCodeBuilder = new __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph__[\"a\" /* default */]();\n\nfunction updatePositionProgram(ctx) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  var particleStateResolution;\n  var updateProgram;\n  var readVelocity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__colorProgram__[\"a\" /* default */])(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  var pendingVectorLines;\n\n  // TODO: need to make sure we are not leaking.\n  __WEBPACK_IMPORTED_MODULE_7__bus___default.a.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode: updateCode,\n    updateParticlesPositions: updateParticlesPositions,\n    updateParticlesCount: updateParticlesCount,\n    prepareToDraw: prepareToDraw\n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    var fragment = particlePositionShaderCodeBuilder.getFragmentShader();\n    var vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    var newProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n\n  function updateParticlesCount(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    readVelocity.updateParticlesCount();\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions() {\n    var program = updateProgram;\n    gl.useProgram(program.program);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    ctx.inputs.updateBindings(program);\n\n    // TODO: Remove this.\n    if (ctx.audioTexture) {\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n\n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n\n    // Draw each coordinate individually\n    for (var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound, i.e. allocate X ms to\n    // process particle positions, and move on. So that the rendering thread is not paused for too long\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    if (pendingVectorLines) {\n      processVectorLinesRequest(program);\n      pendingVectorLines = null;\n    }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  function putVectorLinesRequestIntoQueue(request) {\n    pendingVectorLines = request;\n  }\n\n  function processVectorLinesRequest(program) {\n    // TODO: Move this out\n    var dimensions = [{\n      name: 'x',\n      particleState: pendingVectorLines.x\n    }, {\n      name: 'y',\n      particleState: pendingVectorLines.y\n    }];\n\n    // We create temporary textures and load requested positions in there\n    var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n    var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n    var texturesForRead = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, resolutionOfParticlesInRequest);\n    var texturesForWrite = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection__[\"a\" /* default */])(gl, dimensions, resolutionOfParticlesInRequest);\n\n    texturesForRead.bindTextures(gl, program);\n\n    // Then we request coordinates out from GPU for each dimension\n    var writeInfo = texturesForWrite.get(0);\n    gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_x = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    gl.uniform1i(program.u_out_coordinate, 7); // v_y\n    writeInfo = texturesForWrite.get(1);\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_y = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    texturesForWrite.dispose();\n    texturesForRead.dispose();\n\n    var xStats = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__[\"a\" /* default */])();\n    var yStats = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__[\"a\" /* default */])();\n\n    var decoded_velocity_x = new Float32Array(numParticles);\n    var decoded_velocity_y = new Float32Array(numParticles);\n    for (var i = 0; i < velocity_y.length; i += 4) {\n      var idx = i / 4;\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      decoded_velocity_x[idx] = vx;\n      decoded_velocity_y[idx] = vy;\n      xStats.add(vx);\n      yStats.add(vy);\n    }\n\n    var vectorLineInfo = {\n      xStats: xStats,\n      yStats: yStats,\n      decoded_velocity_x: decoded_velocity_x,\n      decoded_velocity_y: decoded_velocity_y,\n      resolution: resolutionOfParticlesInRequest\n    };\n\n    __WEBPACK_IMPORTED_MODULE_7__bus___default.a.fire('vector-line-ready', vectorLineInfo);\n  }\n}\n\nfunction readFloat(buffer, offset) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__[\"b\" /* decodeFloatRGBA */])(buffer[offset + 0], buffer[offset + 1], buffer[offset + 2], buffer[offset + 3]);\n}\n\n/***/ }),\n\n/***/ \"4KA4\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n\n\n\nvar BaseShaderNode = function () {\n  function BaseShaderNode() {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, BaseShaderNode);\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(BaseShaderNode, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      return '';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '';\n    }\n  }]);\n\n  return BaseShaderNode;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (BaseShaderNode);\n\n/***/ }),\n\n/***/ \"6c6E\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * Various color modes.\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  /**\n   * Each particle gets its own color\n   */\n  UNIFORM: 1,\n\n  /**\n   * Color of a particle depends on its velocity\n   */\n  VELOCITY: 2,\n\n  /**\n   * Color of a particle depends on its velocity vector angle.\n   */\n  ANGLE: 3,\n\n  /**\n   * Each particle gets one of two colors\n   */\n  DUAL: 4,\n\n  /**\n   * The color comes from a shader. WIP\n   */\n  CUSTOM: 5\n});\n\n/***/ }),\n\n/***/ \"7QEO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony default export */ __webpack_exports__[\"a\"] = ([{\n  \"name\": \"Secret door\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": -0.15344999999999986,\n  \"cy\": -0.1291,\n  \"w\": 7.4611,\n  \"h\": 7.4611,\n  \"code\": \"// p.x and p.y are current coordinates\\n  // v.x and v.y is a velocity at point p\\n  vec2 get_velocity(vec2 p) {\\n    vec2 v = vec2(0., 0.);\\n\\n    // change this to get a new vector field\\n    v.x = p.y*p.y ;\\n    v.y = -p.x*p.x *.05;\\n\\n    return v;\\n  }\"\n}, {\n  \"name\": \"Miserables graph with edges\",\n  \"timeStep\": -0.001,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.008,\n  \"colorMode\": 2,\n  \"cx\": 0.467,\n  \"cy\": 1.5294,\n  \"w\": 0.9368,\n  \"h\": 0.9368,\n  \"showBindings\": 1,\n  \"i0\": \"https://gist.githubusercontent.com/anvaka/ebc18e3ffe05b0709a7ae933261fa2e9/raw/bafb63d01e0ab37c1f9b51522a5ec4fbc19bc4f1/edges.png\",\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  vec4 c = texture2D(input0, vec2(mod(p.x,1.), 1. - mod(p.y, 1.)));\\n  v.x = (c.r + c.g/255.) - 0.5;\\n  v.y = 0.5 - (c.b + c.a/255.);\\n\\n  if (length(v) < 0.1) v = vec2(0.);\\n  return (v);\\n}\",\n  \"particleCount\": 40000\n}, {\n  \"name\": \"Roads\",\n  \"timeStep\": 0.001,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 2,\n  \"cx\": 0.478,\n  \"cy\": 0.2636,\n  \"w\": 0.9922,\n  \"h\": 0.9922,\n  \"showBindings\": 0,\n  \"i0\": \"https://gist.githubusercontent.com/anvaka/ebc18e3ffe05b0709a7ae933261fa2e9/raw/cd7d82c5a235f50f5655ac94aa9077709731adde/binary_tree.png\",\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  vec4 c = texture2D(input0, vec2(mod(p.x,1.), 1. - mod(p.y, 1.)));\\n  v.x = (c.r + c.g/255.) - 0.5;\\n  v.y = 0.5 - (c.b + c.a/255.);\\n\\n  return (v);\\n}\",\n  \"particleCount\": 40000\n}, {\n  \"name\": \"Four counterclockwise cogs pushing particles clockwise :)\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0.7887499999999994,\n  \"cy\": -0.5769500000000001,\n  \"w\": 16.3759,\n  \"h\": 16.3759,\n  \"code\": \"vec2 field(vec2 p) {\\n  float d = length(p);\\n  return vec2(-p.y, p.x) * exp(-d*d*0.1);\\n}\\n// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v = field(p + vec2(-5., 0.)) +\\n    field(p + vec2(-2.5, 2.5)) +\\n    field(p + vec2(0., 0.)) +\\n    field(p + vec2(-2.5, -2.5));\\n  return v;\\n}\"\n}, {\n  \"name\": \"Waveshaping [interactive]\",\n  \"cx\": 0,\n  \"cy\": -0.060899999999999954,\n  \"w\": 12,\n  \"h\": 12,\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 2,\n  \"code\": \"float f(float x) {\\n  bool supportsHover = length(cursor.zw) > 0.01;\\n  vec2 c = supportsHover ? cursor.zw : cursor.xy;\\n  float f1 = sin(x);\\n  float f2 = sin(2.*x);\\n  float f3 = sin(3.*x);\\n  float f4 = sin(4.*x);\\n  float f5 = sin(5.*x);\\n  return f1 +\\n    f2*c.x/4. +\\n    f3*c.y/6. +\\n    f4*c.x/8. +\\n    f5*c.y/10.;\\n}\\n\\nfloat df(float x) {\\n  float h = 0.001;\\n  return (f(x+h)-f(x-h))/(2.*h);\\n}\\n\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  float fx = f(p.x);\\n  float d = abs(p.y-fx);\\n  float dfx = df(p.x);\\n  vec2 toOrigin = -p/(20.*length(p));\\n  vec2 toF = 0.1*vec2(0.,fx-p.y);\\n  v = d < 0.1 ? vec2(1.,dfx) : toF;\\n  return v;\\n}\",\n  \"particleCount\": 50000\n}, {\n  \"name\": \"Hex plane [interactive]\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.99,\n  \"dropProbability\": 0.99,\n  \"colorMode\": 3,\n  \"cx\": 0,\n  \"cy\": 0,\n  \"w\": 8.5398,\n  \"h\": 8.5398,\n  \"code\": \"vec2 nearest(vec2 p) {\\n// Charles Chambers black hex magic\\nfloat temp = floor(p.x + sqrt(3.) * p.y + 1.);\\nfloat q = floor((floor(2.*p.x+1.) + temp) / 3.);\\nfloat r = floor((temp + floor(-p.x + sqrt(3.) * p.y + 1.))/3.);\\nreturn vec2(q-p.y/2.,r-p.y/8.);\\n}\\n\\n// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n  float f = frame/1000.;\\n  float z = (3.-p.y)/(6.+cursor.zw.y*2.);\\n  float a = cursor.zw.x;\\n  vec2 r = vec2(cos(a)*p.x - sin(a)*p.y,sin(a)*p.x+cos(a)*p.y);\\n  vec2 t = vec2(r.x / z, r.y / z);\\n  vec2 n = nearest(t);\\n  v.x = t.x-n.x;\\n  v.y = t.y-n.y;\\n  return v;\\n}\",\n  \"particleCount\": 500000\n}, {\n  \"name\": \"Rain\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0,\n  \"cy\": 0,\n  \"w\": 8.5398,\n  \"h\": 8.5398,\n  \"code\": \"bool isUnshadowed(vec2 p) {\\n  bool upper = length(p) > 1.0 && p.y > 0.0;\\n  bool lower = length(p) > 1.0 && p.y < 0.0 && abs(p.x) > 1.0;\\n  return upper || lower;\\n}\\n\\nvec2 unshadowedV(vec2 p) {\\n  return vec2(0.0,-3.0+p.y);\\n}\\n\\nbool isSpray(vec2 p) {\\n  return length(p) > 1.0 && abs(p.x) < 1.0;\\n}\\n\\nvec2 sprayV(vec2 p) {\\n  float vy = -1.0+p.y;\\n  float vx = p.x > 0.0 ? (1.0-p.x)/vy : (-1.0-p.x)/vy;\\n  return vec2(vx,vy);\\n}\\n\\nbool isCircle(vec2 p) {\\n  return length(p) > 1.0 && length(p) < 1.05;\\n}\\n\\nvec2 circleV(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n  v.x = sign(p.x)* p.y;\\n  v.y = -abs(p.x);\\n  return v;\\n}\\n\\n// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  v = isCircle(p) ? circleV(p) :\\n      isUnshadowed(p) ? unshadowedV(p) :\\n      isSpray(p) ? sprayV(p) : vec2(1.0/0.0,1.0/0.0);\\n\\n  return v;\\n}\",\n  \"particleCount\": 10000\n}, {\n  \"name\": \"Mouse-driven Julia Set\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.9,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 3,\n  \"cx\": -0.27144999999999997,\n  \"cy\": 0.14175000000000004,\n  \"w\": 6.120699999999999,\n  \"h\": 6.120699999999999,\n  \"particleCount\": 1000000,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float a = cursor.zw.x;\\nfloat b = cursor.zw.y;\\nfloat sx = p.x/2.0;\\nfloat sy = p.y/2.0;\\nfloat i1x = sx*sx - sy*sy+a;\\nfloat i1y = -2.0*sx*sy+b;\\nfloat i2x = i1x*i1x - i1y*i1y+a;\\nfloat i2y = -2.0*i1x*i1y+b;\\nfloat i3x = i2x*i2x - i2y*i2y+a;\\nfloat i3y = -2.0*i2x*i2y+b;\\nfloat i4x = i3x*i3x - i3y*i3y+a;\\nfloat i4y = -2.0*i3x*i3y+b;\\nfloat i5x = i4x*i4x - i4y*i4y+a;\\nfloat i5y = -2.0*i4x*i4y+b;\\nfloat i6x = i5x*i5x - i5y*i5y+a;\\nfloat i6y = -2.0*i5x*i5y+b;\\nfloat i7x = i6x*i6x - i6y*i6y+a;\\nfloat i7y = -2.0*i6x*i6y+b;\\nfloat i8x = i7x*i7x - i7y*i7y+a;\\nfloat i8y = -2.0*i7x*i7y+b;\\nfloat i9x = i8x*i8x - i8y*i8y+a;\\nfloat i9y = -2.0*i8x*i8y+b;\\n\\n  float n = sqrt(i9x*i9x+i9y*i9y);\\n\\nv.x = n > 2.0 ? -p.x/10.0 : p.x/10.0;\\nv.y = n > 2.0 ? -p.y/10.0 : p.y/10.0;\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"Hyperjump\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 2,\n  \"cx\": 0.523299999999999,\n  \"cy\": 1.2703999999999995,\n  \"w\": 48.3842,\n  \"h\": 48.3842,\n  \"code\": \"vec2 circle(vec2 p, vec2 c) {\\n  vec2 c0 = p - c;\\n  vec2 p0 = vec2(-c0.y, c0.x);\\n  float l = length(p0);\\n  return p0 * exp(-l*sin(frame*0.01));\\n}\\n// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = circle(p, vec2(0., 0.));\\n\\n  float r = 7.;\\n  for (int i = 0; i < 2; ++i) {\\n    float a = 0.01 * frame + float(i) * 2.*PI/7.;\\n    v += circle(p, vec2(r * cos(a) , r * sin(a)));\\n  }\\n  return v;\\n}\",\n  \"particleCount\": 30000\n}, {\n  \"name\": \"Particle Grinder\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0.028149999999999675,\n  \"cy\": 0.08830000000000005,\n  \"w\": 9.045300000000001,\n  \"h\": 9.045300000000001,\n  \"code\": \"vec2 tensor(vec2 p, vec2 c0, vec4 abcd, float N) {\\n  vec2 p0 = p - c0;\\n  float theta = atan(p0.y, p0.x);\\n  float c = cos(N * theta);\\n  float s = sin(N * theta);\\n  return length(p0) * vec2(abcd[2] * c + abcd[3] * s,\\n              abcd[0] * c + abcd[1] * s);\\n}\\n\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n  v = tensor(p, vec2(0., 0.), vec4(-2., 0., 0., 1.), 2.);\\n  return v;\\n}\"\n}, {\n  \"name\": \"Hyperbolic flux [interactive]\",\n  \"timeStep\": 0.001,\n  \"fadeOut\": 0.999,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 3,\n  \"cx\": -0.11990000000000034,\n  \"cy\": 0.018899999999999917,\n  \"w\": 8.5442,\n  \"h\": 8.5442,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  float ax = (cursor.zw.x - p.x);\\n  float ay = (cursor.zw.y - p.y);\\n  float al = sqrt(ax*ax+ay*ay);\\n\\n  float rx = (p.x-cursor.xy.x);\\n  float ry = (p.y-cursor.xy.y);\\n  float rl = sqrt(rx*rx+ry*ry);\\n\\n  // change this to get a new vector field\\n  v.x = (ax*ax*ry + ay*rx*rx)/(al*rl);\\n  v.y = (ay*ay*rx + ax*ry*ry)/(al*rl);\\n\\n  return v;\\n}\",\n  \"particleCount\": 1000000\n}, {\n  \"name\": \"Swim against the current\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 3,\n  \"cx\": 3.0524500000000003,\n  \"cy\": -1.3792,\n  \"w\": 8.5397,\n  \"h\": 8.5397,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float dx1 = cursor.zw.x - p.x;\\nfloat dy1 = cursor.zw.y - p.y;\\nfloat dl1 = sqrt(dx1*dx1+dy1*dy1);\\ndx1 = dx1/dl1;\\ndy1 = dy1/dl1;\\n\\nfloat dx2 = cursor.xy.x - p.x;\\nfloat dy2 = cursor.xy.y - p.y;\\nfloat dl2 = sqrt(dx2*dx2+dy2*dy2);\\ndx2 = dx2/dl2;\\ndy2 = dy2/dl2;\\n\\nfloat fx = cursor.xy.x - cursor.zw.x;\\nfloat fy = cursor.xy.y -\\ncursor.zw.y;\\nfloat fl = sqrt(fx*fx+fy*fy);\\nfx = -fx/fl;\\nfy = -fy/fl;\\n\\nfloat d1 = (dx1*fx + dy1*fy)/(dl1*fl);\\nfloat d2 = 1.-d1;\\nv.x = d1*fx+d2*dx2;\\nv.y = d1*fy+d2*dy2;\\n\\n  return v;\\n}\",\n  \"particleCount\": 100900\n}, {\n  \"name\": \"Eye of Sauron (interactive)\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.988,\n  \"dropProbability\": 0.008,\n  \"colorMode\": 2,\n  \"cx\": 0.3991000000000007,\n  \"cy\": -0.11315000000000008,\n  \"w\": 37.0984,\n  \"h\": 37.0984,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  // calculate distortion map (reverse solver)\\n// the distortion map is based on a sphere, but smoothed to the ends: sqrt(1-(x^8/(x^8-1))^(1/4))\\n\\nfloat dist_radius = 7.8;\\nvec2 distortion = cursor.zw;\\nif (length(distortion) > 4.5) {\\n    distortion = normalize(distortion) *4.5;\\n}\\n\\n// iterative reverse algo. after all, we knew the result position already, we're trying to reason back to what the original position was\\nvec2 d = p;\\nfor (int i = 0; i < 10; i++) {\\n    // calculate distortion effect magnitude\\n    float d_scale = pow(length(d) / dist_radius, 8.);\\n    // pseudo sphere map\\n    d_scale = pow(1. - pow(d_scale / (d_scale + 1.), .25), .5);\\n    d = p - distortion * d_scale;\\n}\\n\\n// calculate differentials, working backwards (i.e. what change in p would result from a change in d)\\nvec2 d_dx  = d + vec2(0.1, 0.0);\\nfloat d_dx_scale = pow(length(d_dx) / dist_radius, 8.);\\nd_dx_scale = pow(1. - pow(d_dx_scale / (d_dx_scale + 1.), .25), .5);\\nvec2 dx = (d_dx + distortion * d_dx_scale - p) / 0.1;\\n\\nvec2 d_dy  = d + vec2(0.0, 0.1);\\nfloat d_dy_scale = pow(length(d_dy) / dist_radius, 8.);\\nd_dy_scale = pow(1. - pow(d_dy_scale / (d_dy_scale + 1.), .25), .5);\\nvec2 dy = (d_dy + distortion * d_dy_scale - p) / 0.1;\\n\\n// center parts\\nfloat pupilrange = length(vec2(d.y, d.x + 6.*sign(d.x)));\\nvec2 pupilborder = 2.6*vec2(-d.y, (d.x + 6.*sign(d.x)) );\\nv += pupilborder * smoothstep(6.6, 6.8, pupilrange) * (1. - smoothstep(6.9, 7.1, pupilrange));\\n\\nfloat range = length(d);\\nvec2 iris = 7.*d/sqrt(range);\\nv += iris * smoothstep(7.0, 7.5, pupilrange) * (1. - smoothstep(3.8, 4.0, range));\\n\\nvec2 pupil = 1.*vec2(d.x+1.*sign(d.x), d.y);\\nv += pupil * (1. - smoothstep(6.6, 6.8, pupilrange));\\n\\n// absolute parts\\nvec2 psign = sign(d);\\nvec2 a = abs(d);\\nvec2 vabs = vec2(0.0, 0.0);\\n\\nfloat borderrange = length(vec2(d.x, d.y + 7.*sign(d.y)));\\nvec2 border = -1.5*vec2(a.y + 7.*sign(a.y) - 3./(a.y + 1.), -a.x + 3./(a.x + 1.));\\nvabs += border * smoothstep(10.8, 11.25, borderrange) * (1. - smoothstep(11.25, 11.7, borderrange)) * smoothstep(3.8, 4.1, range) * (a.y / (a.y + 1.));\\n\\nvec2 irisborder = 5.*vec2(a.y, -a.x) * (a.y / (a.y + 3.))+ .2 * a;\\nvabs += irisborder * smoothstep(3.8, 4.25, range) * (1. - smoothstep(4.25, 4.7, range));\\n\\nvec2 white = 12.*vec2(1.0, -0.2 * (a.y));\\nvabs += white * smoothstep(4.3, 4.5, range) * (1. - smoothstep(11., 11.3, borderrange));\\n\\nv += vabs * psign;\\n\\n// outside part\\nvec2 outside = d / pow(borderrange - 10., 2.);\\nv -= outside * smoothstep(11.3, 11.5, borderrange);\\n\\n// velocity distortion mapping\\nv = v.x * dx + v.y * dy;\\n\\n// color mapping\\nif (length(v) > 0.01) {\\n    v = normalize(v) * 10.;\\n}\\nv = v / (1. + 0.1 * (borderrange - 10.) * smoothstep(11.5, 12.5, borderrange));\\n\\n\\n\\n  return v;\\n}\",\n  \"particleCount\": 30000\n}, {\n  \"name\": \"Combination of two fields. One follows cursor\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0,\n  \"cy\": 0,\n  \"w\": 8.5398,\n  \"h\": 8.5398,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  vec2 p1 = p - vec2(-2., 0.);\\nvec2 p2 = p - cursor.zw;\\n\\nfloat l1 = length(p1), l2 = length(p2);\\n\\nv = vec2(-p1.y, p1.x)/(l1 * l1) + vec2(-p2.y, p2.x)/(l2 * l2);\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"[Randomized] nice symmetry\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.988,\n  \"dropProbability\": 0.008,\n  \"colorMode\": 2,\n  \"cx\": -2.6390499999999992,\n  \"cy\": -1.1419499999999996,\n  \"w\": 46.508700000000005,\n  \"h\": 46.508700000000005,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v.x = p.y/cos(length(p));\\n  v.y = max((log(p.y)+p.x),p.x);\\n\\n  return v;\\n}\",\n  \"particleCount\": 20000\n}, {\n  \"name\": \"A city block from a parallel Universe (by @MananG_8)\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.988,\n  \"dropProbability\": 0.008,\n  \"colorMode\": 1,\n  \"cx\": 0.6165500000000002,\n  \"cy\": -1.87745,\n  \"w\": 9.0455,\n  \"h\": 9.0455,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v.x = sin(tan(p.x))*cos(tan(p.y));\\n  v.y = sin(tan(p.y))*cos(tan(p.x));\\n\\n  return v;\\n}\\n\",\n  \"particleCount\": 20000\n}, {\n  \"name\": \"♥ by @SAKrisT\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 2,\n  \"cx\": -1.4246499999999997,\n  \"cy\": 0.92285,\n  \"w\": 8.5397,\n  \"h\": 8.5397,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float size = 1.0;\\n  vec2 o = (p)/(1.6* size);\\n  float a = o.x*o.x+o.y*o.y-0.3;\\n  v = vec2(step(a*a*a, o.x*o.x*o.y*o.y*o.y));\\n\\n  return v;\\n}\\n\"\n}, {\n  \"name\": \"Dynamic vector field by Evgeniy Andreev. Not defined by physical system, but beautiful.\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 3,\n  \"cx\": -1.6564499999999995,\n  \"cy\": -0.36424999999999974,\n  \"w\": 24.7317,\n  \"h\": 24.7317,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float dt = 0.01;\\n  float t = frame*dt;\\n  float w = 2.*PI/5.;\\n  float A = 2.;\\n\\n  float d = sqrt(p.x*p.x + p.y*p.y);\\n  v.x = A*cos(w*t/d);\\n  v.y = A*sin(w*t/d);\\n\\n  return v;\\n}\",\n  \"particleCount\": 3000\n}, {\n  \"name\": \"Behold (by /u/censored_username)\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.988,\n  \"dropProbability\": 0.008,\n  \"colorMode\": 2,\n  \"cx\": 0.12704999999999966,\n  \"cy\": 0.1923499999999998,\n  \"w\": 22.5709,\n  \"h\": 22.5709,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float x = abs(p.x) - 5.;\\n  float side = sign(p.x);\\n  float range = length(vec2(x, p.y));\\n  float irisrange = length(vec2(x, p.y + 2.*sign(p.y)));\\n\\n  vec2 border = 1.*vec2(p.y + 2.2*sign(p.y) * (p.y*p.y / (p.y*p.y + 0.01)), -x);\\n\\n  vec2 outside = vec2(x / (1.+10./abs(p.x*p.x)), p.y);\\n\\n  vec2 spiral = vec2(p.y, -x);\\n\\n  vec2 iris = sin(-range * 10.) * spiral + 0.05*vec2(x, p.y);\\n\\n  v += outside * (smoothstep(4.0, 4.5, irisrange)/range*5. - 5.*smoothstep(0.9, 0.7, range)/range);\\n  v += border * smoothstep(3.5, 4., irisrange) * smoothstep(4.5, 4., irisrange);\\n  v += iris * smoothstep(2.0, 1.5, range) * smoothstep(0.8, 1., range);\\n  v -= 10.0*spiral * smoothstep(1.0, 0.8, range) * smoothstep(0.7, 0.9, range);\\n\\n  v.x *= side;\\n  v *= -1.;\\n\\n  return v;\\n}\",\n  \"particleCount\": 30000\n}, {\n  \"name\": \"README 1\",\n  \"timeStep\": 0.007,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": -1.275949999999999,\n  \"cy\": -1.6277,\n  \"w\": 30.2937,\n  \"h\": 30.2937,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v.x = length(p)*min(sin(p.y),cos(p.x));\\nv.y = cos((p.y+p.y));\\n\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"README 2\",\n  \"timeStep\": 0.007,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": -1.275949999999999,\n  \"cy\": -1.62765,\n  \"w\": 30.2937,\n  \"h\": 30.2937,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v.x = cos(p.y);\\nv.y = cos(p.x);\\n\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"README 3\",\n  \"timeStep\": 0.02,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0.21419999999999995,\n  \"cy\": -0.7710999999999997,\n  \"w\": 55.970200000000006,\n  \"h\": 55.970200000000006,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v.x = min(sin(exp(p.x)),sin(length(p)));\\nv.y = sin(p.x);\\n\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"README 4\",\n  \"timeStep\": 0.02,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 2.43185,\n  \"cy\": -1.1695,\n  \"w\": 11.4385,\n  \"h\": 11.4385,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v.x = (p.y+cos(p.y));\\nv.y = sin(min(length(p),log((p.y+p.x))*p.x));\\n\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"True Dipole\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0,\n  \"cy\": 0,\n  \"w\": 8.5398,\n  \"h\": 8.5398,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float x = p.x;\\nfloat y = p.y;\\n\\n// true dipole\\nv.x = 2.0*x*y;\\nv.y = y*y - x*x;\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"Flow profile of a sphere\",\n  \"timeStep\": 0.011,\n  \"fadeOut\": 0.99999,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": -0.7177000000000002,\n  \"cy\": -0.11769999999999992,\n  \"w\": 11.434999999999999,\n  \"h\": 11.434999999999999,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float x = p.x;\\nfloat y = p.y;\\nfloat r = sqrt(x*x+y*y);\\nfloat sinth = y/r;\\nfloat costh = x/r;\\nfloat R = 1.;\\nfloat Uinf = 1.;\\n// radial flow\\nfloat ur = Uinf*(1.-1.5*R/r+0.5*R*R*R/(r*r*r))*costh;\\n// theta flow\\nfloat uth = Uinf*(-1.+0.75*R/r+0.25*R*R*R/(r*r*r))*sinth;\\n// to ux uy\\nv.x = costh*ur-sinth*uth;\\nv.y = sinth*ur+costh*uth;\\n\\n  return v;\\n}\",\n  \"particleCount\": 7000\n}, {\n  \"name\": \"Best vortex\",\n  \"colorMode\": 2,\n  \"cx\": -6.158449999999998,\n  \"cy\": -0.9834499999999995,\n  \"w\": 96.8415,\n  \"h\": 96.8415,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float r = length(p);\\nfloat theta = atan(p.y, p.x);\\nv = vec2(p.y, -p.x) / r;\\nfloat t = sqrt(r * 10.) + theta + frame * .02;\\nv *= sin(t);\\nv *= length(v) * 10.;\\nv += p * .2;\\n\\n  return v;\\n}\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.9,\n  \"dropProbability\": 0.009,\n  \"particleCount\": 100000\n}, {\n  \"name\": \"Black hole\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": -0.47934999999999994,\n  \"cy\": 0.3591500000000001,\n  \"w\": 8.5397,\n  \"h\": 8.5397,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float a = .1;\\nfloat r2 = p.x * p.x + p.y * p.y;\\nv = vec2(p.y, -p.x) / r2 - a * p;\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"Julia set\",\n  \"timeStep\": 0.004,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": -0.40235,\n  \"cy\": -0.01795000000000002,\n  \"w\": 5.0845,\n  \"h\": 5.0845,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  vec2 c = p;\\nvec2 z = vec2(.4, .5);\\nfor (int i = 0; i < 8; i++) {\\n   c = vec2(c.x * c.x - c.y * c.y, c.y * c.x + c.x * c.y);\\n   c += z;\\n}\\nv = c;\\n\\n\\n  return v;\\n}\",\n  \"particleCount\": 10000\n}, {\n  \"name\": \"Mandelbrot set\",\n  \"timeStep\": 0.004,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 3,\n  \"cx\": -0.5678,\n  \"cy\": -0.07015000000000005,\n  \"w\": 4.9902,\n  \"h\": 4.9902,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  vec2 z = p;\\nfor(int k=0; k<50; k++) {\\nz = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y) + p;\\n}\\n\\nfloat mask = step(length(z), 2.);\\nv.x = -p.y/length(p) * (0.5 - mask);\\nv.y = p.x/length(p) * (0.5 - mask);\\n\\n\\n\\n\\n  return v;\\n}\",\n  \"particleCount\": 30000\n}, {\n  \"name\": \"Reflecting pool\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0,\n  \"cy\": 0,\n  \"w\": 8.5398,\n  \"h\": 8.5398,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  v.x = sin(5.0*p.y + p.x);\\nv.y = cos(5.0*p.x - p.y);\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"Shear zone\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 1,\n  \"cx\": 0,\n  \"cy\": 0,\n  \"w\": 8.539734222673566,\n  \"h\": 8.539734222673566,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float r = length(p) - 1.5;\\nfloat c = 1.0/(1.0+exp(-5.0*r));\\nfloat vx1 = -p.y,  // circle\\n      vy1 = p.x;\\nfloat vx2 = 0.2*p.x+p.y, // spiral\\n      vy2 = 0.2*p.y-p.x;\\nv.x = c*vx1 + (1.0-c)*vx2;\\nv.y = c*vy1 + (1.0-c)*vy2;\\n\\n\\n  return v;\\n}\"\n}, {\n  \"name\": \"Beautiful field\",\n  \"timeStep\": 0.01,\n  \"fadeOut\": 0.998,\n  \"dropProbability\": 0.009,\n  \"colorMode\": 3,\n  \"cx\": -1.6564499999999995,\n  \"cy\": -0.36424999999999974,\n  \"w\": 24.7317,\n  \"h\": 24.7317,\n  \"code\": \"// p.x and p.y are current coordinates\\n// v.x and v.y is a velocity at point p\\nvec2 get_velocity(vec2 p) {\\n  vec2 v = vec2(0., 0.);\\n\\n  // change this to get a new vector field\\n  float dt = 0.01;\\nfloat t = frame*dt;\\nfloat w = 2.*PI/5.;\\nfloat A = 2.;\\n\\nfloat d = sqrt(p.x*p.x + p.y*p.y);\\nv.x = A*cos(w*t/d);\\nv.y = A*sin(w*t/d);\\n\\n  return v;\\n}\",\n  \"particleCount\": 3000\n}]);\n\n/***/ }),\n\n/***/ \"7l3+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = generate;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);\n\n\n\n\n\n/**\n * A tiny toy equation generator. It is very naive, and does silly things\n * sometimes. Feel free to improve.\n */\n\nvar cfProb = 10; // base probability to generate a point.\n\nvar probabilityClass = {\n  POINT: cfProb,\n  LENGTH: cfProb * 0.5,\n  TRIGONOMETRY: cfProb * 0.9,\n  ARITHMETICS: cfProb * 0.6,\n  MINMAX: cfProb * 0.4,\n  EXP: cfProb * 0.1,\n  SIGN: cfProb * 0.01\n};\n\nvar BaseFunctionNode = function () {\n  function BaseFunctionNode(className) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, BaseFunctionNode);\n\n    this.probability = 0;\n    this.className = className;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(BaseFunctionNode, [{\n    key: 'getProbability',\n    value: function getProbability() {\n      return probabilityClass[this.className];\n    }\n  }, {\n    key: 'render',\n    value: function render() {\n      return '';\n    }\n  }]);\n\n  return BaseFunctionNode;\n}();\n\nvar SingleArgumentFunction = function (_BaseFunctionNode) {\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(SingleArgumentFunction, _BaseFunctionNode);\n\n  function SingleArgumentFunction(operator, p) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, SingleArgumentFunction);\n\n    var _this = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, (SingleArgumentFunction.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(SingleArgumentFunction)).call(this, p));\n\n    _this.operator = operator;\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(SingleArgumentFunction, [{\n    key: 'render',\n    value: function render() {\n      var prevP = this.p;\n\n      var prevP = this.getProbability();\n      probabilityClass[this.className] *= 0.25;\n      normalizeProbabilities();\n      var args = generateArguments();\n      probabilityClass[this.className] = prevP;\n      normalizeProbabilities();\n      return this.operator(args);\n    }\n  }]);\n\n  return SingleArgumentFunction;\n}(BaseFunctionNode);\n\nvar DualArgumentFunction = function (_BaseFunctionNode2) {\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(DualArgumentFunction, _BaseFunctionNode2);\n\n  function DualArgumentFunction(operator, p) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, DualArgumentFunction);\n\n    var _this2 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, (DualArgumentFunction.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(DualArgumentFunction)).call(this, p));\n\n    _this2.operator = operator;\n    return _this2;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(DualArgumentFunction, [{\n    key: 'render',\n    value: function render() {\n      // Decrease our probability to appear\n      var prevP = this.getProbability();\n      probabilityClass[this.className] *= 0.25;\n\n      normalizeProbabilities();\n      var left = generateArguments();\n      var right = generateArguments();\n      // revert it back;\n      probabilityClass[this.className] = prevP;\n      normalizeProbabilities();\n      return this.operator(left, right);\n    }\n  }]);\n\n  return DualArgumentFunction;\n}(BaseFunctionNode);\n\nvar ConstantFunction = function (_BaseFunctionNode3) {\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(ConstantFunction, _BaseFunctionNode3);\n\n  function ConstantFunction(constant, p) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, ConstantFunction);\n\n    var _this3 = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, (ConstantFunction.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(ConstantFunction)).call(this, p));\n\n    _this3.constant = constant;\n    return _this3;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(ConstantFunction, [{\n    key: 'render',\n    value: function render() {\n      return this.constant;\n    }\n  }]);\n\n  return ConstantFunction;\n}(BaseFunctionNode);\n\nvar fList = [new ConstantFunction('p.x', 'POINT'), new ConstantFunction('p.y', 'POINT'),\n\n// new DualArgumentFunction((a, b) => `length(vec2(${a}, ${b}))`, 'TRIGONOMETRY'),\nnew ConstantFunction('length(p)', 'LENGTH'), new SingleArgumentFunction(function (a) {\n  return 'sin(' + a + ')';\n}, 'TRIGONOMETRY'), new SingleArgumentFunction(function (a) {\n  return 'cos(' + a + ')';\n}, 'TRIGONOMETRY'),\n// new SingleArgumentFunction(a => `sqrt(${a})`, cfProb * 0.8),\n// new SingleArgumentFunction(a => `inversesqrt(${a})`, cfProb * 0.8),\n\n\nnew DualArgumentFunction(function (a, b) {\n  return a + '*' + b;\n}, 'ARITHMETICS'), new DualArgumentFunction(function (a, b) {\n  return a + '/' + b;\n}, 'ARITHMETICS'), new DualArgumentFunction(function (a, b) {\n  return '(' + a + '+' + b + ')';\n}, 'ARITHMETICS'), new DualArgumentFunction(function (a, b) {\n  return '(' + a + '-' + b + ')';\n}, 'ARITHMETICS'), new DualArgumentFunction(function (a, b) {\n  if (a === b) return a;\n  return 'min(' + a + ',' + b + ')';\n}, 'MINMAX'), new DualArgumentFunction(function (a, b) {\n  if (a === b) return a;\n  return 'max(' + a + ',' + b + ')';\n}, 'MINMAX'), new SingleArgumentFunction(function (a) {\n  return 'log(' + a + ')';\n}, 'EXP'), new SingleArgumentFunction(function (a) {\n  return 'exp(' + a + ')';\n}, 'EXP'), new DualArgumentFunction(function (a, b) {\n  return 'pow(' + a + ', ' + b + ')';\n}, 'EXP'), new SingleArgumentFunction(function (a) {\n  return 'abs(' + a + ')';\n}, 'SIGN'), new SingleArgumentFunction(function (a) {\n  return 'sign(' + a + ')';\n}, 'SIGN')];\n\nfunction normalizeProbabilities() {\n  var sum = 0;\n  fList.forEach(function (element) {\n    return sum += element.getProbability();\n  });\n  fList.forEach(function (element) {\n    return element.probability = element.getProbability() / sum;\n  });\n}\n\nfunction generateArguments() {\n  var p = Math.random();\n  var cumulativeProbability = 0;\n  var item;\n  for (var i = 0; i < fList.length; ++i) {\n    item = fList[i];\n    cumulativeProbability += item.probability;\n    if (p < cumulativeProbability) {\n      break;\n    }\n  }\n\n  if (!item) throw new Error('no more items');\n\n  return item.render();\n}\n\nfunction generate() {\n  normalizeProbabilities();\n  var vX = generateArguments();\n  var vY = generateArguments();\n  return 'v.x = ' + vX + ';\\n  v.y = ' + vY + ';';\n}\n\n/***/ }),\n\n/***/ \"85ps\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getParsedVectorFieldFunction;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__pragmaParser__ = __webpack_require__(\"svlg\");\n/**\n * This module parses user defined vector field code.\n */\n\n\n\n\n// This is naive parser that is being used until the real `glsl-parser`\n// is loaded asynchronously. This parser assumes there are no errors\n// TODO: maybe I should be more careful here?\nvar glslParser = {\n  check: function check(code) {\n    return {\n      code: code,\n      log: {\n        errorCount: 0\n      }\n    };\n  }\n};\n\n// glsl-parser is ~179KB uncompressed, we don't want to wait until it is downloaded.\n// So we load it asynchronously...\n__webpack_require__.e/* require.ensure */(2).then((function () {\n  // ... and replace the naive parser with the real one, when ready.\n  glslParser = __webpack_require__(\"TFw8\");\n\n  // notify interested parties, so that they can recheck code if they wish.\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.fire('glsl-parser-ready');\n}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\nvar vectorFieldGlobals = '\\nimport {\\n  float PI;\\n  float snoise(vec2 v);\\n  float frame;\\n  vec4 cursor;\\n  vec2 rotate(vec2 p,float a);\\n  float audio(float index);\\n  float rand(const vec2 co);\\n  sampler2D input0;\\n  sampler2D input1;\\n}';\n\n/**\n * Given a string, verifies that it is a valid glsl code for a vector field,\n * and then returns code + log.\n * \n * @param {String} vectorFieldCode \n */\nfunction getParsedVectorFieldFunction(vectorFieldCode) {\n  // TODO: what if we want to support 3d?\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__pragmaParser__[\"a\" /* default */])(vectorFieldCode).then(function (pragmaParseResult) {\n    if (pragmaParseResult.error) {\n      return pragmaParseResult;\n    }\n\n    vectorFieldCode = pragmaParseResult.getCode();\n\n    var parserResult = glslParser.check(vectorFieldCode, { globals: vectorFieldGlobals });\n    parserResult.code = vectorFieldCode;\n\n    if (parserResult.log.errorCount) parserResult.error = parserError(parserResult.log);\n\n    return parserResult;\n  });\n}\n\nfunction parserError(log) {\n  var diag = log.diagnostics[0];\n  // TODO probably need to check kind (errors are 0, warnings are 1)\n  var firstError = diag.range;\n  var lineColumn = firstError.lineColumn();\n  var source = firstError.source;\n  var offset = source._lineOffsets[lineColumn.line];\n  var line = source.contents.substr(offset, lineColumn.column);\n  line += source.contents.substring(firstError.start, firstError.end);\n  var prefix = 'Line ' + lineColumn.line + ': ';\n  var diagText = diag.text;\n  return {\n    error: prefix + line + '\\n' + whitespace(prefix.length) + whitespace(lineColumn.column) + '^',\n    errorDetail: diagText,\n    isFloatError: isFloatError(diagText)\n  };\n}\n\nfunction isFloatError(diagText) {\n  return diagText.indexOf('\"int\"') > -1 && diagText.indexOf('\"float\"') > -1;\n}\n\nfunction whitespace(length) {\n  return new Array(length + 1).join(' ');\n}\n\n/***/ }),\n\n/***/ \"8MpI\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n\n\n\n\n\n\n\nvar ValueIntegrator = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(ValueIntegrator, _BaseShaderNode);\n\n  function ValueIntegrator() {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, ValueIntegrator);\n\n    return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (ValueIntegrator.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(ValueIntegrator)).call(this));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(ValueIntegrator, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_h;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      return '\\nvec2 rk4(const vec2 point) {\\n  vec2 k1 = get_velocity( point );\\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\\n  vec2 k4 = get_velocity( point + k3 * u_h);\\n\\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\\n}';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n    // vec2 velocity = rk4(pos);\\n    // float valVelocity = -0.;\\n    // float valVelocity = -0.002;\\n\\n    vec2 costate = state;\\n    float time = frame * u_h;\\n    float valVelocity = get_hamiltonian(state, costate, time);\\n\\n';\n    }\n  }]);\n\n  return ValueIntegrator;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (ValueIntegrator);\n\n/***/ }),\n\n/***/ \"94y8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n\n\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (audioProgram);\n\nfunction audioProgram(ctx) {\n  var gl = ctx.gl;\n\n  var audioWidth = 8,\n      audioHeight = 8;\n  var audioBuffer = new Uint8Array(audioWidth * audioHeight * 4);\n  var audioTexture = __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, audioBuffer, audioWidth, audioHeight);\n  var audioDirty = false;\n  ctx.audioTexture = audioTexture;\n\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.on('audio', updateAudioBuffer);\n\n  return {\n    updateTextures: updateTextures,\n    dispose: dispose\n  };\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_0__bus___default.a.off('audio', updateAudioBuffer);\n    gl.deleteTexture(audioTexture);\n  }\n\n  function updateTextures() {\n    if (!audioDirty) return;\n    audioDirty = false;\n\n    // TODO: This should come from fftSize?\n    var width = 5,\n        height = 5;\n    gl.bindTexture(gl.TEXTURE_2D, audioTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, audioBuffer);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  function updateAudioBuffer(newBuffer) {\n    audioBuffer = newBuffer;\n    audioDirty = true;\n  }\n}\n\n/***/ }),\n\n/***/ \"Aa0I\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = shaderBasedColor_WAS;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__ = __webpack_require__(\"d7EF\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__ = __webpack_require__(\"6c6E\");\n\n\n\n\n\nfunction shaderBasedColor_WAS(colorMode, vfCode, colorCode, color, color2) {\n  var udf = new __WEBPACK_IMPORTED_MODULE_1__UserDefinedVelocityFunction__[\"a\" /* default */](vfCode);\n  var integrate = new __WEBPACK_IMPORTED_MODULE_2__RungeKuttaIntegrator__[\"a\" /* default */]();\n\n  var _color = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(color, 4),\n      r = _color[0],\n      g = _color[1],\n      b = _color[2],\n      a = _color[3];\n\n  var _color2 = __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_slicedToArray___default()(color2, 4),\n      r2 = _color2[0],\n      g2 = _color2[1],\n      b2 = _color2[2],\n      a2 = _color2[3];\n\n  return {\n    getVariables: getVariables,\n    getMain: getMain,\n    getMethods: getMethods\n  };\n\n  function getVariables() {\n    return '\\nuniform vec2 u_velocity_range;\\nvarying vec4 v_particle_color;\\n\\n' + udf.getDefines() + '\\n' + integrate.getDefines() + '\\n';\n  }\n\n  function getMethods() {\n    return '\\n// https://github.com/hughsk/glsl-hsv2rgb\\nvec3 hsv2rgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n' + udf.getFunctions() + '\\n' + integrate.getFunctions() + '\\n' + getColorFunctionBody() + '\\n';\n  }\n\n  function getColorFunctionBody() {\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].UNIFORM) {\n      return '\\nvec4 get_color(vec2 p) {\\n  return vec4(' + r + ', ' + g + ', ' + b + ', ' + a + ');\\n}\\n';\n    }\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].DUAL) {\n      return '\\nvec4 get_color(vec2 p) {\\n  float rand = fract(sin(p.x * 12.9898 + p.y * 78.233) * 43758.5453);\\n  if (rand < 0.5) {\\n    return vec4(' + r + ', ' + g + ', ' + b + ', ' + a + ');\\n  } else {\\n    return vec4(' + r2 + ', ' + g2 + ', ' + b2 + ', ' + a2 + ');\\n  }\\n}\\n';\n    }\n    //     if (colorMode === ColorModes.REACHAVOID) {\n    //       return `\n    // vec4 get_color(vec2 p) {\n    //   // TODO WAS: different color for active drawing than R or A \n    //   // would need draw_click_sum, might be easier to separate drawing/bc textures\n    //   return vec4(${r}, ${g}, ${b}, ${a}); \n    // }\n    // `\n    //     }\n\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].VELOCITY) {\n      return '\\nvec4 get_color(vec2 p) {\\n  vec2 velocity = get_velocity(p);\\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\\n  return vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\\n}\\n';\n    }\n\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].CUSTOM) {\n      if (!colorCode) throw new Error('color mode is set to custom, but no color function is specified');\n\n      return colorCode;\n    }\n\n    return ' \\nvec4 get_color(vec2 p) {\\n  vec2 velocity = get_velocity(p);\\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\\n  return vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\\n}\\n';\n  }\n\n  function getMain() {\n    return '  v_particle_color = get_color(v_particle_pos);';\n  }\n}\n\n/***/ }),\n\n/***/ \"C8nW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = request;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n\n/**\n * XMLHttpRequest wrapped into a promise.\n * \n * @param {String} url \n */\nfunction request(url, options) {\n  if (!options) options = {};\n\n  return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(download);\n\n  function download(resolve, reject) {\n    var req = new XMLHttpRequest();\n\n    if (typeof options.progress === 'function') {\n      req.addEventListener('progress', updateProgress, false);\n    }\n\n    req.addEventListener('load', transferComplete, false);\n    req.addEventListener('error', transferFailed, false);\n    req.addEventListener('abort', transferCanceled, false);\n\n    req.open('GET', url);\n    if (options.responseType) {\n      req.responseType = options.responseType;\n    }\n    req.send(null);\n\n    function updateProgress(e) {\n      if (e.lengthComputable) {\n        options.progress({\n          loaded: e.loaded,\n          total: e.total,\n          percent: e.loaded / e.total\n        });\n      }\n    }\n\n    function transferComplete() {\n      if (req.status !== 200) {\n        reject('Unexpected status code ' + req.status + ' when calling ' + url);\n        return;\n      }\n      var response = req.response;\n\n      if (options.responseType === 'json' && typeof response === 'string') {\n        // IE\n        response = JSON.parse(response);\n      }\n\n      resolve(response);\n    }\n\n    function transferFailed() {\n      reject('Failed to download ' + url);\n    }\n\n    function transferCanceled() {\n      reject('Cancelled download of ' + url);\n    }\n  }\n}\n\n/***/ }),\n\n/***/ \"Ddjs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  createTexture: createTexture,\n  bindFramebuffer: bindFramebuffer,\n  createProgram: createProgram,\n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  bindTexture: bindTexture\n});\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  } else {\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nfunction bindFramebuffer(gl, framebuffer, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n    throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload: unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n    var attribute = gl.getActiveAttrib(program, i);\n    wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n    var uniform = gl.getActiveUniform(program, i);\n    wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper;\n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n    throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n/***/ }),\n\n/***/ \"DuZ1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__ = __webpack_require__(\"JjDM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__customInput__ = __webpack_require__(\"bvb0\");\n\n\n\n\n\n\n\n\n\nvar UserDefinedVelocityFunction = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(UserDefinedVelocityFunction, _BaseShaderNode);\n\n  function UserDefinedVelocityFunction(updateCode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, UserDefinedVelocityFunction);\n\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (UserDefinedVelocityFunction.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(UserDefinedVelocityFunction)).call(this));\n\n    _this.updateCode = updateCode || '';\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(UserDefinedVelocityFunction, [{\n    key: 'setNewUpdateCode',\n    value: function setNewUpdateCode(newUpdateCode) {\n      this.updateCode = newUpdateCode;\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float frame;\\nuniform vec4 cursor;\\n// TODO: use inputN instead.\\nuniform sampler2D u_audio;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\n' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__customInput__[\"a\" /* getInputUniforms */])() + '\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n      // TODO: Do I need to inject snoise only when it's used?\n      return '\\n    // pseudo-random generator\\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\\nfloat rand(const vec2 co) {\\n    float t = dot(rand_constants.xy, co);\\n    return fract(sin(t) * (rand_constants.z + t));\\n}\\n\\n' + __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__[\"a\" /* default */] + '\\n\\nvec2 rotate(vec2 p,float a) {\\n\\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\\n}\\n\\n// TODO: This will change. Don\\'t use it.\\nfloat audio(float index) {\\n  float rgbI = floor(index/4.);\\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\\n  vec4 rgba = texture2D(u_audio, txPos);\\n  \\n  float offset = mod(index, 4.);\\n  if (offset == 0.) return rgba[0];\\n  if (offset == 1.) return rgba[1];\\n  if (offset == 2.) return rgba[2];\\n  return rgba[3];\\n}\\n\\n' + (this.updateCode ? this.updateCode : 'vec2 get_velocity(vec2 p) { return vec2(0.); }') + '\\n  ';\n    }\n  }]);\n\n  return UserDefinedVelocityFunction;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UserDefinedVelocityFunction);\n\n/***/ }),\n\n/***/ \"FaU1\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = encodeFloatRGBA;\n/* harmony export (immutable) */ __webpack_exports__[\"b\"] = decodeFloatRGBA;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__ = __webpack_require__(\"yI0F\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2__);\n\n/**\n * This file encodes/decodes float values into 32bit rgba array\n * \n * It is based on https://computergraphics.stackexchange.com/questions/4151/webgl-packing-unpacking-functions-that-can-roundtrip-all-typical-32-bit-floats\n * and it is not perfect. If you know how to improve it - please let me know.\n */\n\n/**\n * Encodes float value into output array\n * @param {float} val - value to be encode\n * @param {Uint8Array} out  - array where encoded value needs to be written.\n * @param {Number} writeOffset - offset in the original array where values should be written.\n */\nfunction encodeFloatRGBA(val, out, writeOffset) {\n  if (val == 0.0) {\n    out[writeOffset + 0] = 0;out[writeOffset + 1] = 0;out[writeOffset + 2] = 0;out[writeOffset + 3] = 0;\n    return;\n  }\n\n  var mag = Math.abs(val);\n  var exponent = Math.floor(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_math_log2___default()(mag));\n  // Correct log2 approximation errors.\n  exponent += exp2(exponent) <= mag / 2.0 ? 1 : 0;\n  exponent -= exp2(exponent) > mag ? 1 : 0;\n\n  var mantissa;\n  if (exponent > 100.0) {\n    mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n  } else {\n    mantissa = mag / exp2(exponent) - 1.0;\n  }\n\n  var a = exponent + 127.0;\n  mantissa *= 256.0;\n  var b = Math.floor(mantissa);\n  mantissa -= b;\n  mantissa *= 256.0;\n  var c = Math.floor(mantissa);\n  mantissa -= c;\n  mantissa *= 128.0;\n  var d = Math.floor(mantissa) * 2.0 + (val < 0.0 ? 1 : 0);\n\n  out[writeOffset + 0] = a;out[writeOffset + 1] = b;out[writeOffset + 2] = c;out[writeOffset + 3] = d;\n}\n\n/**\n * Given byte values in range [0..255] returns decoded float value.\n * \n * @param {Byte} r \n * @param {Byte} g \n * @param {Byte} b \n * @param {Byte} a \n */\nfunction decodeFloatRGBA(r, g, b, a) {\n  var A = Math.floor(r + 0.5);\n  var B = Math.floor(g + 0.5);\n  var C = Math.floor(b + 0.5);\n  var D = Math.floor(a + 0.5);\n\n  var exponent = A - 127.0;\n  var sign = 1.0 - D % 2.0 * 2.0;\n  var mantissa = (A > 0.0 ? 1 : 0) + B / 256.0 + C / 65536.0 + Math.floor(D / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n\nfunction exp2(exponent) {\n  return Math.exp(exponent * Math.LN2);\n}\n\n/***/ }),\n\n/***/ \"HI/o\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__ = __webpack_require__(\"JjDM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__customInput__ = __webpack_require__(\"bvb0\");\n\n\n\n\n\n\n\n\n\nvar UserDefinedVelocityHamiltonianFunctions = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(UserDefinedVelocityHamiltonianFunctions, _BaseShaderNode);\n\n  function UserDefinedVelocityHamiltonianFunctions(updateCode, updateHamiltonianCode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, UserDefinedVelocityHamiltonianFunctions);\n\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (UserDefinedVelocityHamiltonianFunctions.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(UserDefinedVelocityHamiltonianFunctions)).call(this));\n\n    _this.updateCode = updateCode || '';\n    _this.updateHamiltonianCode = updateHamiltonianCode || '';\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(UserDefinedVelocityHamiltonianFunctions, [{\n    key: 'setNewUpdateCode',\n    value: function setNewUpdateCode(newUpdateCode) {\n      this.updateCode = newUpdateCode;\n    }\n  }, {\n    key: 'setNewUpdateHamiltonianCode',\n    value: function setNewUpdateHamiltonianCode(newUpdateHamiltonianCode) {\n      this.updateHamiltonianCode = newUpdateHamiltonianCode;\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float frame;\\nuniform vec4 cursor;\\n// TODO: use inputN instead.\\nuniform sampler2D u_audio;\\n\\n#define PI 3.1415926535897932384626433832795\\n\\n' + __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__customInput__[\"a\" /* getInputUniforms */])() + '\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n      // TODO: Do I need to inject snoise only when it's used?\n      return '\\n    // pseudo-random generator\\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\\nfloat rand(const vec2 co) {\\n    float t = dot(rand_constants.xy, co);\\n    return fract(sin(t) * (rand_constants.z + t));\\n}\\n\\n' + __WEBPACK_IMPORTED_MODULE_6__parts_simplex_noise__[\"a\" /* default */] + '\\n\\nvec2 rotate(vec2 p,float a) {\\n\\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\\n}\\n\\n// TODO: This will change. Don\\'t use it.\\nfloat audio(float index) {\\n  float rgbI = floor(index/4.);\\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\\n  vec4 rgba = texture2D(u_audio, txPos);\\n  \\n  float offset = mod(index, 4.);\\n  if (offset == 0.) return rgba[0];\\n  if (offset == 1.) return rgba[1];\\n  if (offset == 2.) return rgba[2];\\n  return rgba[3];\\n}\\n\\n' + (this.updateCode ? this.updateCode : 'vec2 get_velocity(vec2 p) { return vec2(0.003); }') + '\\n\\n' + (this.updateHamiltonianCode ? this.updateHamiltonianCode : '\\n  float get_hamiltonian(vec2 x, vec2 p, float t) { \\n    vec2 f = get_velocity(x);\\n    // return - 0.01 * (f.x + f.y);\\n    return 0.01 * cos(t);\\n  }') + '\\n\\n  ';\n    }\n  }]);\n\n  return UserDefinedVelocityHamiltonianFunctions;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UserDefinedVelocityHamiltonianFunctions);\n\n/***/ }),\n\n/***/ \"I6d+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createImageInputBinding;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__loadTexture__ = __webpack_require__(\"egvE\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3__bus__);\n/**\n * Creates a single image binding element in the input collection.\n */\n\n\n\n\n\nvar FREE_TEXTURE_UNIT = __WEBPACK_IMPORTED_MODULE_2__config__[\"a\" /* default */].FREE_TEXTURE_UNIT;\n\nfunction createImageInputBinding(ctx, url, callbacks) {\n  var texture = null;\n  __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__loadTexture__[\"a\" /* default */])(ctx.gl, url).then(setTexture).catch(handleError);\n\n  return {\n    updateBinding: updateBinding,\n    dispose: function dispose() {\n      // TODO: Potential race condition, as loadTexture is async.\n      ctx.gl.deleteTexture(texture);\n    }\n  };\n\n  function handleError(err) {\n    if (callbacks && callbacks.error) {\n      callbacks.error(err);\n    }\n  }\n\n  function setTexture(loadedTexture) {\n    texture = loadedTexture;\n    __WEBPACK_IMPORTED_MODULE_3__bus___default.a.fire('refresh-speed');\n    if (callbacks && callbacks.done) {\n      callbacks.done(url);\n    }\n  }\n\n  function updateBinding(program, inputIndex) {\n    if (!texture) return;\n\n    var realIndex = inputIndex + FREE_TEXTURE_UNIT;\n    __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].bindTexture(ctx.gl, texture, realIndex);\n    ctx.gl.uniform1i(program['input' + inputIndex], realIndex);\n  }\n}\n\n/***/ }),\n\n/***/ \"JHsM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = initScene;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__ = __webpack_require__(\"AMV0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__ = __webpack_require__(\"5dBV\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_panzoom__ = __webpack_require__(\"yBIK\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5_panzoom___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_5_panzoom__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_6__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__appState__ = __webpack_require__(\"NEgR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__wglPanZoom__ = __webpack_require__(\"p0IO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__programs_screenProgram__ = __webpack_require__(\"h62Y\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__programs_drawParticlesProgram__ = __webpack_require__(\"pKWO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__programs_drawParticlesProgram_WAS__ = __webpack_require__(\"X++8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__utils_cursorUpdater__ = __webpack_require__(\"p9aJ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__editor_vectorFieldState__ = __webpack_require__(\"c5hq\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_14__createInputsModel__ = __webpack_require__(\"/eR5\");\n\n\n\n\n/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n *\n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n *\n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\n\n\n\n\n\n\n\n\n\n\n\n\n\n/**\n * Kicks offs the app rendering. Initialized before even vue is loaded.\n *\n * @param {WebGLRenderingContext} gl\n */\nfunction initScene(gl) {\n  // Canvas size management\n  var canvasRect = { width: 0, height: 0, top: 0, left: 0 };\n  setWidthHeight(gl.canvas.width, gl.canvas.height);\n  window.addEventListener('resize', onResize, true);\n\n  // Video capturing is available in super advanced mode. You'll need to install\n  // and start https://github.com/greggman/ffmpegserver.js\n  // Then type in the console: window.startRecord();\n  // This will trigger frame-by-frame recording (it is slow). To stop it, call window.stopRecord();\n  __WEBPACK_IMPORTED_MODULE_6__bus___default.a.on('start-record', startRecord);\n  __WEBPACK_IMPORTED_MODULE_6__bus___default.a.on('stop-record', stopRecord);\n  var currentCapturer = null;\n\n  // TODO: It feels like bounding box management needs to be moved out from here.\n  // TODO: bbox needs to be a class with width/height properties.\n  var bbox = __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getBBox() || {};\n  var currentPanZoomTransform = {\n    scale: 1,\n    x: 0,\n    y: 0\n  };\n\n  // Some Colors\n  var field_color = [1., 1., 1., 1.]; // white\n  var field_color_second = [0.949, 0.768, 0.306, 1.0]; // gold\n  var reach_color = [46 / 255, 121 / 255, 199 / 255, 0.9]; // blue\n  var avoid_color = [223 / 255, 28 / 255, 28 / 255, 0.85]; // red\n  var value_color = [245 / 255, 50 / 255, 145 / 255, 1.0]; // magenta for now\n\n  // Boundary Condition, i.e. Target\n  var bc = __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getBC() || {};\n  var bc_drawing_mode = false;\n  var value_mode = false;\n  var value_transfer = false;\n  var bc_flip_mode = false;\n  var draw_fill = false;\n  var bc_reach_mode = true; // if false, then avoid\n  // var bbox_at_bc_enc = appState.getBBox() || {};\n  var bbox_at_bc_enc = JSON.parse(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_core_js_json_stringify___default()(bbox));\n  var thresh = 0.01; // TODO: make all this editable\n  var drawing_click_sum = 0;\n\n  var field_mode = false;\n\n  // How many particles do we want?\n  var particleCount = __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getParticleCount();\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n\n  // Context variable is a way to share rendering state between multiple programs. It has a lot of stuff on it.\n  // I found that it's the easiest way to work in state-full world of WebGL.\n  // Until I discover a better way to write WebGL code.\n  var ctx = {\n    gl: gl,\n    bbox: bbox,\n    field_mode: field_mode,\n    canvasRect: canvasRect,\n\n    bc: bc,\n    bbox_at_bc_enc: bbox_at_bc_enc,\n    bc_drawing_mode: bc_drawing_mode,\n    value_mode: value_mode,\n    value_transfer: value_transfer,\n    bc_reach_mode: bc_reach_mode,\n    bc_flip_mode: bc_flip_mode,\n    draw_fill: draw_fill,\n    drawing_click_sum: drawing_click_sum,\n    thresh: thresh,\n\n    inputs: null,\n\n    framebuffer: gl.createFramebuffer(),\n\n    // This is used only to render full-screen rectangle. Main magic happens inside textures.\n    quadBuffer: __WEBPACK_IMPORTED_MODULE_4__gl_utils__[\"a\" /* default */].createBuffer(gl, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1])),\n\n    colorMode: __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getColorMode(),\n    colorFunction: __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getColorFunction(),\n\n    // This defines texture unit for screen rendering. First few indices are taken by textures\n    // that compute particles position/color\n    // TODO: I need to find a better way to manage this.\n    screenTextureUnit: 3,\n\n    integrationTimeStep: __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getIntegrationTimeStep(),\n\n    // On each frame the likelihood for a particle to reset its position is this:\n    dropProbability: __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getDropProbability(),\n\n    // current frame number. Reset every time when new shader is compiled\n    frame: 0,\n\n    // Information about mouse cursor. Could be useful to simplify\n    // exploration\n    cursor: {\n      // Where mouse was last time clicked (or tapped)\n      clickX: 0, clickY: 0,\n      // where mouse was last time moved. If this is a touch device\n      // this is the same as clickX, clickY\n      hoverX: 0, hoverY: 0\n    },\n\n    // Texture size to store particles' positions\n    particleStateResolution: 0,\n\n    // How quickly we should fade previous frame (from 0..1)\n    fadeOpacity: __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getFadeout(),\n\n    // Ignore this one for a moment. Yes, the app support web audio API,\n    // but it's rudimentary, so... shhh! it's a secret.\n    // Don't shhh on me!\n    // WAS - these comments precede me, but damn would audio be cool\n    // especially if the field reacted to it...!\n    audioTexture: null\n  };\n\n  // Frame management\n  var lastAnimationFrame;\n  var isPaused = false;\n\n  var inputsModel = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_14__createInputsModel__[\"a\" /* default */])(ctx);\n\n  // screen rendering;\n  var screenProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_9__programs_screenProgram__[\"a\" /* default */])(ctx);\n  // var drawProgram = createDrawParticlesProgram_WAS(ctx, 0, );\n  var drawProgramField = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11__programs_drawParticlesProgram_WAS__[\"a\" /* default */])(ctx, 0, field_color, field_color_second);\n  // var drawProgramField2 = createDrawParticlesProgram_WAS(ctx, 0, field_color_second, field_color_second);\n  var drawProgramBC = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11__programs_drawParticlesProgram_WAS__[\"a\" /* default */])(ctx, 1, reach_color, avoid_color); // Boundary Condition Program\n  var drawProgramValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_11__programs_drawParticlesProgram_WAS__[\"a\" /* default */])(ctx, 2, value_color, value_color); // Value Program\n  var cursorUpdater = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_12__utils_cursorUpdater__[\"a\" /* default */])(ctx);\n  var vectorFieldEditorState = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13__editor_vectorFieldState__[\"a\" /* default */])(drawProgramField);\n  // var vectorField2EditorState = createVectorFieldEditorState(drawProgramField2);\n  var vectorFieldEditorStateBC = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13__editor_vectorFieldState__[\"a\" /* default */])(drawProgramBC);\n  var vectorFieldEditorStateValue = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_13__editor_vectorFieldState__[\"a\" /* default */])(drawProgramValue);\n\n  // particles\n  updateParticlesCount(particleCount);\n\n  // values\n  drawProgramBC.encodeBCValue();\n\n  var api = {\n    start: nextFrame,\n    stop: stop,\n    dispose: dispose,\n\n    resetBoundingBox: resetBoundingBox,\n    moveBoundingBox: moveBoundingBox,\n    applyBoundingBox: applyBoundingBox,\n\n    setPaused: setPaused,\n    setBCDrawingMode: setBCDrawingMode,\n    setDrawFill: setDrawFill,\n    setFieldMode: setFieldMode,\n\n    getParticlesCount: getParticlesCount,\n    setParticlesCount: setParticlesCount,\n\n    setFadeOutSpeed: setFadeOutSpeed,\n    getFadeOutSpeed: getFadeOutSpeed,\n\n    setDropProbability: setDropProbability,\n    getDropProbability: getDropProbability,\n\n    getIntegrationTimeStep: getIntegrationTimeStep,\n    setIntegrationTimeStep: setIntegrationTimeStep,\n\n    setColorMode: setColorMode,\n    getColorMode: getColorMode,\n\n    vectorFieldEditorState: vectorFieldEditorState,\n    // vectorField2EditorState,\n    vectorFieldEditorStateBC: vectorFieldEditorStateBC,\n    vectorFieldEditorStateValue: vectorFieldEditorStateValue,\n\n    inputsModel: inputsModel,\n\n    getCanvasRect: function getCanvasRect() {\n      // We trust they don't do anything bad with this ...\n      return canvasRect;\n    },\n    getBoundingBox: function getBoundingBox() {\n      // again, we trust. Maybe to much?\n      return ctx.bbox;\n    },\n    getBoundaryConditionBox: function getBoundaryConditionBox() {\n      // not sure if needed, but making to have\n      return ctx.bc;\n    }\n  };\n\n  var panzoom = initPanzoom();\n  restoreBBox();\n\n  setTimeout(function () {\n    __WEBPACK_IMPORTED_MODULE_6__bus___default.a.fire('scene-ready', api);\n  });\n\n  return api;\n\n  function moveBoundingBox(changes) {\n    if (!changes) return;\n    var parsedBoundingBox = __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_object_assign___default()({}, ctx.bbox);\n\n    assignIfPossible(changes, 'minX', parsedBoundingBox);\n    assignIfPossible(changes, 'minY', parsedBoundingBox);\n    assignIfPossible(changes, 'maxX', parsedBoundingBox);\n    assignIfPossible(changes, 'maxY', parsedBoundingBox);\n\n    // for Y axis changes we need to preserve aspect ration, which means\n    // we also need to change X...\n    if (changes.minY !== undefined || changes.maxY !== undefined) {\n      // adjust values for X\n      var heightChange = Math.abs(parsedBoundingBox.minY - parsedBoundingBox.maxY) / Math.abs(ctx.bbox.minY - ctx.bbox.maxY);\n      var cx = (ctx.bbox.maxX + ctx.bbox.minX) / 2;\n      var prevWidth = (ctx.bbox.maxX - ctx.bbox.minX) / 2;\n      parsedBoundingBox.minX = cx - prevWidth * heightChange;\n      parsedBoundingBox.maxX = cx + prevWidth * heightChange;\n    }\n\n    applyBoundingBox(parsedBoundingBox);\n  }\n\n  function assignIfPossible(change, key, newBoundingBox) {\n    var value = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_number_parse_float___default()(change[key]);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(value)) {\n      newBoundingBox[key] = value;\n    }\n  }\n\n  function startRecord(capturer) {\n    currentCapturer = capturer;\n  }\n\n  function stopRecord() {\n    currentCapturer = null;\n  }\n\n  function setColorMode(x) {\n    var mode = parseInt(x, 10);\n    __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].setColorMode(mode);\n    ctx.colorMode = __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getColorMode();\n    drawProgramField.updateColorMode(mode);\n    // drawProgramField2.updateColorMode(mode);\n    drawProgramBC.updateColorMode(mode);\n    drawProgramValue.updateColorMode(mode);\n  }\n\n  function getColorMode() {\n    return __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getColorMode();\n  }\n\n  function getIntegrationTimeStep() {\n    return __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getIntegrationTimeStep();\n  }\n\n  function setIntegrationTimeStep(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      ctx.integrationTimeStep = f;\n      __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].setIntegrationTimeStep(f);\n      __WEBPACK_IMPORTED_MODULE_6__bus___default.a.fire('integration-timestep-changed', f);\n    }\n  }\n\n  function setPaused(shouldPause) {\n    isPaused = shouldPause;\n    nextFrame();\n  }\n\n  function setBCDrawingMode(shouldBCDrawingMode) {\n    ctx.cursor.clickX = 0.;\n    ctx.cursor.clickY = 0.;\n    ctx.bc_drawing_mode = shouldBCDrawingMode;\n    // nextFrame(); // do I need this?\n  }\n\n  function setDrawFill(shouldDrawFill) {\n    ctx.draw_fill = shouldDrawFill;\n    // nextFrame(); // do I need this?\n  }\n\n  function setFieldMode(shouldFieldMode) {\n    ctx.field_mode = shouldFieldMode;\n    // nextFrame(); // do I need this?\n  }\n\n  // Main screen fade out configuration\n  function setFadeOutSpeed(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      ctx.fadeOpacity = f;\n      __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].setFadeout(f);\n    }\n  }\n\n  function getFadeOutSpeed() {\n    return __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getFadeout();\n  }\n\n  // Number of particles configuration\n  function getParticlesCount() {\n    return __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getParticleCount();\n  }\n\n  function setParticlesCount(newParticleCount) {\n    if (!__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(newParticleCount)) return;\n    if (newParticleCount === particleCount) return;\n    if (newParticleCount < 1) return;\n\n    updateParticlesCount(newParticleCount);\n\n    particleCount = newParticleCount;\n    __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].setParticleCount(newParticleCount);\n  }\n\n  // drop probability\n  function setDropProbability(x) {\n    var f = parseFloat(x);\n    if (__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(f)) {\n      // TODO: Do I need to worry about duplication/clamping?\n      __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].setDropProbability(f);\n      ctx.dropProbability = f;\n    }\n  }\n\n  function getDropProbability() {\n    return __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getDropProbability();\n  }\n\n  function onResize() {\n    if (!ctx.bc_drawing_mode) {\n      setWidthHeight(window.innerWidth, window.innerHeight);\n\n      screenProgram.updateScreenTextures();\n\n      updateBoundingBox(currentPanZoomTransform);\n    }\n  }\n\n  function setWidthHeight(w, h) {\n    var dx = Math.max(w * 0.02, 30);\n    var dy = Math.max(h * 0.02, 30);\n    canvasRect.width = w + 2 * dx;\n    canvasRect.height = h + 2 * dy;\n    canvasRect.top = -dy;\n    canvasRect.left = -dx;\n\n    var canvas = gl.canvas;\n    canvas.width = canvasRect.width;\n    canvas.height = canvasRect.height;\n    canvas.style.left = -dx + 'px';\n    canvas.style.top = -dy + 'px';\n  }\n\n  function dispose() {\n    stop();\n    panzoom.dispose();\n    window.removeEventListener('resize', onResize, true);\n    cursorUpdater.dispose();\n    drawProgramBC.dispose();\n    drawProgramField.dispose();\n    // drawProgramField2.dispose();\n    drawProgramValue.dispose();\n    vectorFieldEditorState.dispose();\n    // vectorField2EditorState.dispose();\n    vectorFieldEditorStateBC.dispose();\n    vectorFieldEditorStateValue.dispose();\n  }\n\n  function nextFrame() {\n    if (lastAnimationFrame) return;\n\n    if (isPaused) return;\n\n    lastAnimationFrame = requestAnimationFrame(draw);\n  }\n\n  function stop() {\n    cancelAnimationFrame(lastAnimationFrame);\n    lastAnimationFrame = 0;\n  }\n\n  function draw() {\n    lastAnimationFrame = 0;\n\n    drawScreen();\n\n    if (currentCapturer) currentCapturer.capture(gl.canvas);\n\n    nextFrame();\n  }\n\n  // DRAWING FUNCTION //\n\n\n  function drawScreen() {\n    screenProgram.fadeOutLastFrame();\n\n    if (ctx.field_mode) {\n      drawProgramField.drawParticles();\n      // drawProgramField2.drawParticles();\n    }\n\n    if (ctx.value_mode && !ctx.value_transfer) {\n      drawProgramValue.drawParticles(); // only works after recompilation\n    }\n\n    // Boundary Condition Drawing\n    if (ctx.bc_drawing_mode && ctx.drawing_click_sum % 3 != 0) {\n      if (ctx.drawing_click_sum % 3 == 1) {\n        // bc dynamic only after first click\n        drawProgramBC.convertCursor2bcParams();\n      }\n      drawProgramBC.drawParticles(); // bc stays after second\n    }\n\n    // TODO WAS: is there a way to make a seperate fade out rate for bc? (value texture ok)\n    screenProgram.renderCurrentScreen();\n\n    if (ctx.field_mode) {\n      drawProgramField.updateParticlesPositions();\n      // drawProgramField2.updateParticlesPositions();\n    }\n    if (ctx.bc_drawing_mode && ctx.drawing_click_sum % 3 != 0) {\n      // drawProgramBC.updateParticlesPositions();\n    }\n\n    if (ctx.value_mode) {\n      drawProgramValue.updateParticlesPositions(drawProgramBC.updatePositionProgram.getTextures());\n      if (ctx.value_transfer) {\n        ctx.value_transfer = false;\n      }\n    }\n\n    // TODO WAS: if ctx.bc_drawing_mode, pause or slow & gray particles? \n    // TODO WAS: if ctx.bc_drawing_mode done, start value evolution (and reverse particle flow?)\n    // note, particle slowing/reversing could be done by simply altering field...\n  }\n\n  // //\n\n\n  function updateParticlesCount(numParticles) {\n    // we create a square texture where each pixel will hold a particle position encoded as RGBA\n    ctx.particleStateResolution = Math.ceil(Math.sqrt(numParticles));\n    drawProgramField.updateParticlesCount();\n    // drawProgramField2.updateParticlesCount();\n    // drawProgramBC.updateParticlesCount(); // don't think needed\n    drawProgramValue.updateParticlesCount(); // don't think needed\n    //TODO WAS: two separate user-defined params for particle count and value grid size\n  }\n\n  function initPanzoom() {\n    var initializedPanzoom = __WEBPACK_IMPORTED_MODULE_5_panzoom___default()(gl.canvas, {\n      controller: __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_8__wglPanZoom__[\"a\" /* default */])(gl.canvas, updateBoundingBox)\n    });\n\n    return initializedPanzoom;\n  }\n\n  function restoreBBox() {\n    var savedBBox = __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].getBBox();\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n\n    var sX = Math.PI * Math.E;\n    var sY = Math.PI * Math.E;\n    var tX = 0;\n    var tY = 0;\n    if (savedBBox) {\n      sX = savedBBox.maxX - savedBBox.minX;\n      sY = savedBBox.maxY - savedBBox.minY;\n      // TODO: Not sure if this is really the best way to do it.\n      // var ar = width/height;\n      tX = width * (savedBBox.minX + savedBBox.maxX) / 2;\n      tY = width * (savedBBox.minY + savedBBox.maxY) / 2;\n    }\n\n    var w2 = sX * width / 2;\n    var h2 = sY * height / 2;\n    panzoom.showRectangle({\n      left: -w2 + tX,\n      top: -h2 - tY,\n      right: w2 + tX,\n      bottom: h2 - tY\n    });\n  }\n\n  function updateBoundingBox(transform) {\n    screenProgram.boundingBoxUpdated = true;\n\n    currentPanZoomTransform.x = transform.x;\n    currentPanZoomTransform.y = transform.y;\n    currentPanZoomTransform.scale = transform.scale;\n\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n\n    var minX = clientX(0);\n    var minY = clientY(0);\n    var maxX = clientX(width);\n    var maxY = clientY(height);\n\n    // we divide by width to keep aspect ratio\n    // var ar = width/height;\n    var p = 10000;\n    bbox.minX = Math.round(p * minX / width) / p;\n    bbox.minY = Math.round(p * -minY / width) / p;\n    bbox.maxX = Math.round(p * maxX / width) / p;\n    bbox.maxY = Math.round(p * -maxY / width) / p;\n\n    __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].saveBBox(bbox);\n\n    __WEBPACK_IMPORTED_MODULE_6__bus___default.a.fire('bbox-change', bbox);\n\n    function clientX(x) {\n      return (x - transform.x) / transform.scale;\n    }\n\n    function clientY(y) {\n      return (y - transform.y) / transform.scale;\n    }\n  }\n\n  function resetBoundingBox() {\n    var w = Math.PI * Math.E * 0.5;\n    var h = Math.PI * Math.E * 0.5;\n\n    applyBoundingBox({\n      minX: -w,\n      minY: -h,\n      maxX: w,\n      maxY: h\n    });\n  }\n\n  function applyBoundingBox(boundingBox) {\n    __WEBPACK_IMPORTED_MODULE_7__appState__[\"a\" /* default */].saveBBox(boundingBox);\n    restoreBBox();\n    // a hack to trigger panzoom event\n    panzoom.moveBy(0, 0, false);\n  }\n}\n\n/***/ }),\n\n/***/ \"JjDM\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvar code = \"\\nvec3 mod289(vec3 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec2 mod289(vec2 x) {\\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\\n}\\n\\nvec3 permute(vec3 x) {\\n  return mod289(((x*34.0)+1.0)*x);\\n}\\n\\nfloat snoise(vec2 v)\\n  {\\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\\n                      0.024390243902439); // 1.0 / 41.0\\n// First corner\\n  vec2 i  = floor(v + dot(v, C.yy) );\\n  vec2 x0 = v -   i + dot(i, C.xx);\\n\\n// Other corners\\n  vec2 i1;\\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\\n  //i1.y = 1.0 - i1.x;\\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\\n  // x1 = x0 - i1 + 1.0 * C.xx ;\\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\\n  vec4 x12 = x0.xyxy + C.xxzz;\\n  x12.xy -= i1;\\n\\n// Permutations\\n  i = mod289(i); // Avoid truncation effects in permutation\\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\\n\\t\\t+ i.x + vec3(0.0, i1.x, 1.0 ));\\n\\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\\n  m = m*m ;\\n  m = m*m ;\\n\\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\\n\\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\\n  vec3 h = abs(x) - 0.5;\\n  vec3 ox = floor(x + 0.5);\\n  vec3 a0 = x - ox;\\n\\n// Normalise gradients implicitly by scaling m\\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\\n\\n// Compute final noise value at P\\n  vec3 g;\\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\\n  return 130.0 * dot(m, g);\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"M7m/\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaderBasedColor_WAS__ = __webpack_require__(\"Aa0I\");\n\n\n\n\n\n// TODO: this duplicates code from texture position.\n\nvar DrawParticleGraph_WAS = function () {\n  function DrawParticleGraph_WAS(ctx) {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, DrawParticleGraph_WAS);\n\n    this.colorMode = ctx.colorMode;\n    this.colorFunction = ctx.colorFunction || '';\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(DrawParticleGraph_WAS, [{\n    key: 'getFragmentShader',\n    value: function getFragmentShader() {\n      return 'precision highp float;\\nvarying vec4 v_particle_color;\\nvarying float filler;\\nvoid main() {\\n  if (filler == 1.) {\\n    // gl_FragColor = v_particle_color * vec4(1., 1., 1., 0.1);  \\n    // gl_FragColor = vec4(1., 1., 1., 0.05);  // gray\\n    // color = [154/255, 103/255, 103/255, 0.9];  // gray-red\\n    // color = [223/255, 28/255, 28/255, 0.05];  // gray-red v2\\n    gl_FragColor = vec4(154/255, 103/255, 103/255, 0.9); // weird, its always just gray to black?\\n  } else {\\n    gl_FragColor = v_particle_color;  \\n  }\\n}';\n    }\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader(vfCode, color, color2) {\n      var decodePositions = textureBasedPosition();\n      var colorParts = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__shaderBasedColor_WAS__[\"a\" /* default */])(this.colorMode, vfCode, this.colorFunction, color, color2);\n      var methods = [];\n      addMethods(decodePositions, methods);\n      addMethods(colorParts, methods);\n      var main = [];\n      addMain(decodePositions, main);\n      addMain(colorParts, main);\n\n      return 'precision highp float;\\nattribute float a_index;\\nuniform float u_particles_res;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\nuniform vec2 u_min_enc;\\nuniform vec2 u_max_enc;\\n\\nuniform int texture_type;\\nuniform float thresh;\\n\\nuniform float bc_cx;\\nuniform float bc_cy;\\nuniform float bc_qx;\\nuniform float bc_qy;\\nuniform int bc_shape;\\nuniform float drawing_click_sum; // for debugging\\nuniform bool bc_drawing_mode; // for debugging\\nuniform bool reach_mode;\\nuniform bool flip_mode;\\nuniform float sign;\\nuniform bool draw_fill;\\nvarying float filler;\\n\\n' + (decodePositions.getVariables() || '') + '\\n' + colorParts.getVariables() + '\\n\\n' + __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n\\n' + methods.join('\\n') + '\\n\\nvoid main() {\\n  vec2 du = (u_max - u_min);\\n  vec2 du_enc = (u_max_enc - u_min_enc);\\n\\n  vec2 v_particle_pos_c;\\n  vec2 vals;\\n  float val;\\n  vec2 state_mag;\\n  \\n  vec2 state = vec2( // same as txPos externally\\n        abs(u_max.x - u_min.x) * fract(a_index / u_particles_res) + u_min.x,\\n        abs(u_max.y - u_min.y) * (floor(a_index / u_particles_res) / u_particles_res) + u_max.y); // max bcuz col major\\n  // WAS: note, this dynamically fluctuates w/ the box but the value is defined for a fixed box!\\n\\n  if (texture_type == 0) { // Field Texture\\n\\n    v_particle_pos_c = vec2( // @mourner\\'s method: RGBA texture data is position\\n          decodeFloatRGBA(texture2D(u_particles_x, state)),\\n          decodeFloatRGBA(texture2D(u_particles_y, state))\\n    );\\n    gl_PointSize = 1.0;\\n\\n  } else if (texture_type == 1) { // Boundary Condition Texture\\n\\n    v_particle_pos_c = state; // Texture RGBA data is only for transfer\\n    gl_PointSize = 2.0;\\n    \\n  } else if (texture_type == 2) {\\n\\n    // v_particle_pos_c = vec2( // @mourner\\'s method: RGBA texture data is position\\n    //       decodeFloatRGBA(texture2D(u_particles_x, state)),\\n    //       decodeFloatRGBA(texture2D(u_particles_y, state))\\n    // );\\n    \\n    v_particle_pos_c = state; // Texture RGBA data is only for transfer\\n    gl_PointSize = 2.0;\\n\\n  }\\n\\n' + main.join('\\n') + '\\n\\n  // vec2 du = (u_max - u_min);\\n  v_particle_pos = (v_particle_pos - u_min)/du;\\n\\n  if (texture_type == 1) { // Boundary Condition Texture\\n\\n    if (bc_shape == 1) { // square\\n      val = sign * 0.5 * (max(abs(state.x - bc_cx)/bc_qx, abs(state.y - bc_cy)/bc_qy) - 1.);\\n\\n    } else if (bc_shape == 2) { // circle\\n      val = sign * 0.5 * ((state.x - bc_cx)*(state.x - bc_cx)/bc_qx + (state.y - bc_cy)*(state.y - bc_cy)/bc_qy - 1.);\\n\\n    } else { // free draw?\\n      // TODO WAS: not implemented yet\\n      val = 0.;\\n    }\\n    \\n    // for testing bc encoding\\n    if (mod(drawing_click_sum, 3.) == 2.) {\\n      state_mag = vec2( // unit coding - fixed w/o respect to bbox!\\n        fract(a_index / u_particles_res),\\n        (floor(a_index / u_particles_res) / u_particles_res)\\n      );\\n      // state_mag = (state - vec2(-4.1, -2.45)) / vec2(8., 5.); // dynamic wrt default bbox\\n      // state_mag = (state - (u_min_enc * vec2(1., -1.))) / (du_enc * vec2(1., -1.)) ; // dynamic wrt bbox based on bc encoding loc (small bug in yloc still smh)\\n\\n      if (reach_mode) {\\n        val = decodeFloatRGBA(texture2D(u_particles_x, state_mag));\\n      } else {\\n        val = decodeFloatRGBA(texture2D(u_particles_y, state_mag));\\n      }\\n    }\\n\\n  } else if (texture_type == 2) { // Value Texture\\n\\n    // always draw me after ENTER?\\n    \\n    state_mag = vec2( // unit coding - fixed w/ respect to window not bbox (grid loc)\\n        fract(a_index / u_particles_res),\\n        (floor(a_index / u_particles_res) / u_particles_res)\\n      );\\n    // state_mag = (state - vec2(-4.1, -2.45)) / vec2(8., 5.); // dynamic wrt default bbox\\n    // state_mag = (state - (u_min_enc * vec2(1., -1.))) / (du_enc * vec2(1., -1.)) ; // dynamic wrt bbox based on bc encoding loc (small bug in yloc still smh)\\n    \\n    val = decodeFloatRGBA(texture2D(u_particles_x, state_mag));\\n    // val = 1.0\\n\\n  }\\n  \\n  // TODO WAS: draw more than zero-level? with different colors?\\n  // distinguishing reach and avoid might call for drawing, epsilon above and below with diff colors \\n  // TODO WAS: color mode for Vf, changes over timef\\n\\n  // if (abs(val) > thresh && texture_type != 0) { \\n  //   // nothing\\n  // } else {\\n  //   gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\\n  // }\\n\\n  if (val > thresh && texture_type != 0) { //FIXME (last condit)\\n    // nothing\\n  } else if (val < -thresh && texture_type != 0) { //FIXME (last condit)\\n    if (draw_fill) {\\n      filler = 1.;\\n      gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);    \\n    }\\n    // nothing\\n  } else {\\n    filler = 0.;\\n    gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\\n  }\\n    \\n}';\n    }\n  }]);\n\n  return DrawParticleGraph_WAS;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DrawParticleGraph_WAS);\n\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\n\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables: getVariables,\n    getMain: getMain\n  };\n\n  function getVariables() {\n    return '\\nuniform sampler2D u_particles_x;\\nuniform sampler2D u_particles_y;\\n    ';\n  }\n\n  function getMain() {\n    return '\\n  // vec2 v_particle_pos = vec2(\\n  //   decodeFloatRGBA(texture2D(u_particles_x, state)),\\n  //   decodeFloatRGBA(texture2D(u_particles_y, state))\\n  // );\\n  vec2 v_particle_pos = v_particle_pos_c;\\n';\n  }\n}\n\n/***/ }),\n\n/***/ \"NEgR\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__ = __webpack_require__(\"AMV0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_query_state__ = __webpack_require__(\"3zJd\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_query_state___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_query_state__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__ = __webpack_require__(\"6c6E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__wrapVectorField__ = __webpack_require__(\"cj2E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__isSmallScreen__ = __webpack_require__(\"bwl9\");\n\n\n\n\n\n\n\n/**\n * The state of the fieldplay is stored in the query string. This is the\n * only place where query string can be manipulated or fetched.\n */\n\nvar qs = __WEBPACK_IMPORTED_MODULE_1_query_state___default()({}, {\n  useSearch: true,\n  // Older version of the app used hash to store application arguments.\n  // Turns out hash is not good for websites like reddit. They can block\n  // url, saying \"url was already submitted\" if the only part that is different\n  // is hash. So, we switch to search string, and maintain backward compatibility\n  // for fields created before.\n  rewriteHashToSearch: true\n});\n\nvar currentState = qs.get();\n\nvar defaultVectorField = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__wrapVectorField__[\"a\" /* default */])('v.x = -0.2 * p.x + 0.1 * p.y;\\n  v.y = -0.1 * p.x - 0.2 * p.y;');\n\nvar pendingSave;\nvar defaults = {\n  timeStep: 0.01,\n  dropProbability: 0.000125,\n  particleCount: 1000000, // FIXME WAS: Separate particle count for value textures\n  fadeout: .999,\n  colorMode: __WEBPACK_IMPORTED_MODULE_3__programs_colorModes__[\"a\" /* default */].UNIFORM\n  // TODO: slowly populate the particles into the screen (instead of all at once)\n  // idea: random percentage (if state) based on frame var in vertex shader\n\n};var settingsPanel = {\n  // collapsed: isSmallScreen(),\n  collapsed: true\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = ({\n  settingsPanel: settingsPanel,\n  saveBBox: saveBBox,\n  getBBox: getBBox,\n  makeBBox: makeBBox,\n\n  getBC: getBC, // TODO: make/save fns for editor\n\n  getQS: function getQS() {\n    return qs;\n  },\n\n  saveCode: saveCode,\n  getCode: getCode,\n  getDefaultCode: getDefaultCode,\n\n  getDropProbability: getDropProbability,\n  setDropProbability: setDropProbability,\n\n  getIntegrationTimeStep: getIntegrationTimeStep,\n  setIntegrationTimeStep: setIntegrationTimeStep,\n\n  getParticleCount: getParticleCount,\n  setParticleCount: setParticleCount,\n\n  getFadeout: getFadeout,\n  setFadeout: setFadeout,\n\n  getColorMode: getColorMode,\n  setColorMode: setColorMode,\n\n  getColorFunction: getColorFunction,\n  setColorFunction: setColorFunction\n});\n\nqs.onChange(function () {\n  __WEBPACK_IMPORTED_MODULE_2__bus___default.a.fire('scene-ready', window.scene);\n});\n\nfunction getColorMode() {\n  var colorMode = qs.get('cm');\n  return defined(colorMode) ? colorMode : defaults.colorMode;\n}\n\nfunction setColorMode(colorMode) {\n  if (!defined(colorMode)) return;\n  qs.set({ cm: colorMode });\n  currentState.cm = colorMode;\n}\n\nfunction getColorFunction() {\n  var colorFunction = qs.get('cf');\n  return colorFunction || '';\n}\n\nfunction setColorFunction(colorFunction) {\n  qs.set({ cf: colorFunction });\n  currentState.cf = colorFunction;\n}\n\nfunction getFadeout() {\n  var fadeout = qs.get('fo');\n  return defined(fadeout) ? fadeout : defaults.fadeout;\n}\n\nfunction setFadeout(fadeout) {\n  if (!defined(fadeout)) return;\n  qs.set({ fo: fadeout });\n  currentState.fo = fadeout;\n}\n\nfunction getParticleCount() {\n  var particleCount = qs.get('pc');\n  return defined(particleCount) ? particleCount : defaults.particleCount;\n}\n\nfunction setParticleCount(particleCount) {\n  if (!defined(particleCount)) return;\n  qs.set({ pc: particleCount });\n  currentState.pc = particleCount;\n}\n\nfunction getIntegrationTimeStep() {\n  var timeStep = qs.get('dt');\n  return defined(timeStep) ? timeStep : defaults.timeStep;\n}\n\nfunction setIntegrationTimeStep(dt) {\n  if (!defined(dt)) return;\n  qs.set({ dt: dt });\n  currentState.dt = dt;\n}\n\nfunction getDropProbability() {\n  var dropProbability = qs.get('dp');\n  return defined(dropProbability) ? dropProbability : defaults.dropProbability;\n}\n\nfunction setDropProbability(dropProbability) {\n  if (!defined(dropProbability)) return;\n  clamp(dropProbability, 0, 1);\n  qs.set({ dp: dropProbability });\n}\n\nfunction getBC() {\n  // return {\n  //   minX: -1.,\n  //   maxX: 1.,\n  //   minY: -1.,\n  //   maxY: 1.,\n  // };\n  return {\n    cx: 0.,\n    cy: 0.,\n    qx: 1.,\n    qy: 1.,\n    shape: 1 // 1 : square, 2 : circle, TODO WAS 3 for free draw (gonna need some math)\n  };\n}\n\nfunction getBBox() {\n  var cx = qs.get('cx');\n  var cy = qs.get('cy');\n  var w = qs.get('w');\n  var h = qs.get('h');\n  return makeBBox(cx, cy, w, h);\n}\n\nfunction makeBBox(cx, cy, w, h) {\n  var bboxDefined = defined(cx) && defined(cy) && defined(w) && defined(h);\n  if (!bboxDefined) return;\n\n  var w2 = w / 2;\n  var h2 = h / 2;\n  var p = 10000;\n  return {\n    minX: Math.round(p * (cx - w2)) / p,\n    maxX: Math.round(p * (cx + w2)) / p,\n    minY: Math.round(p * (cy - h2)) / p,\n    maxY: Math.round(p * (cy + h2)) / p\n  };\n}\n\nfunction saveBBox(bbox) {\n  var immediate = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n\n  bbox = {\n    cx: (bbox.minX + bbox.maxX) * 0.5,\n    cy: (bbox.minY + bbox.maxY) * 0.5,\n    w: bbox.maxX - bbox.minX,\n    h: bbox.maxX - bbox.minX\n  };\n\n  if (bbox.w <= 0 || bbox.h <= 0) return;\n\n  currentState.cx = bbox.cx;\n  currentState.cy = bbox.cy;\n  currentState.w = bbox.w;\n  currentState.h = bbox.h;\n\n  if (pendingSave) {\n    clearTimeout(pendingSave);\n    pendingSave = 0;\n  }\n\n  if (immediate) qs.set(bbox);else {\n    pendingSave = setTimeout(function () {\n      pendingSave = 0;\n      qs.set(bbox);\n    }, 300);\n  }\n}\n\nfunction getCode() {\n  var vfCode = qs.get('vf');\n  if (vfCode) return vfCode;\n\n  // If we didn't get code yet, let's try read to read it from previous version\n  // of the API.\n  // TODO: Need to figure out how to develop this in backward/future compatible way.\n  var oldCode = qs.get('code');\n  if (oldCode) {\n    vfCode = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__wrapVectorField__[\"a\" /* default */])(oldCode);\n    // side effect - let's clean the old URL\n    delete currentState.code;\n    qs.set('vf', vfCode);\n    return vfCode;\n  }\n\n  return defaultVectorField;\n}\n\nfunction getDefaultCode() {\n  return defaultVectorField;\n}\n\nfunction saveCode(code) {\n  qs.set({\n    vf: code\n  });\n  currentState.code = code;\n}\n\nfunction defined(number) {\n  return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(number);\n}\n\nfunction clamp(x, min, max) {\n  return x < min ? min : x > max ? max : x;\n}\n\n/***/ }),\n\n/***/ \"OIwR\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = updatePositionProgram_WAS;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph_WAS__ = __webpack_require__(\"Ug/m\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__colorModes__ = __webpack_require__(\"6c6E\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__colorProgram__ = __webpack_require__(\"gIFv\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_textureCollection_WAS__ = __webpack_require__(\"jE6c\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__utils_makeStatCounter__ = __webpack_require__(\"V39N\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_7__bus__);\n\n\n\n\n\n\n\n\n\nvar particlePositionShaderCodeBuilder = new __WEBPACK_IMPORTED_MODULE_1__shaderGraph_updatePositionGraph_WAS__[\"a\" /* default */]();\n\nfunction updatePositionProgram_WAS(ctx, texture_type) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  // var bc_textures;\n  var particleStateResolution;\n  var updateProgram;\n  var readVelocity = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__colorProgram__[\"a\" /* default */])(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  // var pendingVectorLines; // FIXME WAS: commenting for now\n\n  // TODO: need to make sure we are not leaking.\n  // bus.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode: updateCode,\n    updateParticlesPositions: updateParticlesPositions,\n    updateParticlesCount: updateParticlesCount,\n    prepareToDraw: prepareToDraw,\n    encodeBCValue: encodeBCValue,\n    getTextures: getTextures\n    // setBCTextures, \n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    var fragment = particlePositionShaderCodeBuilder.getFragmentShader(texture_type);\n    var vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    var newProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n\n  function getTextures() {\n    return readTextures;\n  }\n\n  // function setBCTextures(bc_textures_in) {\n  //   // modification to distinguish index etc?\n  //   bc_textures = {...bc_textures_in}\n  //   bc_textures.textures.index + uniqueness_offset\n  // }\n\n  function updateParticlesCount(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection_WAS__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n    // if (texture_type == 1) {console.log(\"readTextures (inside uPP)\", readTextures)} // DELETE ME\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection_WAS__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    readVelocity.updateParticlesCount();\n  }\n\n  function encodeBCValue(reach, avoid) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'reach',\n      particleState: reach\n    }, {\n      name: 'avoid',\n      particleState: avoid\n    }]; // WAS: somehow x and y are still the proper tags in shaders...?\n\n    if (readTextures) readTextures.dispose();\n    readTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection_WAS__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_textureCollection_WAS__[\"a\" /* default */])(gl, dimensions, particleStateResolution);\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions() {\n    var bc_textures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    var program = updateProgram;\n    gl.useProgram(program.program);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    ctx.inputs.updateBindings(program);\n\n    // TODO: Remove this.\n    if (ctx.audioTexture) {\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n\n    gl.uniform1i(program.texture_type, texture_type);\n    gl.uniform1f(program.value_transfer, ctx.value_transfer);\n    // console.log(\"bc_textures (inside uPP)\", bc_textures)\n    if (texture_type == 2 && bc_textures) {\n      // console.log(\"binding the bc textures to value uPP shader\")\n      var extra_tag = '_bc';\n      var unit_offset = 2;\n      bc_textures.bindTextures(gl, program, extra_tag, unit_offset); // for texturePositionNode\n    }\n    // late night idea: really need to ultimately interpolate the value with frag shader\n    // late night idea: M optimal flow mode based on value evolution\n    // late night idea: evolution relative to the target\n\n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n\n    // Draw each coordinate individually\n    for (var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound, i.e. allocate X ms to\n    // process particle positions, and move on. So that the rendering thread is not paused for too long\n    if (ctx.colorMode === __WEBPACK_IMPORTED_MODULE_2__colorModes__[\"a\" /* default */].VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    // if (pendingVectorLines) {\n    //   processVectorLinesRequest(program);\n    //   pendingVectorLines = null;\n    // }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  // // WAS: programBC for transferring BC to Value texture data\n  // function transferValue(valueUpdatePositionProgram) {\n  //   var programBC = updateProgram;\n  //   var programVal = valueUpdatePositionProgram;\n\n  //   gl.useProgram(programBC.programBC);\n\n  //   // old bindings\n  //   util.bindAttribute(gl, ctx.quadBuffer, programBC.a_pos, 2);\n  //   ctx.inputs.updateBindings(programBC);\n  //   readTextures.bindTextures(gl, programBC); // this old fn hides all the binding\n  //   gl.uniform2f(programBC.u_min, ctx.bbox.minX, ctx.bbox.minY);\n  //   gl.uniform2f(programBC.u_max, ctx.bbox.maxX, ctx.bbox.maxY);\n\n  //   // WAS: For BC-Value Transfer, bind target texture (value) to buffer\n  //   gl.useProgram(programVal.program);\n  //   util.bindFramebuffer(gl, ctx.framebuffer, programVal.writeTextures.get(0).texture); // WAS: maybe reads?\n\n  //   // WAS: For BC-Value Transfer, switch back to use TransferNode shader\n  //   gl.useProgram(programBC.program);\n  //   gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n  //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n  //   // if fails, plan b: move this inside value program & swap roles?\n\n  //   // Draw each coordinate individually (OLD)\n  //   // for(var i = 0; i < writeTextures.length; ++i) {\n  //   //   var writeInfo = writeTextures.get(i);\n  //   //   gl.uniform1i(programBC.u_out_coordinate, i);\n  //   //   util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n  //   //   gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n  //   //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n  //   // }\n\n  //   // swap the particle state textures so the new one becomes the current one\n  //   // var temp = readTextures;\n  //   // readTextures = writeTextures;\n  //   // writeTextures = temp;\n  // }\n\n  // function putVectorLinesRequestIntoQueue(request) {\n  //   pendingVectorLines = request;\n  // }\n\n  // function processVectorLinesRequest(program) {\n  //   // TODO: Move this out\n  //   var dimensions = [{\n  //     name: 'x',\n  //     particleState: pendingVectorLines.x\n  //   }, {\n  //     name: 'y',\n  //     particleState: pendingVectorLines.y\n  //   }];\n\n  //   // We create temporary textures and load requested positions in there\n  //   var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n  //   var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n  //   var texturesForRead = textureCollection_WAS(gl, dimensions, resolutionOfParticlesInRequest);\n  //   var texturesForWrite = textureCollection_WAS(gl, dimensions, resolutionOfParticlesInRequest);\n\n  //   texturesForRead.bindTextures(gl, program);\n\n  //   // Then we request coordinates out from GPU for each dimension\n  //   var writeInfo = texturesForWrite.get(0);\n  //   gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n  //   util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n  //   gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n  //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n  //   var velocity_x = new Uint8Array(numParticles * 4);\n  //   gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n  //   gl.uniform1i(program.u_out_coordinate, 7); // v_y\n  //   writeInfo = texturesForWrite.get(1);\n  //   util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n  //   gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n  //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n  //   var velocity_y = new Uint8Array(numParticles * 4);\n  //   gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n  //   texturesForWrite.dispose();\n  //   texturesForRead.dispose();\n\n  //   var xStats = makeStatCounter();\n  //   var yStats = makeStatCounter();\n\n  //   var decoded_velocity_x = new Float32Array(numParticles);\n  //   var decoded_velocity_y = new Float32Array(numParticles);\n  //   for(var i = 0; i < velocity_y.length; i+=4) {\n  //     var idx = i/4;\n  //     var vx = readFloat(velocity_x, i);\n  //     var vy = readFloat(velocity_y, i);\n  //     decoded_velocity_x[idx] = vx;\n  //     decoded_velocity_y[idx] = vy;\n  //     xStats.add(vx);\n  //     yStats.add(vy);\n  //   }\n\n  //   var vectorLineInfo = {\n  //     xStats,\n  //     yStats,\n  //     decoded_velocity_x,\n  //     decoded_velocity_y,\n  //     resolution: resolutionOfParticlesInRequest\n  //   };\n\n  //   bus.fire('vector-line-ready', vectorLineInfo);\n  // }\n}\n\nfunction readFloat(buffer, offset) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__utils_floatPacking__[\"b\" /* decodeFloatRGBA */])(buffer[offset + 0], buffer[offset + 1], buffer[offset + 2], buffer[offset + 3]);\n}\n\n/***/ }),\n\n/***/ \"Qv35\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__ = __webpack_require__(\"XMEc\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__renderNodes__ = __webpack_require__(\"S+/9\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__ = __webpack_require__(\"vhRe\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n\n\n\n\n\n\n\n\n\n\n\n\nvar UpdatePositionGraph = function () {\n  function UpdatePositionGraph(options) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, UpdatePositionGraph);\n\n    this.readStoredPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */true);\n    this.udfVelocity = new __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__[\"a\" /* default */]();\n    this.integratePositions = new __WEBPACK_IMPORTED_MODULE_10__RungeKuttaIntegrator__[\"a\" /* default */]();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */false);\n    this.panZoomDecode = new __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__[\"a\" /* default */]({ decode: true });\n    this.panZoomEncode = new __WEBPACK_IMPORTED_MODULE_9__PanzoomTransform__[\"a\" /* default */]({ decode: false });\n\n    this.colorMode = options && options.colorMode;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(UpdatePositionGraph, [{\n    key: 'setCustomVectorField',\n    value: function setCustomVectorField(velocityCode) {\n      this.udfVelocity.setNewUpdateCode(velocityCode);\n    }\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader() {\n      return 'precision highp float;\\n\\nattribute vec2 a_pos;\\nvarying vec2 v_tex_pos;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n\\nvoid main() {\\n    v_tex_pos = a_pos;\\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\\n}';\n    }\n  }, {\n    key: 'getFragmentShader',\n    value: function getFragmentShader() {\n      var nodes = [this.readStoredPosition, this.dropParticles, this.udfVelocity, this.integratePositions, {\n        getMainBody: function getMainBody() {\n          return '\\n  vec2 newPos = pos + velocity;\\n  ';\n        }\n      }, this.writeComputedPosition];\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__renderNodes__[\"a\" /* default */])(nodes);\n    }\n  }]);\n\n  return UpdatePositionGraph;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UpdatePositionGraph);\n\nvar RandomParticleDropper = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(RandomParticleDropper, _BaseShaderNode);\n\n  function RandomParticleDropper() {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, RandomParticleDropper);\n\n    return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RandomParticleDropper.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RandomParticleDropper)).apply(this, arguments));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(RandomParticleDropper, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_drop_rate;\\nuniform float u_rand_seed;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Ideally this node should probably depend on\n      // random number generator node, so that we don't duplicate code\n      return '\\n';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n  // a random seed to use for the particle drop\\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\\n  float drop = step(1.0 - u_drop_rate, rand(seed));\\n\\n  // TODO: This can be customized to produce various emitters\\n  // random_pos is in range from 0..1, we move it to the bounding box:\\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\\n  pos = mix(pos, random_pos, drop);\\n';\n    }\n  }]);\n\n  return RandomParticleDropper;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"S+/9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = renderNodes;\n\nfunction renderNodes(nodes) {\n  var code = [];\n\n  nodes.forEach(function (node) {\n    if (node.getDefines) addToCode(node.getDefines());\n  });\n  nodes.forEach(function (node) {\n    if (node.getFunctions) addToCode(node.getFunctions());\n  });\n\n  addToCode('void main() {');\n  nodes.forEach(function (node) {\n    if (node.getMainBody) addToCode(node.getMainBody());\n  });\n  addToCode('}');\n  return code.join('\\n');\n\n  function addToCode(line) {\n    if (line) code.push(line);\n  }\n}\n\n/***/ }),\n\n/***/ \"Ug/m\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__ = __webpack_require__(\"XMEc\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__renderNodes__ = __webpack_require__(\"S+/9\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_9__UserDefinedVelocityHamiltonianFunctions__ = __webpack_require__(\"HI/o\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_10__PanzoomTransform__ = __webpack_require__(\"vhRe\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_11__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_12__TextureValueNode__ = __webpack_require__(\"s3Ju\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_13__ValueIntegrator__ = __webpack_require__(\"8MpI\");\n\n\n\n\n\n\n\n\n\n\n\n\n\n// import TextureTransferNode from './TextureTransferNode';\n\n\n\nvar UpdatePositionGraph_WAS = function () {\n  function UpdatePositionGraph_WAS(options) {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, UpdatePositionGraph_WAS);\n\n    // Field Texture (old)\n    this.readStoredPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */true);\n    this.udfVelocity = new __WEBPACK_IMPORTED_MODULE_8__UserDefinedVelocityFunction__[\"a\" /* default */]();\n    this.integratePositions = new __WEBPACK_IMPORTED_MODULE_11__RungeKuttaIntegrator__[\"a\" /* default */]();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new __WEBPACK_IMPORTED_MODULE_6__TexturePositionNode__[\"a\" /* default */]( /* isDecode = */false);\n    this.panZoomDecode = new __WEBPACK_IMPORTED_MODULE_10__PanzoomTransform__[\"a\" /* default */]({ decode: true });\n    this.panZoomEncode = new __WEBPACK_IMPORTED_MODULE_10__PanzoomTransform__[\"a\" /* default */]({ decode: false });\n    this.colorMode = options && options.colorMode;\n\n    // BC Texture\n    // this.transferValue = new TextureTransferNode(/* isDecode = */ false);\n\n    // Value Texture\n    this.readStoredValue = new __WEBPACK_IMPORTED_MODULE_12__TextureValueNode__[\"a\" /* default */]( /* isDecode = */true); // TextureValueNode\n    this.udfVelocityHamiltonian = new __WEBPACK_IMPORTED_MODULE_9__UserDefinedVelocityHamiltonianFunctions__[\"a\" /* default */](); // user defined Hamiltonian!\n    this.integrateValues = new __WEBPACK_IMPORTED_MODULE_13__ValueIntegrator__[\"a\" /* default */](); // WENO + TVD-RK #fun\n    this.writeComputedValue = new __WEBPACK_IMPORTED_MODULE_12__TextureValueNode__[\"a\" /* default */]( /* isDecode = */false); // TextureValueNode\n    // this.colorMode = options && options.colorMode;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(UpdatePositionGraph_WAS, [{\n    key: 'setCustomVectorField',\n    value: function setCustomVectorField(velocityCode) {\n      this.udfVelocity.setNewUpdateCode(velocityCode);\n      this.udfVelocityHamiltonian.setNewUpdateCode(velocityCode);\n    }\n\n    // setCustomHamiltonian(hamiltonianCode) {\n    //   this.udfVelocityHamiltonian.setNewHamiltonianUpdateCode(hamiltonianCode);\n    // }\n\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader() {\n      return 'precision highp float;\\n\\nattribute vec2 a_pos;\\nvarying vec2 v_tex_pos;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n// uniform int texture_type;\\n\\nvoid main() {\\n    v_tex_pos = a_pos;\\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\\n}';\n    }\n  }, {\n    key: 'getFragmentShader',\n    value: function getFragmentShader(texture_type) {\n\n      if (texture_type == 0) {\n        // Field\n        var nodes = [this.readStoredPosition, this.dropParticles, this.udfVelocity, this.integratePositions, {\n          getMainBody: function getMainBody() {\n            return '\\n            vec2 newPos = pos + velocity;\\n            ';\n          }\n        }, this.writeComputedPosition];\n      } else if (texture_type == 1) {\n        // Boundary Condition\n        var nodes = [\n          // this.readStoredPosition,\n          // this.dropParticles,\n          // this.udfVelocity,\n          // this.integratePositions, \n          // {\n          //   getMainBody() {\n          //     return `\n          //     vec2 newPos = pos;\n          //     `\n          //   }\n          // },\n          // this.writeComputedPosition\n        ];\n      } else if (texture_type == 2) {\n        // Value\n        var nodes = [this.readStoredValue, this.udfVelocityHamiltonian, // TODO WAS: udfHamiltonian \n        this.integrateValues, // TODO WAS: integrateValues (WENO/TVD RK5)\n        {\n          getMainBody: function getMainBody() {\n            return '\\n            // vec2 newPos = pos + velocity;\\n            float newVal = val + valVelocity; // (to be computed)\\n            ';\n          }\n        }, this.writeComputedValue];\n      }\n      return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_7__renderNodes__[\"a\" /* default */])(nodes);\n    }\n  }]);\n\n  return UpdatePositionGraph_WAS;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (UpdatePositionGraph_WAS);\n\nvar RandomParticleDropper = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_inherits___default()(RandomParticleDropper, _BaseShaderNode);\n\n  function RandomParticleDropper() {\n    __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_classCallCheck___default()(this, RandomParticleDropper);\n\n    return __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RandomParticleDropper.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RandomParticleDropper)).apply(this, arguments));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_createClass___default()(RandomParticleDropper, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_drop_rate;\\nuniform float u_rand_seed;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      // TODO: Ideally this node should probably depend on\n      // random number generator node, so that we don't duplicate code\n      return '\\n';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n  // a random seed to use for the particle drop\\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\\n  float drop = step(1.0 - u_drop_rate, rand(seed));\\n\\n  // TODO: This can be customized to produce various emitters\\n  // random_pos is in range from 0..1, we move it to the bounding box:\\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\\n  pos = mix(pos, random_pos, drop);\\n';\n    }\n  }]);\n\n  return RandomParticleDropper;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/***/ }),\n\n/***/ \"V39N\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makeStatCounter;\n/**\n * A simple interface to compute eventual min/max \n */\nfunction makeStatCounter() {\n  var min, max;\n\n  var api = {\n    getMin: function getMin() {\n      return min;\n    },\n    getMax: function getMax() {\n      return max;\n    },\n    add: function add(x) {\n      if (x < min) min = x;\n      if (x > max) max = x;\n    },\n\n    reset: reset\n  };\n\n  return api;\n\n  function reset() {\n    min = Number.POSITIVE_INFINITY;\n    max = Number.NEGATIVE_INFINITY;\n  }\n}\n\n/***/ }),\n\n/***/ \"X++8\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = drawParticlesProgram_WAS;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__ = __webpack_require__(\"mvHQ\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__shaderGraph_DrawParticleGraph_WAS__ = __webpack_require__(\"M7m/\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__updatePositionProgram_WAS__ = __webpack_require__(\"OIwR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__audioProgram__ = __webpack_require__(\"94y8\");\n\n\n\n\n\n// import { encodeFloatRGBA } from '../utils/floatPacking.js';\n\n\n\n/**\n * This program manages particles life-cycle. It updates particles positions\n * and initiates drawing them on screen.\n * \n * @param {Object} ctx rendering context. Holds WebGL state\n * @param {Int} texture_type gives the type: 1 = bc texture (no tex enc/dec), 2 = value texture\n * @param {Float32Array} color_start gives the color of the texture\n * @param {Float32Array} color_start2 gives second color of the texture\n */\nfunction drawParticlesProgram_WAS(ctx, texture_type, color_start, color_start2) {\n  var external_program = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : null;\n\n  var gl = ctx.gl;\n  var color = color_start;\n  var color2 = color_start2;\n\n  var particleStateResolution, particleIndexBuffer;\n  var valueIndexBuffer;\n  var numParticles;\n  var valueReachRGBA_enc, valueAvoidRGBA_enc;\n\n  var currentVectorField = '';\n  var updatePositionProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__updatePositionProgram_WAS__[\"a\" /* default */])(ctx, texture_type, external_program);\n  var audioProgram;\n\n  var keysPressed = {};\n  window.addEventListener('keydown', onKeyDown, true);\n  window.addEventListener('keyup', onKeyUp, true);\n\n  var drawProgram;\n  initPrograms();\n\n  return {\n    updateParticlesCount: updateParticlesCount,\n    updateParticlesPositions: updateParticlesPositions,\n    drawParticles: drawParticles,\n    updateCode: updateCode,\n    updateColorMode: updateColorMode,\n    convertCursor2bcParams: convertCursor2bcParams,\n    encodeBCValue: encodeBCValue,\n    dispose: dispose,\n    drawProgram: drawProgram,\n    updatePositionProgram: updatePositionProgram,\n    eraseBC: eraseBC\n  };\n\n  function initPrograms() {\n    // need to update the draw graph because color mode shader has changed.\n    initDrawProgram();\n\n    if (__WEBPACK_IMPORTED_MODULE_5__config__[\"a\" /* default */].isAudioEnabled) {\n      if (audioProgram) audioProgram.dispose();\n      audioProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__audioProgram__[\"a\" /* default */])(ctx);\n    }\n  }\n\n  function initDrawProgram() {\n    if (drawProgram) drawProgram.unload();\n\n    var drawGraph = new __WEBPACK_IMPORTED_MODULE_2__shaderGraph_DrawParticleGraph_WAS__[\"a\" /* default */](ctx);\n    var vertexShaderCode = drawGraph.getVertexShader(currentVectorField, color, color2);\n    drawProgram = __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].createProgram(gl, vertexShaderCode, drawGraph.getFragmentShader());\n  }\n\n  function dispose() {\n    window.removeEventListener('keydown', onKeyUp, true);\n    window.removeEventListener('keyup', onKeyUp, true);\n  }\n\n  function updateParticlesPositions() {\n    var external_textures = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n    if (!currentVectorField) return;\n\n    ctx.frame += 1;\n    ctx.frameSeed = Math.random();\n\n    // TODO: Remove this.\n    if (audioProgram) audioProgram.updateTextures();\n\n    updatePositionProgram.updateParticlesPositions(external_textures);\n  }\n\n  // function transferValue(valueProgram) {\n  //   if (texture_type != 1) return;\n\n  //   // WAS TODO: ready SPACEBAR for starting value evolution?\n\n  //   updatePositionProgram.transferValue(valueProgram);\n  // }\n\n  function updateColorMode() {\n    initDrawProgram();\n  }\n\n  function updateCode(vfCode) {\n    ctx.frame = 0;\n    currentVectorField = vfCode;\n    updatePositionProgram.updateCode(vfCode);\n\n    initDrawProgram();\n  }\n\n  function updateParticlesCount() {\n    particleStateResolution = ctx.particleStateResolution; // TODO: make second res for bc/vals\n    numParticles = particleStateResolution * particleStateResolution;\n    var particleIndices = new Float32Array(numParticles);\n    var particleStateX = new Uint8Array(numParticles * 4);\n    var particleStateY = new Uint8Array(numParticles * 4);\n\n    var minX = ctx.bbox.minX;var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n    for (var i = 0; i < numParticles; i++) {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * width + minX, particleStateX, i * 4); // randomize the initial particle positions\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * height + minY, particleStateY, i * 4); // randomize the initial particle positions\n\n      particleIndices[i] = i;\n    }\n\n    if (particleIndexBuffer) gl.deleteBuffer(particleIndexBuffer);\n    particleIndexBuffer = __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].createBuffer(gl, particleIndices);\n\n    updatePositionProgram.updateParticlesCount(particleStateX, particleStateY);\n  }\n\n  function encodeBCValue() {\n    particleStateResolution = ctx.particleStateResolution; // TODO: make second res for bc/vals\n    numParticles = particleStateResolution * particleStateResolution;\n\n    var valueIndices = new Float32Array(numParticles);\n    var valueReachRGBA = new Uint8Array(numParticles * 4);\n    var valueAvoidRGBA = new Uint8Array(numParticles * 4);\n    var reach_mode = ctx.bc_reach_mode;\n    var avoid_mode = !ctx.bc_reach_mode;\n    var flip_mode = ctx.bc_flip_mode;\n\n    var minX = ctx.bbox.minX;\n    var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n\n    ctx.bbox_at_bc_enc = JSON.parse(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_json_stringify___default()(ctx.bbox)); // bbox right now defines the grid location!\n\n    var bbox_enc = ctx.bbox_at_bc_enc;\n    // console.log(\"u_min_enc:\", bbox_enc.minX, bbox_enc.minY)\n    // console.log(\"du_enc:\", bbox_enc.maxX - bbox_enc.minX, bbox_enc.maxY - bbox_enc.minY)\n\n    var bc = ctx.bc;\n\n    // var sign = (2 * reach_mode - 1) * (2 * !flip_mode - 1) // determines up/down of bc\n    var sign = 2 * !flip_mode - 1; // determines up/down of bc\n    console.log(\"reach mode?\", reach_mode);\n    console.log(\"flip mode?\", flip_mode);\n    console.log(\"sign\", sign);\n\n    for (var i = 0; i < numParticles; i++) {\n\n      var flr_ix = Math.floor(i / particleStateResolution);\n      var x = width * (i / particleStateResolution - flr_ix) + minX;\n      var y = -height * (flr_ix / particleStateResolution) + ctx.bbox.maxY; // col major? also maxY/minY bug (not mine!)\n\n      if (valueReachRGBA_enc && valueAvoidRGBA_enc) {\n        // TODO WAS: walk thru cases!\n        if (bc.shape == 1) {\n          // square\n          var bc_val = sign * 0.5 * (Math.max(Math.abs(x - bc.cx) / bc.qx, Math.abs(y - bc.cy) / bc.qy) - 1.);\n        } else if (bc.shape == 2) {\n          // circle\n          var bc_val = sign * 0.5 * ((x - bc.cx) * (x - bc.cx) / bc.qx + (y - bc.cy) * (y - bc.cy) / bc.qy - 1.);\n        } else {\n          // free draw (not implemented yet)\n          var bc_val = 0.;\n        }\n      } else {\n        var bc_val = 3.4028234663852886e+38; // FIXME WAS: atm, ~largest 32-bit number, 10^38            \n      }\n\n      if (i == 0) {\n        console.log(\"First i, Before min/max, bc_val\", bc_val);\n      }\n\n      // if (i == 0) {\n      //   console.log(\"reach mode:\", reach_mode)\n      //   // console.log(\"valueReachRGBA_enc:\", valueReachRGBA_enc)\n      //   if (valueReachRGBA_enc) {\n      //     console.log(\"Should be taking min!\")\n      //   }\n      // }\n\n      // Flip Draw Sets (Need to fill shapes for this to be usable, still might recommend against (given avoid))\n      // if (!flip_mode && valueReachRGBA_enc && valueAvoidRGBA_enc) {\n      //   bc_val = - bc_val;\n      // }\n\n      // Take minimum with existing bc (Reach or Avoid)\n      if (reach_mode && valueReachRGBA_enc) {\n        var old_val_rgba = valueReachRGBA_enc.slice(i * 4, i * 4 + 4);\n        if (!flip_mode) {\n          bc_val = Math.min(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"b\" /* decodeFloatRGBA */])(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        } else {\n          bc_val = Math.min(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"b\" /* decodeFloatRGBA */])(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        }\n      } else if (avoid_mode && valueAvoidRGBA_enc) {\n        var old_val_rgba = valueAvoidRGBA_enc.slice(i * 4, i * 4 + 4);\n        if (!flip_mode) {\n          bc_val = Math.min(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"b\" /* decodeFloatRGBA */])(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        } else {\n          bc_val = Math.min(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"b\" /* decodeFloatRGBA */])(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        }\n      }\n\n      // insert value into temp array\n      if (i == 0) {\n        console.log(\"First i, After min/max, bc_val\", bc_val);\n      }\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(bc_val, valueReachRGBA, i * 4);\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_4__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(bc_val, valueAvoidRGBA, i * 4);\n\n      // // encoding/decoding test, interestingly only accurate to 1e-6\n      // if (i == 0) {\n      //   console.log(\"TEST, bc val before:\", bc_val);\n      //   var slice = valueReachRGBA.slice(i*4, i*4 + 4);\n      //   console.log(\"slice:\", slice)\n      //   console.log(\"TEST, bc val after at (i*4, i*4 + 4):\", decodeFloatRGBA(slice[0], slice[1], slice[2], slice[3]))\n      // }\n\n      valueIndices[i] = i;\n    }\n\n    if (valueIndexBuffer) gl.deleteBuffer(valueIndexBuffer);\n    valueIndexBuffer = __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].createBuffer(gl, valueIndices);\n\n    // only store new one, this assumes the grid fixed after first bc encoding...\n    if (valueReachRGBA_enc || valueAvoidRGBA_enc) {\n      if (reach_mode) {\n        valueReachRGBA = valueReachRGBA;\n        valueAvoidRGBA = valueAvoidRGBA_enc; // avoid stays old, doesnt change\n      } else if (avoid_mode) {\n        valueReachRGBA = valueReachRGBA_enc; // reach stays old, doesnt change\n        valueAvoidRGBA = valueAvoidRGBA;\n      }\n    }\n\n    // Overwrite and Store BC Textures\n    // console.log(\"valueReachRGBA\", valueReachRGBA)\n    // console.log(\"valueAvoidRGBA\", valueAvoidRGBA)\n    updatePositionProgram.updateParticlesCount(valueReachRGBA, valueAvoidRGBA); // this works as intended for some rzn...\n    // updatePositionProgram.encodeBCValue(valueReachRGBA, valueAvoidRGBA); // doesn't show the textures for some rzn... something in uPP/uPG_WAS.js\n    if (texture_type == 1) {\n      console.log(\"uPP.readTextures UPDATED\", updatePositionProgram.getTextures());\n    } // DELETE ME\n\n    valueReachRGBA_enc = valueReachRGBA;\n    valueAvoidRGBA_enc = valueAvoidRGBA;\n    // console.log(\"valueReachRGBA_enc\", valueReachRGBA_enc)\n    // console.log(\"valueAvoidRGBA_enc\", valueAvoidRGBA_enc)\n  }\n\n  function eraseBC(erase_reach, erase_avoid) {\n    if (erase_reach) {\n      valueReachRGBA_enc = null;\n    } else if (erase_avoid) {\n      valueAvoidRGBA_enc = null;\n    }\n    if (erase_reach || erase_avoid) {\n      encodeBCValue();\n    }\n  }\n\n  function drawParticles() {\n    if (!currentVectorField) return;\n\n    var program = drawProgram;\n    gl.useProgram(program.program);\n\n    if (texture_type == 0 || texture_type == 2) {\n      __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].bindAttribute(gl, particleIndexBuffer, program.a_index, 1);\n    } else {\n      __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].bindAttribute(gl, valueIndexBuffer, program.a_index, 1);\n    }\n\n    updatePositionProgram.prepareToDraw(program);\n    ctx.inputs.updateBindings(program);\n\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    gl.uniform1f(program.u_particles_res, particleStateResolution);\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    var bbox_enc = ctx.bbox_at_bc_enc;\n    gl.uniform2f(program.u_min_enc, bbox_enc.minX, bbox_enc.minY);\n    gl.uniform2f(program.u_max_enc, bbox_enc.maxX, bbox_enc.maxY);\n\n    gl.uniform1i(program.texture_type, texture_type);\n    gl.uniform1f(program.thresh, ctx.thresh);\n    gl.uniform1f(program.drawing_click_sum, ctx.drawing_click_sum);\n    gl.uniform1i(program.bc_drawing_mode, ctx.bc_drawing_mode);\n    gl.uniform1i(program.reach_mode, ctx.bc_reach_mode);\n    gl.uniform1i(program.flip_mode, ctx.bc_flip_mode);\n    // gl.uniform1f(program.sign, (2 * ctx.bc_reach_mode - 1) * (2 * !ctx.bc_flip_mode - 1))\n    gl.uniform1f(program.sign, 2 * !ctx.bc_flip_mode - 1);\n    // console.log(\"program.sign\", (2 * ctx.bc_reach_mode - 1) * (2 * !ctx.bc_flip_mode - 1))\n    gl.uniform1i(program.draw_fill, ctx.draw_fill);\n\n    if (texture_type == 1) {\n      // Boundary Condition Texture (value defined by implicit location)\n\n      // draw the fill partially transparent - doesn't integrate with screenProgram mechanics yet, coming soon\n      // if (ctx.draw_fill) {\n      //   gl.enable(gl.BLEND); \n      //   gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n      //   // gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n      //   // gl.clearColor(color[0], color[1], color[2], color[3]);\n      // }\n\n      var bc = ctx.bc;\n      gl.uniform1f(program.bc_cx, bc.cx);\n      gl.uniform1f(program.bc_cy, bc.cy);\n      gl.uniform1f(program.bc_qx, bc.qx);\n      gl.uniform1f(program.bc_qy, bc.qy);\n      gl.uniform1i(program.bc_shape, bc.shape); // TODO: Make string  \n    } else if (texture_type == 2) {// Value Texture (value encoded in texture RGBA data)\n\n      // TODO: bind some things?\n\n    } else {\n\n        // TODO\n\n      }\n\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n    gl.drawArrays(gl.POINTS, 0, numParticles);\n    // TODO: draw triangles between the points (shade)\n\n    // draw the fill partially transparent - doesn't integrate with screenProgram mechanics yet, coming soon\n    // if (ctx.draw_fill) {\n    //   gl.clear(gl.COLOR_BUFFER_BIT);\n    //   gl.disable(gl.BLEND);\n    // }\n  }\n\n  function convertCursor2bcParams() {\n    var cursor = ctx.cursor;\n\n    // Corner Drawing Method\n    var w = Math.abs(cursor.clickX - cursor.hoverX);\n    var h = Math.abs(cursor.clickY - cursor.hoverY);\n    ctx.bc.cx = Math.min(cursor.clickX, cursor.hoverX) + 0.5 * w;\n    ctx.bc.cy = Math.min(cursor.clickY, cursor.hoverY) + 0.5 * h;\n\n    // Radial Drawing Method\n    // ctx.bc.cx = cursor.clickX\n    // ctx.bc.cy = cursor.clickY\n    // var w = 2 * Math.abs(ctx.bc.cx - cursor.hoverX);\n    // var h = 2 * Math.abs(ctx.bc.cy - cursor.hoverY);\n\n    if (ctx.bc.shape == 1) {\n      // square\n      ctx.bc.qx = 0.5 * w;\n      ctx.bc.qy = 0.5 * h;\n    } else if (ctx.bc.shape == 2) {\n      // circle\n      ctx.bc.qx = 2 * Math.pow(0.5 * w, 2);\n      ctx.bc.qy = 2 * Math.pow(0.5 * h, 2); // 2x for better Ux\n    } else {\n      console.log(\"Drawing mode \", ctx.bc.shape, \" not possible yet!\");\n    }\n  }\n\n  function onKeyDown(e) {\n    keysPressed[e.key] = true;\n    if (ctx.bc_drawing_mode && texture_type == 1) {\n      if (e.which === 13 && e.target === document.body) {\n        // ENTER for BC Drawing Transfer\n        encodeBCValue(); // I get a violation(warning?) saying this takes too long\n        e.preventDefault(); // do I need this?\n        console.log(\"bc encoded\");\n      }\n      if (e.which === 49 && e.target === document.body) {\n        // 1 for square drawing\n        ctx.bc.shape = 1;\n        e.preventDefault();\n        console.log(\"square drawing mode\");\n      }\n      if (e.which === 50 && e.target === document.body) {\n        // 2 for circle drawing\n        ctx.bc.shape = 2;\n        e.preventDefault();\n        console.log(\"circle drawing mode\");\n      }\n      if (e.which === 82 && e.target === document.body) {\n        // r for reach drawing (default)\n        ctx.bc_reach_mode = true;\n        // color = [46/255, 121/255, 199/255, 0.9];  // blue\n        color = color_start;\n        initDrawProgram();\n        console.log(\"You are reach drawing (reach mode true, default)\");\n        e.preventDefault();\n      }\n      if (e.which === 65 && e.target === document.body) {\n        // a for avoid drawing\n        ctx.bc_reach_mode = false;\n        // color = [223/255, 28/255, 28/255, 0.85];  // red\n        color = color_start2;\n        initDrawProgram();\n        console.log(\"You are avoid drawing (reach mode false)\");\n        e.preventDefault();\n      }\n      if (e.which === 73 && e.target === document.body) {\n        // i for inside drawing (default)\n        ctx.bc_flip_mode = false;\n        e.preventDefault();\n        console.log(\"You are inside drawing which takes unions (flip mode false, default)\");\n      }\n      if (e.which === 79 && e.target === document.body) {\n        // o for inside drawing\n        ctx.bc_flip_mode = true;\n        e.preventDefault();\n        console.log(\"You are outside drawing which takes intersections (flip mode true)\");\n      }\n    }\n    if (keysPressed['Backspace']) {\n      if (keysPressed['r']) {\n        console.log('Reach drawings erased.');\n        eraseBC(true, false); // BUG WAS: if field going, both bc & field die and cant turn on w/o refresh\n      } else if (keysPressed['a']) {\n        console.log('Avoid drawings erased.');\n        eraseBC(false, true);\n      } else if (keysPressed['Shift']) {\n        console.log('All drawings erased.');\n        eraseBC(true, true);\n        ctx.value_mode = false;\n      } else if (keysPressed['v']) {\n        console.log('Value erased.');\n        ctx.value_mode = false;\n      }\n    }\n    if (keysPressed['Shift'] && (keysPressed['Return'] || keysPressed['Enter'])) {\n      ctx.value_transfer = true;\n      ctx.value_mode = true;\n      updateCode(currentVectorField); // resets frame and shaders\n      console.log('Value evolution beginning :)');\n    }\n    // if (ctx.bc_drawing_mode && texture_type == 2) {\n    //   if (e.which === 13 && e.target === document.body) { // SPACE set value in motion? actually probably should just be pause induced so UL button also works\n    //     // encodeBCValue();\n    //     transferValue(); //TODO\n\n    //     e.preventDefault(); // do I need this?\n    //     console.log(\"value transferred bc to value\")\n    //   }\n    //   if (e.which === 49 && e.target === document.body) { // Q for reset?\n    //     ctx.bc.shape = 1;\n    //     e.preventDefault();\n    //     console.log(\"square drawing mode\")\n    //   }\n    // }\n  }\n\n  function onKeyUp(e) {\n    delete keysPressed[e.key];\n  }\n}\n\n/***/ }),\n\n/***/ \"XFig\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/**\n * A shader function to decode rgba encoded color into float position.\n */\nvar code = \"\\nhighp float decodeFloatRGBA( vec4 v ) {\\n  float a = floor(v.r * 255.0 + 0.5);\\n  float b = floor(v.g * 255.0 + 0.5);\\n  float c = floor(v.b * 255.0 + 0.5);\\n  float d = floor(v.a * 255.0 + 0.5);\\n\\n  float exponent = a - 127.0;\\n  float sign = 1.0 - mod(d, 2.0)*2.0;\\n  float mantissa = float(a > 0.0)\\n                  + b / 256.0\\n                  + c / 65536.0\\n                  + floor(d / 2.0) / 8388608.0;\\n  return sign * mantissa * exp2(exponent);\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"XMEc\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__ = __webpack_require__(\"a8s+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n\n\n\n\n\n\n\n\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\n\nvar TexturePosition = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(TexturePosition, _BaseShaderNode);\n\n  function TexturePosition(isDecode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, TexturePosition);\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (TexturePosition.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(TexturePosition)).call(this));\n\n    _this.isDecode = isDecode;\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(TexturePosition, [{\n    key: 'getFunctions',\n    value: function getFunctions() {\n      if (this.isDecode) {\n        return '\\n    ' + __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__[\"a\" /* default */] + '\\n    ' + __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n';\n      }\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      if (this.isDecode) {\n        // TODO: How to avoid duplication and silly checks?\n        return '\\nprecision highp float;\\n\\nuniform sampler2D u_particles_x;\\nuniform sampler2D u_particles_y;\\n\\n// Which coordinate needs to be printed onto the texture\\nuniform int u_out_coordinate;\\n\\nvarying vec2 v_tex_pos;\\n';\n      }\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      if (this.isDecode) {\n        return '\\n   vec2 pos = vec2(\\n     decodeFloatRGBA(texture2D(u_particles_x, v_tex_pos)),\\n     decodeFloatRGBA(texture2D(u_particles_y, v_tex_pos))\\n   );\\n';\n      }\n      return '\\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newPos.x);\\n    else if (u_out_coordinate == 1) gl_FragColor = encodeFloatRGBA(newPos.y);\\n    else if (u_out_coordinate == 6) gl_FragColor = encodeFloatRGBA(get_velocity(pos).x);\\n    else if (u_out_coordinate == 7) gl_FragColor = encodeFloatRGBA(get_velocity(pos).y);\\n';\n    }\n  }]);\n\n  return TexturePosition;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TexturePosition);\n\n/***/ }),\n\n/***/ \"YJWA\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nObject.defineProperty(__webpack_exports__, \"__esModule\", { value: true });\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__scene__ = __webpack_require__(\"JHsM\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__autoMode__ = __webpack_require__(\"sbZs\");\n/**\n * The main entry point to the application.\n *\n * It is initialized immediately with webgl, and puts\n * vue.js app loading into the future.\n */\n\n\n\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initVectorFieldApp(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\n__webpack_require__.e/* require.ensure */(0).then((function () {\n  // Settings UI is ready, initialize vue.js application\n  __webpack_require__(\"WOBu\");\n}).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\nfunction initVectorFieldApp(canvas) {\n  canvas.width = window.innerWidth;\n  canvas.height = window.innerHeight;\n  var ctxOptions = { antialiasing: false };\n\n  var gl = canvas.getContext('webgl', ctxOptions) || canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webGLEnabled = true;\n    var scene = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_0__scene__[\"a\" /* default */])(gl);\n    scene.start();\n    __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__autoMode__[\"a\" /* initAutoMode */])(scene);\n    window.scene = scene;\n  } else {\n    window.webGLEnabled = false;\n  }\n}\n\nvar CCapture;\nvar currentCapturer;\n\nwindow.startRecord = startRecord;\nwindow.isRecording = false;\n\nfunction startRecord(url) {\n  if (!CCapture) {\n    __webpack_require__.e/* require.ensure */(1).then((function () {\n      CCapture = __webpack_require__(\"nI+d\");\n      window.stopRecord = stopRecord;\n      startRecord(url);\n    }).bind(null, __webpack_require__)).catch(__webpack_require__.oe);\n\n    return;\n  }\n\n  if (currentCapturer) {\n    currentCapturer.stop();\n  }\n\n  if (!ffmpegScriptLoaded()) {\n    var ffmpegServer = document.createElement('script');\n    ffmpegServer.setAttribute('src', url || 'http://localhost:8080/ffmpegserver/ffmpegserver.js');\n    ffmpegServer.onload = function () {\n      return startRecord(url);\n    };\n    document.head.appendChild(ffmpegServer);\n    return;\n  }\n\n  currentCapturer = new CCapture({\n    format: 'ffmpegserver',\n    framerate: 60,\n    verbose: true,\n    name: \"fieldplay\",\n    extension: \".mp4\",\n    codec: \"mpeg4\",\n    ffmpegArguments: [\"-b:v\", \"12M\"]\n  });\n\n  window.isRecording = true;\n  currentCapturer.start();\n  __WEBPACK_IMPORTED_MODULE_1__bus___default.a.fire('start-record', currentCapturer);\n}\n\nfunction ffmpegScriptLoaded() {\n  return typeof FFMpegServer !== 'undefined';\n}\n\nfunction stopRecord() {\n  window.isRecording = false;\n  __WEBPACK_IMPORTED_MODULE_1__bus___default.a.fire('stop-record', currentCapturer);\n  currentCapturer.stop();\n  currentCapturer.save();\n}\n\n/***/ }),\n\n/***/ \"a8s+\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\nvar code = \"\\nvec4 encodeFloatRGBA(highp float val) {\\n    if (val == 0.0) {\\n        return vec4(0.0, 0.0, 0.0, 0.0);\\n    }\\n\\n    float mag = abs(val);\\n    float exponent = floor(log2(mag));\\n    // Correct log2 approximation errors.\\n    exponent += float(exp2(exponent) <= mag / 2.0);\\n    exponent -= float(exp2(exponent) > mag);\\n\\n    float mantissa;\\n    if (exponent > 100.0) {\\n        // Not sure why this needs to be done in two steps for the largest float to work.\\n        // Best guess is the optimizer rewriting '/ exp2(e)' into '* exp2(-e)',\\n        // but exp2(-128.0) is too small to represent.\\n        mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\\n    } else {\\n        mantissa = mag / float(exp2(exponent)) - 1.0;\\n    }\\n\\n    float a = exponent + 127.0;\\n    mantissa *= 256.0;\\n    float b = floor(mantissa);\\n    mantissa -= b;\\n    mantissa *= 256.0;\\n    float c = floor(mantissa);\\n    mantissa -= c;\\n    mantissa *= 128.0;\\n    float d = floor(mantissa) * 2.0 + float(val < 0.0);\\n    return vec4(a, b, c, d) / 255.0;\\n}\\n\";\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (code);\n\n/***/ }),\n\n/***/ \"aZPT\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__shaderBasedColor__ = __webpack_require__(\"c5NW\");\n\n\n\n\n\n// TODO: this duplicates code from texture position.\n\nvar DrawParticleGraph = function () {\n  function DrawParticleGraph(ctx) {\n    __WEBPACK_IMPORTED_MODULE_0_babel_runtime_helpers_classCallCheck___default()(this, DrawParticleGraph);\n\n    this.colorMode = ctx.colorMode;\n    this.colorFunction = ctx.colorFunction || '';\n  }\n\n  __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_createClass___default()(DrawParticleGraph, [{\n    key: 'getFragmentShader',\n    value: function getFragmentShader() {\n      return 'precision highp float;\\nvarying vec4 v_particle_color;\\nvoid main() {\\n  gl_FragColor = v_particle_color;\\n}';\n    }\n  }, {\n    key: 'getVertexShader',\n    value: function getVertexShader(vfCode) {\n      var decodePositions = textureBasedPosition();\n      var colorParts = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__shaderBasedColor__[\"a\" /* default */])(this.colorMode, vfCode, this.colorFunction);\n      var methods = [];\n      addMethods(decodePositions, methods);\n      addMethods(colorParts, methods);\n      var main = [];\n      addMain(decodePositions, main);\n      addMain(colorParts, main);\n\n      return 'precision highp float;\\nattribute float a_index;\\nuniform float u_particles_res;\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\n\\n' + (decodePositions.getVariables() || '') + '\\n' + colorParts.getVariables() + '\\n\\n' + __WEBPACK_IMPORTED_MODULE_2__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n\\n' + methods.join('\\n') + '\\n\\nvoid main() {\\n  vec2 txPos = vec2(\\n        fract(a_index / u_particles_res),\\n        floor(a_index / u_particles_res) / u_particles_res);\\n  gl_PointSize = 1.0;\\n\\n' + main.join('\\n') + '\\n\\n  vec2 du = (u_max - u_min);\\n  v_particle_pos = (v_particle_pos - u_min)/du;\\n  gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\\n}';\n    }\n  }]);\n\n  return DrawParticleGraph;\n}();\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (DrawParticleGraph);\n\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\n\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables: getVariables,\n    getMain: getMain\n  };\n\n  function getVariables() {\n    return '\\nuniform sampler2D u_particles_x;\\nuniform sampler2D u_particles_y;\\n    ';\n  }\n\n  function getMain() {\n    return '\\n  vec2 v_particle_pos = vec2(\\n    decodeFloatRGBA(texture2D(u_particles_x, txPos)),\\n    decodeFloatRGBA(texture2D(u_particles_y, txPos))\\n  );\\n';\n  }\n}\n\n/***/ }),\n\n/***/ \"bvb0\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = getInputUniforms;\nfunction getInputUniforms() {\n  return \"uniform sampler2D input0;\\nuniform sampler2D input1;\";\n}\n\n/***/ }),\n\n/***/ \"bwl9\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = isSmallScreen;\n/**\n * Checks whether current window belongs to a \"Small\" screen\n * size. Small screens have slightly different initial behavior.\n * E.g. the settings window is always collapsed.\n * \n * This needs to be in sync with `small-screen` variable in\n *  ../commponents/shared.styl\n */\nfunction isSmallScreen() {\n  return window.innerWidth < 600;\n}\n\n/***/ }),\n\n/***/ \"c5NW\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = shaderBasedColor;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__UserDefinedVelocityFunction__ = __webpack_require__(\"DuZ1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__RungeKuttaIntegrator__ = __webpack_require__(\"i69e\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__programs_colorModes__ = __webpack_require__(\"6c6E\");\n\n\n\n\nfunction shaderBasedColor(colorMode, vfCode, colorCode) {\n  var udf = new __WEBPACK_IMPORTED_MODULE_0__UserDefinedVelocityFunction__[\"a\" /* default */](vfCode);\n  var integrate = new __WEBPACK_IMPORTED_MODULE_1__RungeKuttaIntegrator__[\"a\" /* default */]();\n\n  return {\n    getVariables: getVariables,\n    getMain: getMain,\n    getMethods: getMethods\n  };\n\n  function getVariables() {\n    return '\\nuniform vec2 u_velocity_range;\\nvarying vec4 v_particle_color;\\n\\n' + udf.getDefines() + '\\n' + integrate.getDefines() + '\\n';\n  }\n\n  function getMethods() {\n    return '\\n// https://github.com/hughsk/glsl-hsv2rgb\\nvec3 hsv2rgb(vec3 c) {\\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\\n}\\n\\n' + udf.getFunctions() + '\\n' + integrate.getFunctions() + '\\n' + getColorFunctionBody() + '\\n';\n  }\n\n  function getColorFunctionBody() {\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__programs_colorModes__[\"a\" /* default */].UNIFORM) {\n      return '\\nvec4 get_color(vec2 p) {\\n  return vec4(0.302, 0.737, 0.788, 1.);\\n}\\n';\n    }\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__programs_colorModes__[\"a\" /* default */].VELOCITY) {\n      return '\\nvec4 get_color(vec2 p) {\\n  vec2 velocity = get_velocity(p);\\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\\n  return vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\\n}\\n';\n    }\n\n    if (colorMode === __WEBPACK_IMPORTED_MODULE_2__programs_colorModes__[\"a\" /* default */].CUSTOM) {\n      if (!colorCode) throw new Error('color mode is set to custom, but no color function is specified');\n\n      return colorCode;\n    }\n\n    return ' \\nvec4 get_color(vec2 p) {\\n  vec2 velocity = get_velocity(p);\\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\\n  return vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\\n}\\n';\n  }\n\n  function getMain() {\n    return '  v_particle_color = get_color(v_particle_pos);';\n  }\n}\n\n/***/ }),\n\n/***/ \"c5hq\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createVectorFieldEditorState;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__appState__ = __webpack_require__(\"NEgR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__getParsedVectorFieldFunction__ = __webpack_require__(\"85ps\");\n\n\n\n\n/**\n * A text editor state for the vector field equation. Manages vector field\n * program compilation and error reporting state.\n *\n * @param {Object} drawProgram \n */\nfunction createVectorFieldEditorState(drawProgram) {\n  __WEBPACK_IMPORTED_MODULE_0__bus___default.a.on('glsl-parser-ready', parseCode);\n  var currentVectorFieldVersion = 0;\n\n  // What is the current code?\n  var currentVectorFieldCode = __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getCode();\n\n  // For delayed parsing result verification (e.g. when vue is loaded it\n  // can request us to see if there were any errors)\n  var parserResult;\n\n  loadCodeFromAppState();\n\n  var api = {\n    getCode: getCode,\n    setCode: setCode,\n    dispose: dispose,\n\n    // These properties are for UI only\n    code: currentVectorFieldCode,\n    error: '',\n    errorDetail: '',\n    isFloatError: false\n  };\n\n  return api;\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_0__bus___default.a.off('glsl-parser-ready', parseCode);\n  }\n\n  function getCode() {\n    return __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getCode();\n  }\n\n  function setCode(vectorFieldCode) {\n    if (vectorFieldCode === currentVectorFieldCode) {\n      // If field hasn't changed, let's make sure that there was no previous\n      // error\n      if (parserResult && parserResult.error) {\n        // And if there was error, let's revalidate code:\n        parseCode();\n      }\n      return;\n    }\n\n    trySetNewCode(vectorFieldCode).then(function (result) {\n      if (result.cancelled) return;\n\n      if (result && result.error) {\n        updateErrorInfo(result.error);\n        return result;\n      }\n\n      currentVectorFieldCode = vectorFieldCode;\n      api.code = vectorFieldCode;\n      __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].saveCode(vectorFieldCode);\n    });\n  }\n\n  function updateErrorInfo(parserResult) {\n    if (parserResult && parserResult.error) {\n      api.error = parserResult.error;\n      api.errorDetail = parserResult.errorDetail;\n      api.isFloatError = parserResult.isFloatError;\n    } else {\n      api.error = '';\n      api.errorDetail = '';\n      api.isFloatError = false;\n    }\n  }\n\n  function loadCodeFromAppState() {\n    var persistedCode = __WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getCode();\n    if (persistedCode) {\n      trySetNewCode(persistedCode).then(function (result) {\n        if (!result.error) return; // This means we set correctly;\n        // If we get here - something went wrong. see the console\n        console.error('Failed to restore previous vector field: ', result.error);\n        // Let's use default vector field\n        trySetNewCode(__WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getDefaultCode());\n      });\n    } else {\n      // we want a default vector field\n      trySetNewCode(__WEBPACK_IMPORTED_MODULE_1__appState__[\"a\" /* default */].getDefaultCode());\n    }\n  }\n\n  function parseCode(customCode) {\n    return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__getParsedVectorFieldFunction__[\"a\" /* default */])(customCode || currentVectorFieldCode).then(function (currentResult) {\n      parserResult = currentResult;\n      updateErrorInfo(parserResult.error);\n      return parserResult;\n    });\n  }\n\n  function trySetNewCode(vectorFieldCode) {\n    currentVectorFieldVersion += 1;\n    var capturedVersion = currentVectorFieldVersion;\n    // step 1 - run through parser\n    return parseCode(vectorFieldCode).then(function (parserResult) {\n      if (capturedVersion !== currentVectorFieldVersion) {\n        parserResult.cancelled = true;\n        // a newer request was issued. Ignore these results.\n        return parserResult;\n      }\n\n      if (parserResult.error) {\n        return parserResult;\n      }\n      // step 2 - run through real webgl\n      try {\n        drawProgram.updateCode(parserResult.code);\n        return parserResult;\n      } catch (e) {\n        return {\n          error: {\n            error: e.message\n          }\n        };\n      }\n    });\n  }\n}\n\n/***/ }),\n\n/***/ \"cj2E\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = wrapVectorField;\n/**\n * Wraps a simple vector field string into our default shader code.\n * @param {String} field \n */\nfunction wrapVectorField(field) {\n  return \"// Given any state (p.x, p.y),\\n// we define how it moves (v.x, v.y),\\n// determining how space flows.\\n\\nvec2 get_velocity(vec2 p) {\\n\\n  vec2 v = vec2(0., 0.);\\n\\n  \" + field + \"\\n\\n  return v;\\n}\";\n}\n\n/***/ }),\n\n/***/ \"eBcr\":\n/***/ (function(module, exports, __webpack_require__) {\n\n/**\n * A simple message bus. Facilitates uncoupled communication between\n * components of fieldplay.\n */\nvar eventify = __webpack_require__(\"puH/\");\n\nmodule.exports = eventify({});\n\n/***/ }),\n\n/***/ \"egvE\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = loadTexture;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n\n// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\nfunction loadTexture(gl, url) {\n  var resolveTexture, rejectTexture;\n\n  var image = new Image();\n  image.crossOrigin = '';\n\n  image.onload = bindTexture;\n  image.onerror = reportError;\n  image.src = url;\n\n  return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(function (resolve, reject) {\n    resolveTexture = resolve;\n    rejectTexture = reject;\n  });\n\n  function reportError(err) {\n    rejectTexture(err);\n  }\n\n  function bindTexture() {\n    var texture = gl.createTexture();\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, image);\n\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n      gl.generateMipmap(gl.TEXTURE_2D);\n    } else {\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n      gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    resolveTexture(texture);\n  }\n}\n\nfunction isPowerOf2(value) {\n  return (value & value - 1) == 0;\n}\n\n/***/ }),\n\n/***/ \"gIFv\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = colorProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus__ = __webpack_require__(\"eBcr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__bus___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1__bus__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_makeStatCounter__ = __webpack_require__(\"V39N\");\n\n\n\n\n\nvar OUT_V_X = 6;\nvar OUT_V_Y = 7;\n/**\n * This program allows to change color of each particle. It works by\n * reading current velocities into a texture from the framebuffer. Once\n * velocities are read, it checks velocity scale and passes it to a draw program.\n */\nfunction colorProgram(ctx) {\n  var speedNeedsUpdate = true;\n  var gl = ctx.gl;\n\n  var velocity_y_texture, velocity_x_texture;\n  var particleStateResolution;\n  var pendingSpeedUpdate;\n  var numParticles;\n  var velocityCounter = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_makeStatCounter__[\"a\" /* default */])();\n  var velocity_x;\n  var velocity_y;\n\n  listenToEvents();\n\n  return {\n    updateCode: updateCode,\n    updateParticlesPositions: updateParticlesPositions,\n    updateParticlesCount: updateParticlesCount,\n    setColorMinMax: setColorMinMax,\n    requestSpeedUpdate: requestSpeedUpdate,\n    dispose: dispose\n  };\n\n  function listenToEvents() {\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.on('integration-timestep-changed', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.on('bbox-change', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.on('refresh-speed', requestSpeedUpdate);\n  }\n\n  function dispose() {\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.off('integration-timestep-changed', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.off('bbox-change', requestSpeedUpdate);\n    __WEBPACK_IMPORTED_MODULE_1__bus___default.a.off('refresh-speed', requestSpeedUpdate);\n    disposeTextures();\n  }\n\n  function disposeTextures() {\n    if (velocity_x_texture) gl.deleteTexture(velocity_x_texture);\n    if (velocity_y_texture) gl.deleteTexture(velocity_y_texture);\n  }\n\n  function requestSpeedUpdate() {\n    if (pendingSpeedUpdate) clearTimeout(pendingSpeedUpdate);\n    pendingSpeedUpdate = setTimeout(function () {\n      speedNeedsUpdate = true;\n      pendingSpeedUpdate = 0;\n    }, 50);\n  }\n\n  function setColorMinMax(program) {\n    gl.uniform2f(program.u_velocity_range, velocityCounter.getMin(), velocityCounter.getMax());\n  }\n\n  function updateParticlesCount() {\n    disposeTextures();\n\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n\n    velocity_x = new Uint8Array(numParticles * 4);\n    velocity_y = new Uint8Array(numParticles * 4);\n    velocity_x_texture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, velocity_x, particleStateResolution, particleStateResolution);\n    velocity_y_texture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, velocity_y, particleStateResolution, particleStateResolution);\n\n    requestSpeedUpdate();\n  }\n\n  function updateCode() {\n    requestSpeedUpdate();\n  }\n\n  function updateParticlesPositions(program) {\n    if (!speedNeedsUpdate || !velocity_x || !velocity_y) return;\n    speedNeedsUpdate = false;\n\n    // We assume this is called from update position program\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, velocity_x_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_X);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, velocity_y_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_Y);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    updateMinMax();\n  }\n\n  function updateMinMax() {\n    velocityCounter.reset();\n    // TODO: Do I want this to be async?\n    for (var i = 0; i < velocity_y.length; i += 4) {\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      var v = Math.sqrt(vx * vx + vy * vy);\n      velocityCounter.add(v);\n    }\n  }\n}\n\nfunction readFloat(buffer, offset) {\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_floatPacking__[\"b\" /* decodeFloatRGBA */])(buffer[offset + 0], buffer[offset + 1], buffer[offset + 2], buffer[offset + 3]);\n}\n\n/***/ }),\n\n/***/ \"h62Y\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makeScreenProgram;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/**\n * Renders computed state onto the screen.\n */\n\n\nvar NO_TRANSFORM = { dx: 0, dy: 0, scale: 1 };\n\nfunction makeScreenProgram(ctx) {\n  var gl = ctx.gl,\n      canvasRect = ctx.canvasRect;\n\n\n  var screenTexture, backgroundTexture;\n  var boundBoxTextureTransform = { dx: 0, dy: 0, scale: 1 };\n  var lastRenderedBoundingBox = null;\n\n  // TODO: Allow customization? Last time I tried, I didn't like it too much.\n  // It was very easy to screw up the design, and the tool looked ugly :-/\n  // let backgroundColor = { r: 19/255, g: 41/255, b: 79/255, a: 1 }; // deep gray blue (og)\n  var backgroundColor = { r: 12 / 255, g: 16 / 255, b: 18 / 255, a: 0.95 }; // charcoal dark\n\n  updateScreenTextures();\n  var screenProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, getScreenVertexShader(), getScreenFragmentShader());\n\n  var api = {\n    fadeOutLastFrame: fadeOutLastFrame,\n    renderCurrentScreen: renderCurrentScreen,\n    updateScreenTextures: updateScreenTextures,\n\n    boundingBoxUpdated: false\n  };\n\n  return api;\n\n  function fadeOutLastFrame() {\n    // render to the frame buffer\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, ctx.framebuffer, screenTexture);\n    gl.viewport(0, 0, canvasRect.width, canvasRect.height);\n\n    if (api.boundingBoxUpdated && lastRenderedBoundingBox) {\n      // We move the back texture, relative to the bounding box change. This eliminates\n      // particle train artifacts, though, not all of them: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n      // If you know how to improve this - please let me know.\n      boundBoxTextureTransform.dx = -(ctx.bbox.minX - lastRenderedBoundingBox.minX) / (ctx.bbox.maxX - ctx.bbox.minX);\n      boundBoxTextureTransform.dy = -(ctx.bbox.minY - lastRenderedBoundingBox.minY) / (ctx.bbox.maxY - ctx.bbox.minY);\n      boundBoxTextureTransform.scale = (ctx.bbox.maxX - ctx.bbox.minX) / (lastRenderedBoundingBox.maxX - lastRenderedBoundingBox.minX);\n      drawTexture(backgroundTexture, ctx.fadeOpacity, boundBoxTextureTransform);\n    } else {\n      drawTexture(backgroundTexture, ctx.fadeOpacity, NO_TRANSFORM);\n    }\n  } // TODO WAS: is there a way to change this system so that the bc drawing is not faded but erased?\n\n  function renderCurrentScreen() {\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindFramebuffer(gl, null);\n\n    saveLastBbox();\n\n    gl.enable(gl.BLEND);\n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    drawTexture(screenTexture, 1.0, NO_TRANSFORM);\n    gl.disable(gl.BLEND);\n\n    var temp = backgroundTexture;\n    backgroundTexture = screenTexture;\n    screenTexture = temp;\n\n    api.boundingBoxUpdated = false;\n    if (window.audioTexture) {\n      drawTexture(window.audioTexture, 1.0, NO_TRANSFORM);\n    }\n  }\n\n  function updateScreenTextures() {\n    var width = canvasRect.width,\n        height = canvasRect.height;\n\n    var emptyPixels = new Uint8Array(width * height * 4);\n    if (screenTexture) {\n      gl.deleteTexture(screenTexture);\n    }\n    if (backgroundTexture) {\n      gl.deleteTexture(backgroundTexture);\n    }\n\n    screenTexture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n    backgroundTexture = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n  }\n\n  function saveLastBbox() {\n    if (!lastRenderedBoundingBox) {\n      lastRenderedBoundingBox = {\n        minX: ctx.bbox.minX,\n        minY: ctx.bbox.minY,\n        maxX: ctx.bbox.maxX,\n        maxY: ctx.bbox.maxY\n      };\n\n      return;\n    }\n\n    lastRenderedBoundingBox.minX = ctx.bbox.minX;\n    lastRenderedBoundingBox.minY = ctx.bbox.minY;\n    lastRenderedBoundingBox.maxX = ctx.bbox.maxX;\n    lastRenderedBoundingBox.maxY = ctx.bbox.maxY;\n  }\n\n  function drawTexture(texture, opacity, textureTransform) {\n    var program = screenProgram;\n    gl.useProgram(program.program);\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    // TODO: This index is very fragile. I need to find a way\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, texture, ctx.screenTextureUnit);\n    gl.uniform1i(program.u_screen, ctx.screenTextureUnit);\n\n    gl.uniform1f(program.u_opacity_border, 0.02);\n    gl.uniform1f(program.u_opacity, opacity);\n    gl.uniform3f(program.u_transform, textureTransform.dx, textureTransform.dy, textureTransform.scale);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n\nfunction getScreenVertexShader() {\n  return '// screen program\\nprecision highp float;\\n\\nattribute vec2 a_pos;\\nvarying vec2 v_tex_pos;\\nuniform vec3 u_transform;\\n\\nvoid main() {\\n    v_tex_pos = a_pos;\\n    vec2 pos = a_pos;\\n\\n    // This transformation tries to move texture (raster) to the approximate position\\n    // of particles on the current frame. This is needed to avoid rendering artifacts\\n    // during pan/zoom: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\\n\\n    // PS: I must admit, I wrote this formula through sweat and tears, and\\n    // I still have no idea why I don\\'t need to apply (pos.y - 0.5) to Y coordinate.\\n    // Is it because I use aspect ratio for bounding box?\\n    pos.x = (pos.x - 0.5) / u_transform.z - u_transform.x + 0.5 * u_transform.z;\\n    pos.y = pos.y / u_transform.z + u_transform.y;\\n\\n    pos = 1.0 - 2.0 * pos;\\n    gl_Position = vec4(pos, 0, 1);\\n}';\n}\n\nfunction getScreenFragmentShader() {\n  return 'precision highp float;\\nuniform sampler2D u_screen;\\nuniform float u_opacity;\\nuniform float u_opacity_border;\\n\\nvarying vec2 v_tex_pos;\\n\\nvoid main() {\\n  vec2 p = 1.0 - v_tex_pos;\\n  vec4 color = texture2D(u_screen, p);\\n\\n  // For some reason particles near border leave trace when we translate the texture\\n  // This is my dirty hack to fix it: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\\n  if (p.x < u_opacity_border || p.x > 1. - u_opacity_border || p.y < u_opacity_border || p.y > 1. - u_opacity_border) {\\n    gl_FragColor = vec4(0.);\\n  } else {\\n    // opacity fade out even with a value close to 0.0\\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\\n  }\\n}';\n}\n\n/***/ }),\n\n/***/ \"i69e\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n\n\n\n\n\n\n\nvar RungeKuttaIntegrator = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(RungeKuttaIntegrator, _BaseShaderNode);\n\n  function RungeKuttaIntegrator() {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, RungeKuttaIntegrator);\n\n    return __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (RungeKuttaIntegrator.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(RungeKuttaIntegrator)).call(this));\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(RungeKuttaIntegrator, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      return '\\nuniform float u_h;\\n';\n    }\n  }, {\n    key: 'getFunctions',\n    value: function getFunctions() {\n      return '\\nvec2 rk4(const vec2 point) {\\n  vec2 k1 = get_velocity( point );\\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\\n  vec2 k4 = get_velocity( point + k3 * u_h);\\n\\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\\n}';\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      return '\\n  vec2 velocity = rk4(pos);\\n';\n    }\n  }]);\n\n  return RungeKuttaIntegrator;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (RungeKuttaIntegrator);\n\n/***/ }),\n\n/***/ \"iw7m\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = fetchGLSL;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map__ = __webpack_require__(\"ifoU\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__utils_request__ = __webpack_require__(\"C8nW\");\n\n\nvar loadedLinks = new __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_map___default.a(); // from link to response\n\n\nfunction fetchGLSL(link) {\n  if (!link) return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.reject('Missing link');\n  var trimmed = link.trim();\n  if (!trimmed) return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.reject('Missing link');\n\n  var cachedResponse = loadedLinks.get(trimmed);\n  if (cachedResponse) return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.resolve(cachedResponse);\n\n  return __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__utils_request__[\"a\" /* default */])(link).then(function (code) {\n    loadedLinks.set(link, code);\n    return code;\n  });\n}\n\n/***/ }),\n\n/***/ \"jE6c\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = textureCollection_WAS;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\n\n\nfunction textureCollection_WAS(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map(function (d, index) {\n    var textureInfo = {\n      texture: __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    };\n\n    return textureInfo;\n  });\n\n  return {\n    dispose: dispose,\n    bindTextures: bindTextures,\n    assignProgramUniforms: assignProgramUniforms,\n    length: dimensions.length,\n    textures: textures,\n    get: function get(i) {\n      return textures[i];\n    }\n  };\n\n  function assignProgramUniforms(program) {\n    textures.forEach(function (tInfo) {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(function (tInfo) {\n      return gl.deleteTexture(tInfo.texture);\n    });\n  }\n\n  function bindTextures(gl, program) {\n    var extra_tag = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var unit_offset = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : 0;\n\n    textures.forEach(function (tInfo) {\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, tInfo.texture, tInfo.index + unit_offset);\n      gl.uniform1i(program['u_particles_' + tInfo.name + extra_tag], tInfo.index + unit_offset);\n    });\n  }\n}\n\n/***/ }),\n\n/***/ \"n67P\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createInputCollection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map__ = __webpack_require__(\"ifoU\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map__);\n\n/**\n * Collection of input bindings. Individual program works with this collection\n * to command it update texture bindings.\n */\nfunction createInputCollection() {\n  var boundInputs = new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_map___default.a();\n  var currentProgram;\n  return {\n    updateBindings: updateBindings,\n    bindInput: bindInput\n  };\n\n  function bindInput(inputIndex, inputBinding) {\n    var prevBinding = boundInputs.get(inputIndex);\n    if (prevBinding) {\n      prevBinding.dispose();\n    }\n    boundInputs.set(inputIndex, inputBinding);\n  }\n\n  function updateBindings(program) {\n    currentProgram = program;\n    boundInputs.forEach(updateInputBinding);\n  }\n\n  function updateInputBinding(input, inputIndex) {\n    input.updateBinding(currentProgram, inputIndex);\n  }\n}\n\n/***/ }),\n\n/***/ \"p0IO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = wglPanZoom;\n/**\n * Enables panning and zooming of canvas with vector field\n * \n * @param {HTMLCanvasElement} canvas that needs to be panned and zoomed\n * @param {*} updateBoundingBoxCallback callback that is called when vector field bounding box\n * needs to be updated\n */\nfunction wglPanZoom(canvas, updateBoundingBoxCallback) {\n  var lastDx = 0;\n  var lastDy = 0;\n  var lastScale = 1;\n\n  // We need to be moved at least this many pixels in order to let\n  // transform update bounding box.\n  var transformThreshold = 2.1;\n\n  return {\n    applyTransform: function applyTransform(newTransform) {\n      var dx = newTransform.x;\n      var dy = newTransform.y;\n\n      var dScale = lastScale - newTransform.scale;\n      if (dScale === 0 && Math.abs(dx - lastDx) < transformThreshold && Math.abs(dy - lastDy) < transformThreshold) {\n        // Wait for larger transform\n        return;\n      }\n\n      lastDx = dx;\n      lastDy = dy;\n      lastScale = newTransform.scale;\n\n      updateBoundingBoxCallback(newTransform);\n    },\n    getOwner: function getOwner() {\n      return canvas;\n    }\n  };\n}\n\n/***/ }),\n\n/***/ \"p2DF\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__gl_utils__ = __webpack_require__(\"Ddjs\");\n\n\n\nfunction createVideoInput(ctx, url) {\n  var playing = false;\n  var timeupdate = false;\n  var copyVideo = false;\n\n  var video = setupVideo();\n  var currentFrame = createTexture();\n\n  return {\n    updateBinding: updateBinding,\n    dispose: dispose\n  };\n\n  function updateBinding(program, inputIndex) {\n    var realIndex = inputIndex + __WEBPACK_IMPORTED_MODULE_0__config__[\"a\" /* default */].FREE_TEXTURE_UNIT;\n    __WEBPACK_IMPORTED_MODULE_1__gl_utils__[\"a\" /* default */].bindTexture(ctx.gl, currentFrame, realIndex);\n    if (copyVideo) updateTexture(ctx.gl);\n    ctx.gl.uniform1i(program['input' + inputIndex], realIndex);\n  }\n\n  function updateTexture(gl) {\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, srcFormat, srcType, video);\n  }\n\n  function createTexture() {\n    var gl = ctx.gl;\n    var texture = gl.createTexture();\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var width = 1;\n    var height = 1;\n    var border = 0;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    var pixel = new Uint8Array([0, 0, 255, 255]);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat, width, height, border, srcFormat, srcType, pixel);\n\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n\n    return texture;\n  }\n  function dispose() {\n    video.removeEventListener('playing', onPlaying, true);\n    video.removeEventListener('timeupdate', onTimeUpdate, true);\n  }\n\n  function setupVideo() {\n    var video = document.createElement('video');\n    video.crossOrigin = '';\n    video.autoplay = true;\n    video.muted = true;\n    video.loop = true;\n\n    // Waiting for these 2 events ensures there is data in the video\n    video.addEventListener('playing', onPlaying, true);\n    video.addEventListener('timeupdate', onTimeUpdate, true);\n\n    video.src = url;\n    video.play();\n\n    return video;\n  }\n\n  function checkReady() {\n    if (playing && timeupdate) {\n      copyVideo = true;\n    }\n  }\n  function onPlaying() {\n    playing = true;\n    checkReady();\n  }\n\n  function onTimeUpdate() {\n    timeupdate = true;\n    checkReady();\n  }\n}\n\n/***/ }),\n\n/***/ \"p9aJ\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = createCursorUpdater;\n/**\n * This module allows to pass mouse coordinates down to the shader. Coordinates\n * will be available as `vec4 cursor` variable, where `xy` are the last\n * click position, and `zw` are the last hover position.\n * \n * Note: On Touch devices hover is the same click.\n * \n * Hopefully this will enables easier exploration\n */\nfunction createCursorUpdater(ctx) {\n  var canvasRect = ctx.canvasRect,\n      bbox = ctx.bbox;\n\n\n  window.addEventListener('mousemove', onMouseMove, true);\n  window.addEventListener('mousedown', onMouseClick, true);\n  window.addEventListener('touchstart', onTouchStart, true);\n  // window.addEventListener('click', onMouseClick2, true); // FIXME WAS, would like to drag screen around without obejct dissapearing\n  // window.addEventListener('keydown', onKeyDown, true);\n\n  return {\n    dispose: dispose\n  };\n\n  function dispose() {\n    window.removeEventListener('mousemove', onMouseMove, true);\n    window.removeEventListener('mousedown', onMouseClick, true);\n    window.removeEventListener('touchstart', onTouchStart, true);\n    window.removeEventListener('touchmove', onTouchMove, true);\n    // window.removeEventListener('click', onMouseClick2, true); // FIXME WAS\n    // window.removeEventListener('keydown', onKeyDown, true);\n  }\n\n  function onTouchStart(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n\n    setClick(firstTouch.clientX, firstTouch.clientY);\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onTouchMove(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onMouseMove(e) {\n    setHover(e.clientX, e.clientY);\n  }\n\n  function onMouseClick(e) {\n    setClick(e.clientX, e.clientY);\n  }\n\n  function onMouseClick2(e) {\n    setClick2(e.clientX, e.clientY);\n  }\n\n  function setHover(clientX, clientY) {\n    ctx.cursor.hoverX = getSceneXFromClientX(clientX);\n    ctx.cursor.hoverY = getSceneYFromClientY(clientY);\n  }\n\n  function setClick(clientX, clientY) {\n    if (ctx.bc_drawing_mode) {\n      ctx.drawing_click_sum += 1;\n    }\n    ctx.cursor.clickX = getSceneXFromClientX(clientX);\n    ctx.cursor.clickY = getSceneYFromClientY(clientY);\n  }\n\n  function setClick2(clientX, clientY) {\n    // FIXME WAS, would like to drag screen around without obejct dissapearing\n    ctx.cursor.clickX = getSceneXFromClientX(clientX);\n    ctx.cursor.clickY = getSceneYFromClientY(clientY);\n  }\n\n  function getSceneXFromClientX(clientX) {\n    var dx = (clientX - canvasRect.left) / canvasRect.width;\n    return (bbox.maxX - bbox.minX) * dx + bbox.minX;\n  }\n\n  function getSceneYFromClientY(clientY) {\n    var dy = 1. - (clientY - canvasRect.top) / canvasRect.height;\n    return (bbox.minY - bbox.maxY) * dy + bbox.maxY;\n  }\n}\n\n/***/ }),\n\n/***/ \"pKWO\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* unused harmony export default */\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__ = __webpack_require__(\"aZPT\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__ = __webpack_require__(\"3xg8\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__ = __webpack_require__(\"FaU1\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__config__ = __webpack_require__(\"rvz5\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__audioProgram__ = __webpack_require__(\"94y8\");\n\n\n\n\n\n\n\n/**\n * This program manages particles life-cycle. It updates particles positions\n * and initiates drawing them on screen.\n * \n * @param {Object} ctx rendering context. Holds WebGL state\n */\nfunction drawParticlesProgram(ctx) {\n  var gl = ctx.gl;\n\n  var particleStateResolution, particleIndexBuffer;\n  var numParticles;\n\n  var currentVectorField = '';\n  var updatePositionProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_2__updatePositionProgram__[\"a\" /* default */])(ctx);\n  var audioProgram;\n\n  var drawProgram;\n  initPrograms();\n\n  return {\n    updateParticlesCount: updateParticlesCount,\n    updateParticlesPositions: updateParticlesPositions,\n    drawParticles: drawParticles,\n    updateCode: updateCode,\n    updateColorMode: updateColorMode\n  };\n\n  function initPrograms() {\n    // need to update the draw graph because color mode shader has changed.\n    initDrawProgram();\n\n    if (__WEBPACK_IMPORTED_MODULE_4__config__[\"a\" /* default */].isAudioEnabled) {\n      if (audioProgram) audioProgram.dispose();\n      audioProgram = __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__audioProgram__[\"a\" /* default */])(ctx);\n    }\n  }\n\n  function initDrawProgram() {\n    if (drawProgram) drawProgram.unload();\n\n    var drawGraph = new __WEBPACK_IMPORTED_MODULE_1__shaderGraph_DrawParticleGraph__[\"a\" /* default */](ctx);\n    var vertexShaderCode = drawGraph.getVertexShader(currentVectorField);\n    drawProgram = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createProgram(gl, vertexShaderCode, drawGraph.getFragmentShader());\n  }\n\n  function updateParticlesPositions() {\n    if (!currentVectorField) return;\n\n    ctx.frame += 1;\n    ctx.frameSeed = Math.random();\n\n    // TODO: Remove this.\n    if (audioProgram) audioProgram.updateTextures();\n\n    updatePositionProgram.updateParticlesPositions();\n  }\n\n  function updateColorMode() {\n    initDrawProgram();\n  }\n\n  function updateCode(vfCode) {\n    ctx.frame = 0;\n    currentVectorField = vfCode;\n    updatePositionProgram.updateCode(vfCode);\n\n    initDrawProgram();\n  }\n\n  function updateParticlesCount() {\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n    var particleIndices = new Float32Array(numParticles);\n    var particleStateX = new Uint8Array(numParticles * 4);\n    var particleStateY = new Uint8Array(numParticles * 4);\n\n    var minX = ctx.bbox.minX;var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n    for (var i = 0; i < numParticles; i++) {\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * width + minX, particleStateX, i * 4); // randomize the initial particle positions\n      __webpack_require__.i(__WEBPACK_IMPORTED_MODULE_3__utils_floatPacking_js__[\"a\" /* encodeFloatRGBA */])(Math.random() * height + minY, particleStateY, i * 4); // randomize the initial particle positions\n\n      particleIndices[i] = i;\n    }\n\n    if (particleIndexBuffer) gl.deleteBuffer(particleIndexBuffer);\n    particleIndexBuffer = __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createBuffer(gl, particleIndices);\n\n    updatePositionProgram.updateParticlesCount(particleStateX, particleStateY);\n  }\n\n  function drawParticles() {\n    if (!currentVectorField) return;\n\n    var program = drawProgram;\n    gl.useProgram(program.program);\n\n    __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindAttribute(gl, particleIndexBuffer, program.a_index, 1);\n\n    updatePositionProgram.prepareToDraw(program);\n    ctx.inputs.updateBindings(program);\n\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    gl.uniform1f(program.u_particles_res, particleStateResolution);\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n    gl.drawArrays(gl.POINTS, 0, numParticles);\n  }\n}\n\n/***/ }),\n\n/***/ \"pXNl\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = textureCollection;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__gl_utils__ = __webpack_require__(\"Ddjs\");\n/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\n\n\nfunction textureCollection(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map(function (d, index) {\n    var textureInfo = {\n      texture: __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    };\n\n    return textureInfo;\n  });\n\n  return {\n    dispose: dispose,\n    bindTextures: bindTextures,\n    assignProgramUniforms: assignProgramUniforms,\n    length: dimensions.length,\n    textures: textures,\n    get: function get(i) {\n      return textures[i];\n    }\n  };\n\n  function assignProgramUniforms(program) {\n    textures.forEach(function (tInfo) {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(function (tInfo) {\n      return gl.deleteTexture(tInfo.texture);\n    });\n  }\n\n  function bindTextures(gl, program) {\n    textures.forEach(function (tInfo) {\n      __WEBPACK_IMPORTED_MODULE_0__gl_utils__[\"a\" /* default */].bindTexture(gl, tInfo.texture, tInfo.index);\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n}\n\n/***/ }),\n\n/***/ \"rvz5\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0__appState__ = __webpack_require__(\"NEgR\");\n\n\nvar defaultConfig = {\n  // I need to flash our more details before making any promises.\n  isAudioEnabled: false,\n  // this allows to render an overlay grid with vectors. Enable it\n  // and drag the scene a little bit.\n  vectorLinesEnabled: false,\n\n  // Starting from which texture unit we can bind custom inputs?\n  FREE_TEXTURE_UNIT: 4,\n\n  // whether input bindings should be visible\n  showBindings: __WEBPACK_IMPORTED_MODULE_0__appState__[\"a\" /* default */].getQS().get('showBindings') || false\n};\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (defaultConfig);\n\n/***/ }),\n\n/***/ \"s3Ju\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__ = __webpack_require__(\"a8s+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__ = __webpack_require__(\"XFig\");\n\n\n\n\n\n\n\n\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\n\nvar TextureValue = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(TextureValue, _BaseShaderNode);\n\n  function TextureValue(isDecode) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, TextureValue);\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (TextureValue.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(TextureValue)).call(this));\n\n    _this.isDecode = isDecode;\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(TextureValue, [{\n    key: 'getFunctions',\n    value: function getFunctions() {\n      if (this.isDecode) {\n        return '\\n    ' + __WEBPACK_IMPORTED_MODULE_6__parts_encodeFloatRGBA__[\"a\" /* default */] + '\\n    ' + __WEBPACK_IMPORTED_MODULE_7__parts_decodeFloatRGBA__[\"a\" /* default */] + '\\n';\n      }\n    }\n  }, {\n    key: 'getDefines',\n    value: function getDefines() {\n      if (this.isDecode) {\n        // TODO: How to avoid duplication and silly checks?\n        return '\\nprecision highp float;\\n\\nuniform vec2 u_min;\\nuniform vec2 u_max;\\nuniform float value_transfer;\\n\\nuniform sampler2D u_particles_x;     // stores evolving value\\nuniform sampler2D u_particles_y;     // unneeded\\nuniform sampler2D u_particles_x_bc;  // reach bc\\nuniform sampler2D u_particles_y_bc;  // avoid bc\\n\\n// Which coordinate needs to be printed onto the texture\\nuniform int u_out_coordinate;\\n\\nvarying vec2 v_tex_pos;\\n';\n      }\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      if (this.isDecode) {\n        return '\\n  float reach_val = decodeFloatRGBA(texture2D(u_particles_x_bc, 1.-v_tex_pos)); // works when flipped, interesting\\n  float avoid_val = decodeFloatRGBA(texture2D(u_particles_y_bc, 1.-v_tex_pos));\\n  float old_val = decodeFloatRGBA(texture2D(u_particles_x, 1.-v_tex_pos));\\n  \\n  vec2 state = abs(u_max - u_min) * (0.5 - v_tex_pos);\\n  \\n  float val;\\n\\n  // this will probably move to body\\n  if (value_transfer > 0.) {\\n    val = reach_val;\\n    // val = min(reach_val, avoid_val);\\n  } else {\\n    val = old_val;\\n  }\\n';\n      }\n      return '\\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newVal); // write to x only\\n';\n    }\n  }]);\n\n  return TextureValue;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (TextureValue);\n\n/***/ }),\n\n/***/ \"sbZs\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = initAutoMode;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__ = __webpack_require__(\"AMV0\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__ = __webpack_require__(\"woOf\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_number_is_nan__ = __webpack_require__(\"MICi\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_number_is_nan___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_number_is_nan__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3__appState__ = __webpack_require__(\"NEgR\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4__autoPresets__ = __webpack_require__(\"7QEO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__generate_equation__ = __webpack_require__(\"7l3+\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_6__wrapVectorField__ = __webpack_require__(\"cj2E\");\n\n\n\n\n\n\n\n\nvar delayTime = void 0,\n    incomingPresetsQueue = void 0,\n    scene = void 0,\n    scheduledUpdate = void 0,\n    autoSource = void 0;\n\nfunction initAutoMode(_scene) {\n  scene = _scene;\n\n  var qs = __WEBPACK_IMPORTED_MODULE_3__appState__[\"a\" /* default */].getQS();\n\n  autoSource = qs.get('autosource');\n  if (!['presets', 'generator', 'both'].includes(autoSource)) {\n    if (autoSource) {\n      console.error('unknown autosource param; options are presets, generator, or both');\n    }\n\n    autoSource = 'both';\n  }\n\n  var autoTime = qs.get('autotime');\n  if (!autoTime) {\n    autoTime = qs.get('auto'); // Backwards compatibility\n    if (!autoTime) {\n      return;\n    }\n\n    console.warn('the auto param is deprecated; please use autotime');\n  }\n\n  var parsedMilliseconds = parseFloat(autoTime);\n  if (__WEBPACK_IMPORTED_MODULE_2_babel_runtime_core_js_number_is_nan___default()(parsedMilliseconds)) {\n    console.error('malformed autotime param; not a number');\n    return;\n  }\n\n  if (/ms$/i.test(autoTime)) {\n    // Already good\n  } else if (/s$/i.test(autoTime)) {\n    parsedMilliseconds *= 1000; // Convert from seconds\n  } else if (/m$/i.test(autoTime)) {\n    parsedMilliseconds *= 1000 * 60; // Convert from minutes\n  } else if (/h$/i.test(autoTime)) {\n    parsedMilliseconds *= 1000 * 60 * 60; // Convert from hours\n  }\n\n  if (parsedMilliseconds <= 500) {\n    console.warn('autotime param is too small; defaulting to 30 seconds');\n    parsedMilliseconds = 30000;\n  }\n\n  delayTime = parsedMilliseconds;\n  next({ immediately: true });\n\n  // TODO: When user changes any argument of a field, we need to stop the mode.\n  // we could use `bus` here to listen for change events, and dispose.\n  return dispose;\n}\n\nfunction dispose() {\n  clearTimeout(scheduledUpdate);\n  scheduledUpdate = 0;\n  // TODO: When disposed we need to drop the `auto` argument from the query string.\n  // otherwise if people share it, they can unintentionally switch on auto mode\n}\n\nfunction next(options) {\n  options = options || {};\n\n  var source = autoSource;\n  if (source === 'both') {\n    source = Math.random() < 0.5 ? 'presets' : 'generator';\n  }\n\n  if (source === 'generator') {\n    scene.setParticlesCount(500000);\n    scene.vectorFieldEditorState.setCode(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_6__wrapVectorField__[\"a\" /* default */])(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_5__generate_equation__[\"a\" /* default */])()));\n  } else if (source === 'presets') {\n    if (!incomingPresetsQueue || !incomingPresetsQueue.length) {\n      incomingPresetsQueue = shuffle(__WEBPACK_IMPORTED_MODULE_4__autoPresets__[\"a\" /* default */]);\n    }\n\n    var preset = incomingPresetsQueue.shift();\n\n    scene.vectorFieldEditorState.setCode(preset.code);\n\n    if (defined(preset.colorMode)) {\n      scene.setColorMode(preset.colorMode);\n    }\n\n    if (defined(preset.timeStep)) {\n      scene.setIntegrationTimeStep(preset.timeStep);\n    }\n\n    if (defined(preset.fadeOut)) {\n      scene.setFadeOutSpeed(preset.fadeOut);\n    }\n\n    if (defined(preset.dropProbability)) {\n      scene.setDropProbability(preset.dropProbability);\n    }\n\n    if (defined(preset.particleCount)) {\n      scene.setParticlesCount(preset.particleCount);\n    }\n\n    var bbox = __WEBPACK_IMPORTED_MODULE_3__appState__[\"a\" /* default */].makeBBox(preset.cx, preset.cy, preset.w, preset.h);\n    if (bbox) {\n      if (options.immediately) {\n        scene.applyBoundingBox(bbox);\n      } else {\n        animateBBox(bbox);\n      }\n    }\n\n    // TODO: support these additional params: i0, showBindings\n  }\n\n  scheduledUpdate = setTimeout(next, delayTime);\n}\n\nfunction animateBBox(endBBox) {\n  var startBBox = __WEBPACK_IMPORTED_MODULE_1_babel_runtime_core_js_object_assign___default()({}, scene.getBoundingBox());\n  var duration = 3000;\n  var startTime = Date.now();\n  var diffMinX = endBBox.minX - startBBox.minX;\n  var diffMaxX = endBBox.maxX - startBBox.maxX;\n  var diffMinY = endBBox.minY - startBBox.minY;\n  var diffMaxY = endBBox.maxY - startBBox.maxY;\n\n  var frame = function frame() {\n    var factor = (Date.now() - startTime) / duration;\n    if (factor >= 1) {\n      scene.applyBoundingBox(endBBox);\n      return;\n    }\n\n    requestAnimationFrame(frame);\n\n    var bbox = {\n      minX: startBBox.minX + diffMinX * factor,\n      maxX: startBBox.maxX + diffMaxX * factor,\n      minY: startBBox.minY + diffMinY * factor,\n      maxY: startBBox.maxY + diffMaxY * factor\n    };\n\n    scene.applyBoundingBox(bbox);\n  };\n\n  frame();\n}\n\nfunction shuffle(inputArray) {\n  var outputArray = inputArray.slice();\n  for (var i = 0; i < outputArray.length; i++) {\n    var j = Math.floor(Math.random() * outputArray.length);\n    var temp = outputArray[i];\n    outputArray[i] = outputArray[j];\n    outputArray[j] = temp;\n  }\n\n  return outputArray;\n}\n\nfunction defined(number) {\n  return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_number_is_finite___default()(number);\n}\n\n/***/ }),\n\n/***/ \"svlg\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony export (immutable) */ __webpack_exports__[\"a\"] = makePragmaParser;\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__ = __webpack_require__(\"//Fk\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1__fetchGLSL_js__ = __webpack_require__(\"iw7m\");\n\n\n\nvar pragmaInclude = '#include ';\nvar nullCode = { code: ''\n\n  /**\n   * Naively parses glsl code and tries to replace all `#pragma` statements\n   * with empty string. Gives structured collection of pragma statements back\n   * \n   * @param {String} code \n   */\n};function makePragmaParser(code) {\n  if (!code) return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(function (resolve) {\n    return resolve(nullCode);\n  });\n\n  var parsedLines = processLineByLine(code);\n  if (parsedLines.pending.length > 0) {\n    return __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a.all(parsedLines.pending).then(function () {\n      return parsedLines;\n    }).catch(function (error) {\n      return { error: { error: error } };\n    });\n  }\n\n  return new __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_promise___default.a(function (resolve) {\n    return resolve(parsedLines);\n  });\n}\n\nfunction processLineByLine(code) {\n  var pending = [];\n  var lines = code.split('\\n');\n  var outputLines = [];\n  var currentIndex = 0;\n  lines.forEach(function (line, index) {\n    currentIndex = index;\n    if (line && line[0] === '#') {\n      outputLines.push('');\n      processPragma(line);\n    } else {\n      outputLines.push(line);\n    }\n  });\n\n  return {\n    getCode: getCode,\n    pending: pending\n  };\n\n  function getCode() {\n    return outputLines.join('\\n');\n  }\n\n  function processPragma(line) {\n    if (line.indexOf(pragmaInclude) === 0) {\n      var include = line.substr(pragmaInclude.length);\n      var insertIndex = currentIndex;\n      pending.push(__webpack_require__.i(__WEBPACK_IMPORTED_MODULE_1__fetchGLSL_js__[\"a\" /* default */])(include).then(function (code) {\n        outputLines[insertIndex] = code;\n      }));\n    }\n  }\n}\n\n/***/ }),\n\n/***/ \"vhRe\":\n/***/ (function(module, __webpack_exports__, __webpack_require__) {\n\n\"use strict\";\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__ = __webpack_require__(\"Zx67\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__ = __webpack_require__(\"Zrlr\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__ = __webpack_require__(\"wxAW\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__ = __webpack_require__(\"zwoO\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__ = __webpack_require__(\"Pf15\");\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default = __webpack_require__.n(__WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits__);\n/* harmony import */ var __WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__ = __webpack_require__(\"4KA4\");\n\n\n\n\n\n\n\nvar PanzoomTransform = function (_BaseShaderNode) {\n  __WEBPACK_IMPORTED_MODULE_4_babel_runtime_helpers_inherits___default()(PanzoomTransform, _BaseShaderNode);\n\n  function PanzoomTransform(config) {\n    __WEBPACK_IMPORTED_MODULE_1_babel_runtime_helpers_classCallCheck___default()(this, PanzoomTransform);\n\n    // decode is used when we move particle read from the texture\n    // otherwise we write particle to texture and need to reverse transform\n    var _this = __WEBPACK_IMPORTED_MODULE_3_babel_runtime_helpers_possibleConstructorReturn___default()(this, (PanzoomTransform.__proto__ || __WEBPACK_IMPORTED_MODULE_0_babel_runtime_core_js_object_get_prototype_of___default()(PanzoomTransform)).call(this));\n\n    _this.decode = config && config.decode;\n    _this.srcPosName = config && config.posName || 'pos';\n    return _this;\n  }\n\n  __WEBPACK_IMPORTED_MODULE_2_babel_runtime_helpers_createClass___default()(PanzoomTransform, [{\n    key: 'getDefines',\n    value: function getDefines() {\n      if (this.decode) {\n        // TODO: Need to figure out how to not duplicate this.\n        return '\\n  uniform vec2 u_min;\\n  uniform vec2 u_max;\\n';\n      }\n    }\n  }, {\n    key: 'getMainBody',\n    value: function getMainBody() {\n      if (this.decode) {\n        return '\\n  // move particle position according to current transform\\n  vec2 du = (u_max - u_min);\\n  pos.x = ' + this.srcPosName + '.x * du.x + u_min.x;\\n  pos.y = ' + this.srcPosName + '.y * du.y + u_min.y;\\n';\n      }\n      return '\\n  pos.x = (' + this.srcPosName + '.x - u_min.x)/du.x;\\n  pos.y = (' + this.srcPosName + '.y - u_min.y)/du.y;\\n';\n    }\n  }]);\n\n  return PanzoomTransform;\n}(__WEBPACK_IMPORTED_MODULE_5__BaseShaderNode__[\"a\" /* default */]);\n\n/* harmony default export */ __webpack_exports__[\"a\"] = (PanzoomTransform);\n\n/***/ })\n\n},[\"YJWA\"]);\n\n\n// WEBPACK FOOTER //\n// static/js/app.36b73a31145e8db7d8e8.js","import createInputCollection from './programs/inputs/inputCollection';\nimport createVideoInput from './programs/inputs/videoInput';\nimport createImageInputBinding from './programs/inputs/imageInput';\nimport appState from './appState.js';\n\n// Allows to bind media elements to vector field\nexport default function createInputsModel(ctx) {\n  ctx.inputs = createInputCollection();\n  var inputs = [];\n  readInputsFromAppState();\n\n  var api = {\n    getInputs,\n    addInput,\n  };\n\n  return api;\n\n  function getInputs() {\n    return inputs;\n  }\n\n  function addInput(inputNumber) {\n    var vm = createInputElementViewModel(ctx, inputNumber);\n    inputs.push(vm);\n    return vm;\n  }\n\n  function readInputsFromAppState() {\n    var i0 = appState.getQS().get('i0');\n    if (i0) {\n      var vm = addInput(0);\n      vm.link = i0;\n      vm.updateBinding(/* immediate = */ true);\n    }\n  }\n}\n\nfunction createInputElementViewModel(ctx, inputNumber) {\n  var pendingUpdate = null;\n\n  var input = {\n    link: '',\n    error: null,\n    name: `input${inputNumber}`,\n    updateBinding\n  }\n\n  return input;\n\n  function updateBinding(immediate) {\n    if (pendingUpdate) {\n      clearTimeout(pendingUpdate);\n      pendingUpdate = null;\n    }\n\n    if (immediate) {\n      setBinding();\n    } else {\n      pendingUpdate = setTimeout(setBinding, 300);\n    }\n  }\n\n  function setBinding() {\n    input.error = null;\n    pendingUpdate = null;\n    var binding = createImageInputBinding(ctx, input.link, {\n      done() {\n        // TODO: Preview\n        appState.getQS().set(`i${inputNumber}`, input.link);\n      },\n      error(err) {\n        // TODO: Better Error checking\n        input.error = err;\n      }\n    });\n    ctx.inputs.bindInput(0, binding);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/createInputsModel.js","import util from '../gl-utils';\nimport UpdatePositionGraph from '../shaderGraph/updatePositionGraph';\nimport ColorMode from './colorModes';\nimport makeReadProgram from './colorProgram';\nimport textureCollection from '../utils/textureCollection';\nimport makeStatCounter from '../utils/makeStatCounter';\nimport {decodeFloatRGBA} from '../utils/floatPacking';\nimport bus from '../bus';\n\nconst particlePositionShaderCodeBuilder = new UpdatePositionGraph();\n\nexport default function updatePositionProgram(ctx) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  var particleStateResolution;\n  var updateProgram;\n  var readVelocity = makeReadProgram(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  var pendingVectorLines;\n\n  // TODO: need to make sure we are not leaking.\n  bus.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode,\n    updateParticlesPositions,\n    updateParticlesCount,\n    prepareToDraw,\n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    let fragment = particlePositionShaderCodeBuilder.getFragmentShader();\n    let vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    let newProgram = util.createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === ColorMode.VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n  \n  function updateParticlesCount(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = textureCollection(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = textureCollection(gl, dimensions, particleStateResolution);\n\n    readVelocity.updateParticlesCount();\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === ColorMode.VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions() {\n    var program = updateProgram;\n    gl.useProgram(program.program);\n  \n    util.bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n  \n    ctx.inputs.updateBindings(program);\n\n    // TODO: Remove this.\n    if (ctx.audioTexture) {\n      util.bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n  \n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n  \n    // Draw each coordinate individually\n    for(var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound, i.e. allocate X ms to\n    // process particle positions, and move on. So that the rendering thread is not paused for too long\n    if (ctx.colorMode === ColorMode.VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    if (pendingVectorLines) {\n      processVectorLinesRequest(program);\n      pendingVectorLines = null;\n    }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  function putVectorLinesRequestIntoQueue(request) {\n    pendingVectorLines = request;\n  }\n\n  function processVectorLinesRequest(program) {\n    // TODO: Move this out\n    var dimensions = [{\n      name: 'x',\n      particleState: pendingVectorLines.x\n    }, {\n      name: 'y',\n      particleState: pendingVectorLines.y\n    }];\n\n    // We create temporary textures and load requested positions in there\n    var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n    var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n    var texturesForRead = textureCollection(gl, dimensions, resolutionOfParticlesInRequest);\n    var texturesForWrite = textureCollection(gl, dimensions, resolutionOfParticlesInRequest);\n\n    texturesForRead.bindTextures(gl, program);\n\n    // Then we request coordinates out from GPU for each dimension\n    var writeInfo = texturesForWrite.get(0);\n    gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n    util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_x = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    gl.uniform1i(program.u_out_coordinate, 7); // v_y\n    writeInfo = texturesForWrite.get(1);\n    util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n    gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n    var velocity_y = new Uint8Array(numParticles * 4);\n    gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    texturesForWrite.dispose();\n    texturesForRead.dispose();\n\n    var xStats = makeStatCounter();\n    var yStats = makeStatCounter();\n\n    var decoded_velocity_x = new Float32Array(numParticles);\n    var decoded_velocity_y = new Float32Array(numParticles);\n    for(var i = 0; i < velocity_y.length; i+=4) {\n      var idx = i/4;\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      decoded_velocity_x[idx] = vx;\n      decoded_velocity_y[idx] = vy;\n      xStats.add(vx);\n      yStats.add(vy);\n    }\n\n    var vectorLineInfo = {\n      xStats,\n      yStats,\n      decoded_velocity_x,\n      decoded_velocity_y,\n      resolution: resolutionOfParticlesInRequest\n    };\n\n    bus.fire('vector-line-ready', vectorLineInfo);\n  }\n}\n\nfunction readFloat(buffer, offset) {\n    return decodeFloatRGBA(\n      buffer[offset + 0],\n      buffer[offset + 1],\n      buffer[offset + 2],\n      buffer[offset + 3]\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/updatePositionProgram.js","export default class BaseShaderNode {\n  constructor() { }\n  getDefines() { return ''; }\n  getFunctions() { return ''; }\n  getMainBody() { return ''; }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/BaseShaderNode.js","/**\n * Various color modes.\n */\nexport default {\n  /**\n   * Each particle gets its own color\n   */\n  UNIFORM: 1,\n\n  /**\n   * Color of a particle depends on its velocity\n   */\n  VELOCITY: 2,\n\n  /**\n   * Color of a particle depends on its velocity vector angle.\n   */\n  ANGLE: 3,\n\n  /**\n   * Each particle gets one of two colors\n   */\n  DUAL: 4,\n\n  /**\n   * The color comes from a shader. WIP\n   */\n  CUSTOM: 5,\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/colorModes.js","export default [\n  {\n    \"name\": \"Secret door\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": -0.15344999999999986,\n    \"cy\": -0.1291,\n    \"w\": 7.4611,\n    \"h\": 7.4611,\n    \"code\": `// p.x and p.y are current coordinates\n  // v.x and v.y is a velocity at point p\n  vec2 get_velocity(vec2 p) {\n    vec2 v = vec2(0., 0.);\n\n    // change this to get a new vector field\n    v.x = p.y*p.y ;\n    v.y = -p.x*p.x *.05;\n\n    return v;\n  }`\n  },\n  {\n    \"name\": \"Miserables graph with edges\",\n    \"timeStep\": -0.001,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.008,\n    \"colorMode\": 2,\n    \"cx\": 0.467,\n    \"cy\": 1.5294,\n    \"w\": 0.9368,\n    \"h\": 0.9368,\n    \"showBindings\": 1,\n    \"i0\": \"https://gist.githubusercontent.com/anvaka/ebc18e3ffe05b0709a7ae933261fa2e9/raw/bafb63d01e0ab37c1f9b51522a5ec4fbc19bc4f1/edges.png\",\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  vec4 c = texture2D(input0, vec2(mod(p.x,1.), 1. - mod(p.y, 1.)));\n  v.x = (c.r + c.g/255.) - 0.5;\n  v.y = 0.5 - (c.b + c.a/255.);\n\n  if (length(v) < 0.1) v = vec2(0.);\n  return (v);\n}`,\n    \"particleCount\": 40000\n  },\n  {\n    \"name\": \"Roads\",\n    \"timeStep\": 0.001,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 2,\n    \"cx\": 0.478,\n    \"cy\": 0.2636,\n    \"w\": 0.9922,\n    \"h\": 0.9922,\n    \"showBindings\": 0,\n    \"i0\": \"https://gist.githubusercontent.com/anvaka/ebc18e3ffe05b0709a7ae933261fa2e9/raw/cd7d82c5a235f50f5655ac94aa9077709731adde/binary_tree.png\",\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  vec4 c = texture2D(input0, vec2(mod(p.x,1.), 1. - mod(p.y, 1.)));\n  v.x = (c.r + c.g/255.) - 0.5;\n  v.y = 0.5 - (c.b + c.a/255.);\n\n  return (v);\n}`,\n    \"particleCount\": 40000\n  },\n  {\n    \"name\": \"Four counterclockwise cogs pushing particles clockwise :)\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0.7887499999999994,\n    \"cy\": -0.5769500000000001,\n    \"w\": 16.3759,\n    \"h\": 16.3759,\n    \"code\": `vec2 field(vec2 p) {\n  float d = length(p);\n  return vec2(-p.y, p.x) * exp(-d*d*0.1);\n}\n// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v = field(p + vec2(-5., 0.)) +\n    field(p + vec2(-2.5, 2.5)) +\n    field(p + vec2(0., 0.)) +\n    field(p + vec2(-2.5, -2.5));\n  return v;\n}`\n  },\n  {\n    \"name\": \"Waveshaping [interactive]\",\n    \"cx\": 0,\n    \"cy\": -0.060899999999999954,\n    \"w\": 12,\n    \"h\": 12,\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 2,\n    \"code\": `float f(float x) {\n  bool supportsHover = length(cursor.zw) > 0.01;\n  vec2 c = supportsHover ? cursor.zw : cursor.xy;\n  float f1 = sin(x);\n  float f2 = sin(2.*x);\n  float f3 = sin(3.*x);\n  float f4 = sin(4.*x);\n  float f5 = sin(5.*x);\n  return f1 +\n    f2*c.x/4. +\n    f3*c.y/6. +\n    f4*c.x/8. +\n    f5*c.y/10.;\n}\n\nfloat df(float x) {\n  float h = 0.001;\n  return (f(x+h)-f(x-h))/(2.*h);\n}\n\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  float fx = f(p.x);\n  float d = abs(p.y-fx);\n  float dfx = df(p.x);\n  vec2 toOrigin = -p/(20.*length(p));\n  vec2 toF = 0.1*vec2(0.,fx-p.y);\n  v = d < 0.1 ? vec2(1.,dfx) : toF;\n  return v;\n}`,\n    \"particleCount\": 50000\n  },\n  {\n    \"name\": \"Hex plane [interactive]\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.99,\n    \"dropProbability\": 0.99,\n    \"colorMode\": 3,\n    \"cx\": 0,\n    \"cy\": 0,\n    \"w\": 8.5398,\n    \"h\": 8.5398,\n    \"code\": `vec2 nearest(vec2 p) {\n// Charles Chambers black hex magic\nfloat temp = floor(p.x + sqrt(3.) * p.y + 1.);\nfloat q = floor((floor(2.*p.x+1.) + temp) / 3.);\nfloat r = floor((temp + floor(-p.x + sqrt(3.) * p.y + 1.))/3.);\nreturn vec2(q-p.y/2.,r-p.y/8.);\n}\n\n// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n  float f = frame/1000.;\n  float z = (3.-p.y)/(6.+cursor.zw.y*2.);\n  float a = cursor.zw.x;\n  vec2 r = vec2(cos(a)*p.x - sin(a)*p.y,sin(a)*p.x+cos(a)*p.y);\n  vec2 t = vec2(r.x / z, r.y / z);\n  vec2 n = nearest(t);\n  v.x = t.x-n.x;\n  v.y = t.y-n.y;\n  return v;\n}`,\n    \"particleCount\": 500000\n  },\n  {\n    \"name\": \"Rain\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0,\n    \"cy\": 0,\n    \"w\": 8.5398,\n    \"h\": 8.5398,\n    \"code\": `bool isUnshadowed(vec2 p) {\n  bool upper = length(p) > 1.0 && p.y > 0.0;\n  bool lower = length(p) > 1.0 && p.y < 0.0 && abs(p.x) > 1.0;\n  return upper || lower;\n}\n\nvec2 unshadowedV(vec2 p) {\n  return vec2(0.0,-3.0+p.y);\n}\n\nbool isSpray(vec2 p) {\n  return length(p) > 1.0 && abs(p.x) < 1.0;\n}\n\nvec2 sprayV(vec2 p) {\n  float vy = -1.0+p.y;\n  float vx = p.x > 0.0 ? (1.0-p.x)/vy : (-1.0-p.x)/vy;\n  return vec2(vx,vy);\n}\n\nbool isCircle(vec2 p) {\n  return length(p) > 1.0 && length(p) < 1.05;\n}\n\nvec2 circleV(vec2 p) {\n  vec2 v = vec2(0., 0.);\n  v.x = sign(p.x)* p.y;\n  v.y = -abs(p.x);\n  return v;\n}\n\n// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  v = isCircle(p) ? circleV(p) :\n      isUnshadowed(p) ? unshadowedV(p) :\n      isSpray(p) ? sprayV(p) : vec2(1.0/0.0,1.0/0.0);\n\n  return v;\n}`,\n    \"particleCount\": 10000\n  },\n  {\n    \"name\": \"Mouse-driven Julia Set\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.9,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 3,\n    \"cx\": -0.27144999999999997,\n    \"cy\": 0.14175000000000004,\n    \"w\": 6.120699999999999,\n    \"h\": 6.120699999999999,\n    \"particleCount\": 1000000,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float a = cursor.zw.x;\nfloat b = cursor.zw.y;\nfloat sx = p.x/2.0;\nfloat sy = p.y/2.0;\nfloat i1x = sx*sx - sy*sy+a;\nfloat i1y = -2.0*sx*sy+b;\nfloat i2x = i1x*i1x - i1y*i1y+a;\nfloat i2y = -2.0*i1x*i1y+b;\nfloat i3x = i2x*i2x - i2y*i2y+a;\nfloat i3y = -2.0*i2x*i2y+b;\nfloat i4x = i3x*i3x - i3y*i3y+a;\nfloat i4y = -2.0*i3x*i3y+b;\nfloat i5x = i4x*i4x - i4y*i4y+a;\nfloat i5y = -2.0*i4x*i4y+b;\nfloat i6x = i5x*i5x - i5y*i5y+a;\nfloat i6y = -2.0*i5x*i5y+b;\nfloat i7x = i6x*i6x - i6y*i6y+a;\nfloat i7y = -2.0*i6x*i6y+b;\nfloat i8x = i7x*i7x - i7y*i7y+a;\nfloat i8y = -2.0*i7x*i7y+b;\nfloat i9x = i8x*i8x - i8y*i8y+a;\nfloat i9y = -2.0*i8x*i8y+b;\n\n  float n = sqrt(i9x*i9x+i9y*i9y);\n\nv.x = n > 2.0 ? -p.x/10.0 : p.x/10.0;\nv.y = n > 2.0 ? -p.y/10.0 : p.y/10.0;\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"Hyperjump\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 2,\n    \"cx\": 0.523299999999999,\n    \"cy\": 1.2703999999999995,\n    \"w\": 48.3842,\n    \"h\": 48.3842,\n    \"code\": `vec2 circle(vec2 p, vec2 c) {\n  vec2 c0 = p - c;\n  vec2 p0 = vec2(-c0.y, c0.x);\n  float l = length(p0);\n  return p0 * exp(-l*sin(frame*0.01));\n}\n// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = circle(p, vec2(0., 0.));\n\n  float r = 7.;\n  for (int i = 0; i < 2; ++i) {\n    float a = 0.01 * frame + float(i) * 2.*PI/7.;\n    v += circle(p, vec2(r * cos(a) , r * sin(a)));\n  }\n  return v;\n}`,\n    \"particleCount\": 30000\n  },\n  {\n    \"name\": \"Particle Grinder\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0.028149999999999675,\n    \"cy\": 0.08830000000000005,\n    \"w\": 9.045300000000001,\n    \"h\": 9.045300000000001,\n    \"code\": `vec2 tensor(vec2 p, vec2 c0, vec4 abcd, float N) {\n  vec2 p0 = p - c0;\n  float theta = atan(p0.y, p0.x);\n  float c = cos(N * theta);\n  float s = sin(N * theta);\n  return length(p0) * vec2(abcd[2] * c + abcd[3] * s,\n              abcd[0] * c + abcd[1] * s);\n}\n\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n  v = tensor(p, vec2(0., 0.), vec4(-2., 0., 0., 1.), 2.);\n  return v;\n}`\n  },\n  {\n    \"name\": \"Hyperbolic flux [interactive]\",\n    \"timeStep\": 0.001,\n    \"fadeOut\": 0.999,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 3,\n    \"cx\": -0.11990000000000034,\n    \"cy\": 0.018899999999999917,\n    \"w\": 8.5442,\n    \"h\": 8.5442,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  float ax = (cursor.zw.x - p.x);\n  float ay = (cursor.zw.y - p.y);\n  float al = sqrt(ax*ax+ay*ay);\n\n  float rx = (p.x-cursor.xy.x);\n  float ry = (p.y-cursor.xy.y);\n  float rl = sqrt(rx*rx+ry*ry);\n\n  // change this to get a new vector field\n  v.x = (ax*ax*ry + ay*rx*rx)/(al*rl);\n  v.y = (ay*ay*rx + ax*ry*ry)/(al*rl);\n\n  return v;\n}`,\n    \"particleCount\": 1000000\n  },\n  {\n    \"name\": \"Swim against the current\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 3,\n    \"cx\": 3.0524500000000003,\n    \"cy\": -1.3792,\n    \"w\": 8.5397,\n    \"h\": 8.5397,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float dx1 = cursor.zw.x - p.x;\nfloat dy1 = cursor.zw.y - p.y;\nfloat dl1 = sqrt(dx1*dx1+dy1*dy1);\ndx1 = dx1/dl1;\ndy1 = dy1/dl1;\n\nfloat dx2 = cursor.xy.x - p.x;\nfloat dy2 = cursor.xy.y - p.y;\nfloat dl2 = sqrt(dx2*dx2+dy2*dy2);\ndx2 = dx2/dl2;\ndy2 = dy2/dl2;\n\nfloat fx = cursor.xy.x - cursor.zw.x;\nfloat fy = cursor.xy.y -\ncursor.zw.y;\nfloat fl = sqrt(fx*fx+fy*fy);\nfx = -fx/fl;\nfy = -fy/fl;\n\nfloat d1 = (dx1*fx + dy1*fy)/(dl1*fl);\nfloat d2 = 1.-d1;\nv.x = d1*fx+d2*dx2;\nv.y = d1*fy+d2*dy2;\n\n  return v;\n}`,\n    \"particleCount\": 100900\n  },\n  {\n    \"name\": \"Eye of Sauron (interactive)\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.988,\n    \"dropProbability\": 0.008,\n    \"colorMode\": 2,\n    \"cx\": 0.3991000000000007,\n    \"cy\": -0.11315000000000008,\n    \"w\": 37.0984,\n    \"h\": 37.0984,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  // calculate distortion map (reverse solver)\n// the distortion map is based on a sphere, but smoothed to the ends: sqrt(1-(x^8/(x^8-1))^(1/4))\n\nfloat dist_radius = 7.8;\nvec2 distortion = cursor.zw;\nif (length(distortion) > 4.5) {\n    distortion = normalize(distortion) *4.5;\n}\n\n// iterative reverse algo. after all, we knew the result position already, we're trying to reason back to what the original position was\nvec2 d = p;\nfor (int i = 0; i < 10; i++) {\n    // calculate distortion effect magnitude\n    float d_scale = pow(length(d) / dist_radius, 8.);\n    // pseudo sphere map\n    d_scale = pow(1. - pow(d_scale / (d_scale + 1.), .25), .5);\n    d = p - distortion * d_scale;\n}\n\n// calculate differentials, working backwards (i.e. what change in p would result from a change in d)\nvec2 d_dx  = d + vec2(0.1, 0.0);\nfloat d_dx_scale = pow(length(d_dx) / dist_radius, 8.);\nd_dx_scale = pow(1. - pow(d_dx_scale / (d_dx_scale + 1.), .25), .5);\nvec2 dx = (d_dx + distortion * d_dx_scale - p) / 0.1;\n\nvec2 d_dy  = d + vec2(0.0, 0.1);\nfloat d_dy_scale = pow(length(d_dy) / dist_radius, 8.);\nd_dy_scale = pow(1. - pow(d_dy_scale / (d_dy_scale + 1.), .25), .5);\nvec2 dy = (d_dy + distortion * d_dy_scale - p) / 0.1;\n\n// center parts\nfloat pupilrange = length(vec2(d.y, d.x + 6.*sign(d.x)));\nvec2 pupilborder = 2.6*vec2(-d.y, (d.x + 6.*sign(d.x)) );\nv += pupilborder * smoothstep(6.6, 6.8, pupilrange) * (1. - smoothstep(6.9, 7.1, pupilrange));\n\nfloat range = length(d);\nvec2 iris = 7.*d/sqrt(range);\nv += iris * smoothstep(7.0, 7.5, pupilrange) * (1. - smoothstep(3.8, 4.0, range));\n\nvec2 pupil = 1.*vec2(d.x+1.*sign(d.x), d.y);\nv += pupil * (1. - smoothstep(6.6, 6.8, pupilrange));\n\n// absolute parts\nvec2 psign = sign(d);\nvec2 a = abs(d);\nvec2 vabs = vec2(0.0, 0.0);\n\nfloat borderrange = length(vec2(d.x, d.y + 7.*sign(d.y)));\nvec2 border = -1.5*vec2(a.y + 7.*sign(a.y) - 3./(a.y + 1.), -a.x + 3./(a.x + 1.));\nvabs += border * smoothstep(10.8, 11.25, borderrange) * (1. - smoothstep(11.25, 11.7, borderrange)) * smoothstep(3.8, 4.1, range) * (a.y / (a.y + 1.));\n\nvec2 irisborder = 5.*vec2(a.y, -a.x) * (a.y / (a.y + 3.))+ .2 * a;\nvabs += irisborder * smoothstep(3.8, 4.25, range) * (1. - smoothstep(4.25, 4.7, range));\n\nvec2 white = 12.*vec2(1.0, -0.2 * (a.y));\nvabs += white * smoothstep(4.3, 4.5, range) * (1. - smoothstep(11., 11.3, borderrange));\n\nv += vabs * psign;\n\n// outside part\nvec2 outside = d / pow(borderrange - 10., 2.);\nv -= outside * smoothstep(11.3, 11.5, borderrange);\n\n// velocity distortion mapping\nv = v.x * dx + v.y * dy;\n\n// color mapping\nif (length(v) > 0.01) {\n    v = normalize(v) * 10.;\n}\nv = v / (1. + 0.1 * (borderrange - 10.) * smoothstep(11.5, 12.5, borderrange));\n\n\n\n  return v;\n}`,\n    \"particleCount\": 30000\n  },\n  {\n    \"name\": \"Combination of two fields. One follows cursor\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0,\n    \"cy\": 0,\n    \"w\": 8.5398,\n    \"h\": 8.5398,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  vec2 p1 = p - vec2(-2., 0.);\nvec2 p2 = p - cursor.zw;\n\nfloat l1 = length(p1), l2 = length(p2);\n\nv = vec2(-p1.y, p1.x)/(l1 * l1) + vec2(-p2.y, p2.x)/(l2 * l2);\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"[Randomized] nice symmetry\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.988,\n    \"dropProbability\": 0.008,\n    \"colorMode\": 2,\n    \"cx\": -2.6390499999999992,\n    \"cy\": -1.1419499999999996,\n    \"w\": 46.508700000000005,\n    \"h\": 46.508700000000005,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v.x = p.y/cos(length(p));\n  v.y = max((log(p.y)+p.x),p.x);\n\n  return v;\n}`,\n    \"particleCount\": 20000\n  },\n  {\n    \"name\": \"A city block from a parallel Universe (by @MananG_8)\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.988,\n    \"dropProbability\": 0.008,\n    \"colorMode\": 1,\n    \"cx\": 0.6165500000000002,\n    \"cy\": -1.87745,\n    \"w\": 9.0455,\n    \"h\": 9.0455,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v.x = sin(tan(p.x))*cos(tan(p.y));\n  v.y = sin(tan(p.y))*cos(tan(p.x));\n\n  return v;\n}\n`,\n    \"particleCount\": 20000\n  },\n  {\n    \"name\": \"♥ by @SAKrisT\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 2,\n    \"cx\": -1.4246499999999997,\n    \"cy\": 0.92285,\n    \"w\": 8.5397,\n    \"h\": 8.5397,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float size = 1.0;\n  vec2 o = (p)/(1.6* size);\n  float a = o.x*o.x+o.y*o.y-0.3;\n  v = vec2(step(a*a*a, o.x*o.x*o.y*o.y*o.y));\n\n  return v;\n}\n`\n  },\n  {\n    \"name\": \"Dynamic vector field by Evgeniy Andreev. Not defined by physical system, but beautiful.\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 3,\n    \"cx\": -1.6564499999999995,\n    \"cy\": -0.36424999999999974,\n    \"w\": 24.7317,\n    \"h\": 24.7317,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float dt = 0.01;\n  float t = frame*dt;\n  float w = 2.*PI/5.;\n  float A = 2.;\n\n  float d = sqrt(p.x*p.x + p.y*p.y);\n  v.x = A*cos(w*t/d);\n  v.y = A*sin(w*t/d);\n\n  return v;\n}`,\n    \"particleCount\": 3000\n  },\n  {\n    \"name\": \"Behold (by /u/censored_username)\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.988,\n    \"dropProbability\": 0.008,\n    \"colorMode\": 2,\n    \"cx\": 0.12704999999999966,\n    \"cy\": 0.1923499999999998,\n    \"w\": 22.5709,\n    \"h\": 22.5709,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float x = abs(p.x) - 5.;\n  float side = sign(p.x);\n  float range = length(vec2(x, p.y));\n  float irisrange = length(vec2(x, p.y + 2.*sign(p.y)));\n\n  vec2 border = 1.*vec2(p.y + 2.2*sign(p.y) * (p.y*p.y / (p.y*p.y + 0.01)), -x);\n\n  vec2 outside = vec2(x / (1.+10./abs(p.x*p.x)), p.y);\n\n  vec2 spiral = vec2(p.y, -x);\n\n  vec2 iris = sin(-range * 10.) * spiral + 0.05*vec2(x, p.y);\n\n  v += outside * (smoothstep(4.0, 4.5, irisrange)/range*5. - 5.*smoothstep(0.9, 0.7, range)/range);\n  v += border * smoothstep(3.5, 4., irisrange) * smoothstep(4.5, 4., irisrange);\n  v += iris * smoothstep(2.0, 1.5, range) * smoothstep(0.8, 1., range);\n  v -= 10.0*spiral * smoothstep(1.0, 0.8, range) * smoothstep(0.7, 0.9, range);\n\n  v.x *= side;\n  v *= -1.;\n\n  return v;\n}`,\n    \"particleCount\": 30000\n  },\n  {\n    \"name\": \"README 1\",\n    \"timeStep\": 0.007,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": -1.275949999999999,\n    \"cy\": -1.6277,\n    \"w\": 30.2937,\n    \"h\": 30.2937,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v.x = length(p)*min(sin(p.y),cos(p.x));\nv.y = cos((p.y+p.y));\n\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"README 2\",\n    \"timeStep\": 0.007,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": -1.275949999999999,\n    \"cy\": -1.62765,\n    \"w\": 30.2937,\n    \"h\": 30.2937,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v.x = cos(p.y);\nv.y = cos(p.x);\n\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"README 3\",\n    \"timeStep\": 0.02,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0.21419999999999995,\n    \"cy\": -0.7710999999999997,\n    \"w\": 55.970200000000006,\n    \"h\": 55.970200000000006,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v.x = min(sin(exp(p.x)),sin(length(p)));\nv.y = sin(p.x);\n\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"README 4\",\n    \"timeStep\": 0.02,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 2.43185,\n    \"cy\": -1.1695,\n    \"w\": 11.4385,\n    \"h\": 11.4385,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v.x = (p.y+cos(p.y));\nv.y = sin(min(length(p),log((p.y+p.x))*p.x));\n\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"True Dipole\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0,\n    \"cy\": 0,\n    \"w\": 8.5398,\n    \"h\": 8.5398,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float x = p.x;\nfloat y = p.y;\n\n// true dipole\nv.x = 2.0*x*y;\nv.y = y*y - x*x;\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"Flow profile of a sphere\",\n    \"timeStep\": 0.011,\n    \"fadeOut\": 0.99999,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": -0.7177000000000002,\n    \"cy\": -0.11769999999999992,\n    \"w\": 11.434999999999999,\n    \"h\": 11.434999999999999,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float x = p.x;\nfloat y = p.y;\nfloat r = sqrt(x*x+y*y);\nfloat sinth = y/r;\nfloat costh = x/r;\nfloat R = 1.;\nfloat Uinf = 1.;\n// radial flow\nfloat ur = Uinf*(1.-1.5*R/r+0.5*R*R*R/(r*r*r))*costh;\n// theta flow\nfloat uth = Uinf*(-1.+0.75*R/r+0.25*R*R*R/(r*r*r))*sinth;\n// to ux uy\nv.x = costh*ur-sinth*uth;\nv.y = sinth*ur+costh*uth;\n\n  return v;\n}`,\n    \"particleCount\": 7000\n  },\n  {\n    \"name\": \"Best vortex\",\n    \"colorMode\": 2,\n    \"cx\": -6.158449999999998,\n    \"cy\": -0.9834499999999995,\n    \"w\": 96.8415,\n    \"h\": 96.8415,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float r = length(p);\nfloat theta = atan(p.y, p.x);\nv = vec2(p.y, -p.x) / r;\nfloat t = sqrt(r * 10.) + theta + frame * .02;\nv *= sin(t);\nv *= length(v) * 10.;\nv += p * .2;\n\n  return v;\n}`,\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.9,\n    \"dropProbability\": 0.009,\n    \"particleCount\": 100000\n  },\n  {\n    \"name\": \"Black hole\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": -0.47934999999999994,\n    \"cy\": 0.3591500000000001,\n    \"w\": 8.5397,\n    \"h\": 8.5397,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float a = .1;\nfloat r2 = p.x * p.x + p.y * p.y;\nv = vec2(p.y, -p.x) / r2 - a * p;\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"Julia set\",\n    \"timeStep\": 0.004,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": -0.40235,\n    \"cy\": -0.01795000000000002,\n    \"w\": 5.0845,\n    \"h\": 5.0845,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  vec2 c = p;\nvec2 z = vec2(.4, .5);\nfor (int i = 0; i < 8; i++) {\n   c = vec2(c.x * c.x - c.y * c.y, c.y * c.x + c.x * c.y);\n   c += z;\n}\nv = c;\n\n\n  return v;\n}`,\n    \"particleCount\": 10000\n  },\n  {\n    \"name\": \"Mandelbrot set\",\n    \"timeStep\": 0.004,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 3,\n    \"cx\": -0.5678,\n    \"cy\": -0.07015000000000005,\n    \"w\": 4.9902,\n    \"h\": 4.9902,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  vec2 z = p;\nfor(int k=0; k<50; k++) {\nz = vec2(z.x * z.x - z.y * z.y, 2. * z.x * z.y) + p;\n}\n\nfloat mask = step(length(z), 2.);\nv.x = -p.y/length(p) * (0.5 - mask);\nv.y = p.x/length(p) * (0.5 - mask);\n\n\n\n\n  return v;\n}`,\n    \"particleCount\": 30000\n  },\n  {\n    \"name\": \"Reflecting pool\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0,\n    \"cy\": 0,\n    \"w\": 8.5398,\n    \"h\": 8.5398,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  v.x = sin(5.0*p.y + p.x);\nv.y = cos(5.0*p.x - p.y);\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"Shear zone\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 1,\n    \"cx\": 0,\n    \"cy\": 0,\n    \"w\": 8.539734222673566,\n    \"h\": 8.539734222673566,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float r = length(p) - 1.5;\nfloat c = 1.0/(1.0+exp(-5.0*r));\nfloat vx1 = -p.y,  // circle\n      vy1 = p.x;\nfloat vx2 = 0.2*p.x+p.y, // spiral\n      vy2 = 0.2*p.y-p.x;\nv.x = c*vx1 + (1.0-c)*vx2;\nv.y = c*vy1 + (1.0-c)*vy2;\n\n\n  return v;\n}`\n  },\n  {\n    \"name\": \"Beautiful field\",\n    \"timeStep\": 0.01,\n    \"fadeOut\": 0.998,\n    \"dropProbability\": 0.009,\n    \"colorMode\": 3,\n    \"cx\": -1.6564499999999995,\n    \"cy\": -0.36424999999999974,\n    \"w\": 24.7317,\n    \"h\": 24.7317,\n    \"code\": `// p.x and p.y are current coordinates\n// v.x and v.y is a velocity at point p\nvec2 get_velocity(vec2 p) {\n  vec2 v = vec2(0., 0.);\n\n  // change this to get a new vector field\n  float dt = 0.01;\nfloat t = frame*dt;\nfloat w = 2.*PI/5.;\nfloat A = 2.;\n\nfloat d = sqrt(p.x*p.x + p.y*p.y);\nv.x = A*cos(w*t/d);\nv.y = A*sin(w*t/d);\n\n  return v;\n}`,\n    \"particleCount\": 3000\n  }\n];\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/autoPresets.js","/**\n * A tiny toy equation generator. It is very naive, and does silly things\n * sometimes. Feel free to improve.\n */\n\nvar cfProb = 10; // base probability to generate a point.\n\nvar probabilityClass = {\n  POINT: cfProb,\n  LENGTH: cfProb * 0.5,\n  TRIGONOMETRY: cfProb * 0.9,\n  ARITHMETICS: cfProb * 0.6,\n  MINMAX: cfProb * 0.4,\n  EXP: cfProb * 0.1,\n  SIGN: cfProb * 0.01,\n}\n\nclass BaseFunctionNode {\n  constructor(className) {\n    this.probability = 0;\n    this.className = className;\n  }\n\n  getProbability() {\n    return probabilityClass[this.className];\n  }\n\n  render() {\n    return '';\n  }\n}\n\nclass SingleArgumentFunction extends BaseFunctionNode {\n  constructor(operator, p) {\n    super(p);\n    this.operator = operator;\n  }\n\n  render() {\n    var prevP = this.p;\n\n    var prevP = this.getProbability();\n    probabilityClass[this.className] *= 0.25;\n    normalizeProbabilities();\n    let args = generateArguments();\n    probabilityClass[this.className] = prevP;\n    normalizeProbabilities();\n    return this.operator(args);\n  }\n}\n\nclass DualArgumentFunction extends BaseFunctionNode {\n  constructor(operator, p) {\n    super(p);\n    this.operator = operator;\n  }\n\n  render() {\n    // Decrease our probability to appear\n    var prevP = this.getProbability();\n    probabilityClass[this.className] *= 0.25;\n\n    normalizeProbabilities();\n    var left = generateArguments();\n    var right = generateArguments();\n    // revert it back;\n    probabilityClass[this.className] = prevP;\n    normalizeProbabilities();\n    return this.operator(left, right);\n  }\n}\n\nclass ConstantFunction extends BaseFunctionNode {\n  constructor(constant, p) {\n    super(p);\n    this.constant = constant;\n  }\n\n  render() {\n    return this.constant;\n  }\n}\n\n\nvar fList = [\n  new ConstantFunction('p.x', 'POINT'),\n  new ConstantFunction('p.y', 'POINT'),\n\n  // new DualArgumentFunction((a, b) => `length(vec2(${a}, ${b}))`, 'TRIGONOMETRY'),\n  new ConstantFunction('length(p)', 'LENGTH'),\n\n  new SingleArgumentFunction(a => `sin(${a})`, 'TRIGONOMETRY'),\n  new SingleArgumentFunction(a => `cos(${a})`, 'TRIGONOMETRY'),\n  // new SingleArgumentFunction(a => `sqrt(${a})`, cfProb * 0.8),\n  // new SingleArgumentFunction(a => `inversesqrt(${a})`, cfProb * 0.8),\n\n\n  new DualArgumentFunction((a, b) => `${a}*${b}`, 'ARITHMETICS'),\n  new DualArgumentFunction((a, b) => `${a}/${b}`, 'ARITHMETICS'),\n  new DualArgumentFunction((a, b) => `(${a}+${b})`, 'ARITHMETICS'),\n  new DualArgumentFunction((a, b) => `(${a}-${b})`, 'ARITHMETICS'),\n\n  new DualArgumentFunction((a, b) => {\n    if (a === b) return a;\n    return `min(${a},${b})`\n  }, 'MINMAX'),\n  new DualArgumentFunction((a, b) => {\n    if (a === b) return a;\n    return `max(${a},${b})`\n  } , 'MINMAX'),\n\n  new SingleArgumentFunction(a => `log(${a})`, 'EXP'),\n  new SingleArgumentFunction(a => `exp(${a})`, 'EXP'),\n  new DualArgumentFunction((a, b) => `pow(${a}, ${b})`, 'EXP'),\n\n  new SingleArgumentFunction(a => `abs(${a})`, 'SIGN'),\n  new SingleArgumentFunction(a => `sign(${a})`, 'SIGN'),\n\n  //new ConstantFunction('1.', cfProb * 0.001),\n];\n\n\nfunction normalizeProbabilities() {\n  var sum = 0;\n  fList.forEach(element => (sum += element.getProbability()));\n  fList.forEach(element => element.probability = element.getProbability()/sum);\n}\n\nfunction generateArguments() {\n  var p = Math.random();\n  var cumulativeProbability = 0;\n  var item;\n  for (var i = 0; i < fList.length; ++i) {\n    item = fList[i];\n    cumulativeProbability += item.probability;\n    if (p < cumulativeProbability) {\n      break;\n    }\n  }\n\n  if (!item) throw new Error('no more items');\n\n  return item.render();\n}\n\nexport default function generate() {\n  normalizeProbabilities();\n  var vX = generateArguments();\n  var vY = generateArguments();\n  return `v.x = ${vX};\n  v.y = ${vY};`;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/generate-equation.js","/**\n * This module parses user defined vector field code.\n */\n\nimport bus from '../bus';\nimport pragmaParse from './pragmaParser';\n\n// This is naive parser that is being used until the real `glsl-parser`\n// is loaded asynchronously. This parser assumes there are no errors\n// TODO: maybe I should be more careful here?\nvar glslParser = {\n  check(code) {\n    return {\n      code,\n      log: {\n        errorCount: 0\n      }\n    };\n  }\n};\n\n// glsl-parser is ~179KB uncompressed, we don't want to wait until it is downloaded.\n// So we load it asynchronously...\nrequire.ensure('glsl-parser', () => {\n  // ... and replace the naive parser with the real one, when ready.\n  glslParser = require('glsl-parser');\n\n  // notify interested parties, so that they can recheck code if they wish.\n  bus.fire('glsl-parser-ready'); \n});\n\nvar vectorFieldGlobals = `\nimport {\n  float PI;\n  float snoise(vec2 v);\n  float frame;\n  vec4 cursor;\n  vec2 rotate(vec2 p,float a);\n  float audio(float index);\n  float rand(const vec2 co);\n  sampler2D input0;\n  sampler2D input1;\n}`;\n\n/**\n * Given a string, verifies that it is a valid glsl code for a vector field,\n * and then returns code + log.\n * \n * @param {String} vectorFieldCode \n */\nexport default function getParsedVectorFieldFunction(vectorFieldCode) {\n  // TODO: what if we want to support 3d?\n  return pragmaParse(vectorFieldCode).then(pragmaParseResult => {\n    if (pragmaParseResult.error) {\n      return pragmaParseResult;\n    }\n\n    vectorFieldCode = pragmaParseResult.getCode();\n\n    var parserResult = glslParser.check(vectorFieldCode, { globals: vectorFieldGlobals });\n    parserResult.code = vectorFieldCode;\n\n    if (parserResult.log.errorCount) parserResult.error = parserError(parserResult.log);\n\n    return parserResult;\n  });\n}\n\nfunction parserError(log) {\n  let diag = log.diagnostics[0];\n  // TODO probably need to check kind (errors are 0, warnings are 1)\n  let firstError = diag.range;\n  let lineColumn = firstError.lineColumn();\n  let source = firstError.source;\n  let offset = source._lineOffsets[lineColumn.line]\n  let line = source.contents.substr(offset,  lineColumn.column);\n  line += source.contents.substring(firstError.start, firstError.end);\n  let prefix = 'Line ' + lineColumn.line + ': ';\n  let diagText = diag.text;\n  return {\n    error: \n      prefix + line + '\\n' +\n      whitespace(prefix.length) + whitespace(lineColumn.column) + '^',\n    errorDetail: diagText,\n    isFloatError: isFloatError(diagText)\n  };\n}\n\nfunction isFloatError(diagText) {\n  return diagText.indexOf('\"int\"') > -1 &&\n    diagText.indexOf('\"float\"')  > -1;\n}\n\nfunction whitespace(length) {\n  return new Array(length + 1).join(' ');\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/getParsedVectorFieldFunction.js","import BaseShaderNode from './BaseShaderNode';\n\nexport default class ValueIntegrator extends BaseShaderNode {\n  constructor () {\n    super();\n  }\n\n  getDefines() {\n    return `\nuniform float u_h;\n`\n  }\n\n  getFunctions() {\n    return `\nvec2 rk4(const vec2 point) {\n  vec2 k1 = get_velocity( point );\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\n  vec2 k4 = get_velocity( point + k3 * u_h);\n\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\n}`\n  }\n\n  getMainBody() {\n    return `\n    // vec2 velocity = rk4(pos);\n    // float valVelocity = -0.;\n    // float valVelocity = -0.002;\n\n    vec2 costate = state;\n    float time = frame * u_h;\n    float valVelocity = get_hamiltonian(state, costate, time);\n\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/ValueIntegrator.js","import bus from '../bus';\nimport glUtil from '../gl-utils';\n\nexport default audioProgram;\n\nfunction audioProgram(ctx) {\n  var gl = ctx.gl;\n\n  var audioWidth = 8, audioHeight = 8;\n  var audioBuffer = new Uint8Array(audioWidth * audioHeight * 4);\n  var audioTexture = glUtil.createTexture(gl, gl.NEAREST, audioBuffer, audioWidth, audioHeight);\n  var audioDirty = false;\n  ctx.audioTexture = audioTexture;\n\n  bus.on('audio', updateAudioBuffer);\n\n  return {\n    updateTextures,\n    dispose\n  };\n\n  function dispose() {\n    bus.off('audio', updateAudioBuffer);\n    gl.deleteTexture(audioTexture);\n  }\n\n  function updateTextures() {\n    if (!audioDirty) return;\n    audioDirty = false;\n\n    // TODO: This should come from fftSize?\n    var width = 5, height = 5;\n    gl.bindTexture(gl.TEXTURE_2D, audioTexture);\n    gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, audioBuffer);\n    gl.bindTexture(gl.TEXTURE_2D, null);\n  }\n\n  function updateAudioBuffer(newBuffer) {\n    audioBuffer = newBuffer;\n    audioDirty = true;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/audioProgram.js","import UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\nimport ColorModes from '../programs/colorModes';\n\nexport default function shaderBasedColor_WAS(colorMode, vfCode, colorCode, color, color2) {\n  var udf = new UserDefinedVelocityFunction(vfCode);\n  var integrate = new RungeKuttaIntegrator();\n  const [r, g, b, a] = color;\n  const [r2, g2, b2, a2] = color2;\n\n  return {\n    getVariables,\n    getMain,\n    getMethods\n  }\n\n  function getVariables() {\n    return `\nuniform vec2 u_velocity_range;\nvarying vec4 v_particle_color;\n\n${udf.getDefines()}\n${integrate.getDefines()}\n`\n  }\n\n  function getMethods() {\n    return `\n// https://github.com/hughsk/glsl-hsv2rgb\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n${udf.getFunctions()}\n${integrate.getFunctions()}\n${getColorFunctionBody()}\n`\n  }\n\n  function getColorFunctionBody() {\n    if (colorMode === ColorModes.UNIFORM) {\n      return `\nvec4 get_color(vec2 p) {\n  return vec4(${r}, ${g}, ${b}, ${a});\n}\n`\n    }\n    if (colorMode === ColorModes.DUAL) {\n      return `\nvec4 get_color(vec2 p) {\n  float rand = fract(sin(p.x * 12.9898 + p.y * 78.233) * 43758.5453);\n  if (rand < 0.5) {\n    return vec4(${r}, ${g}, ${b}, ${a});\n  } else {\n    return vec4(${r2}, ${g2}, ${b2}, ${a2});\n  }\n}\n`\n    }\n//     if (colorMode === ColorModes.REACHAVOID) {\n//       return `\n// vec4 get_color(vec2 p) {\n//   // TODO WAS: different color for active drawing than R or A \n//   // would need draw_click_sum, might be easier to separate drawing/bc textures\n//   return vec4(${r}, ${g}, ${b}, ${a}); \n// }\n// `\n//     }\n\n    if (colorMode === ColorModes.VELOCITY) {\n      return `\nvec4 get_color(vec2 p) {\n  vec2 velocity = get_velocity(p);\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\n  return vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\n}\n`\n    } \n\n    if (colorMode === ColorModes.CUSTOM) {\n      if (!colorCode) throw new Error('color mode is set to custom, but no color function is specified');\n\n      return colorCode;\n    }\n\n    return ` \nvec4 get_color(vec2 p) {\n  vec2 velocity = get_velocity(p);\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\n  return vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\n}\n`;\n  }\n\n  function getMain() {\n    return `  v_particle_color = get_color(v_particle_pos);`\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/shaderBasedColor_WAS.js","/**\n * XMLHttpRequest wrapped into a promise.\n * \n * @param {String} url \n */\nexport default function request(url, options) {\n  if (!options) options = {};\n\n  return new Promise(download);\n\n  function download(resolve, reject) {\n    var req = new XMLHttpRequest();\n\n    if (typeof options.progress === 'function') {\n      req.addEventListener('progress', updateProgress, false);\n    }\n\n    req.addEventListener('load', transferComplete, false);\n    req.addEventListener('error', transferFailed, false);\n    req.addEventListener('abort', transferCanceled, false);\n\n    req.open('GET', url);\n    if (options.responseType) {\n      req.responseType = options.responseType;\n    }\n    req.send(null);\n\n    function updateProgress(e) {\n      if (e.lengthComputable) {\n        options.progress({\n          loaded: e.loaded,\n          total: e.total,\n          percent: e.loaded / e.total\n        });\n      }\n    }\n\n    function transferComplete() {\n      if (req.status !== 200) {\n        reject(`Unexpected status code ${req.status} when calling ${url}`);\n        return;\n      }\n      var response = req.response;\n\n      if (options.responseType === 'json' && typeof response === 'string') {\n        // IE\n        response = JSON.parse(response);\n      }\n\n      resolve(response);\n    }\n\n    function transferFailed() {\n      reject(`Failed to download ${url}`);\n    }\n\n    function transferCanceled() {\n      reject(`Cancelled download of ${url}`);\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/request.js","/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n * \n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n * \n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\nexport default {\n  createTexture: createTexture,\n  bindFramebuffer: bindFramebuffer,\n  createProgram: createProgram, \n  createBuffer: createBuffer,\n  bindAttribute: bindAttribute,\n  bindTexture: bindTexture\n}\n\nfunction bindTexture(gl, texture, unit) {\n  gl.activeTexture(gl.TEXTURE0 + unit);\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n}\n\nfunction createBuffer(gl, data) {\n  var buffer = gl.createBuffer();\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.bufferData(gl.ARRAY_BUFFER, data, gl.STATIC_DRAW);\n  return buffer;\n}\n\nfunction createTexture(gl, filter, data, width, height) {\n  var texture = gl.createTexture();\n  gl.bindTexture(gl.TEXTURE_2D, texture);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, filter);\n  gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, filter);\n  if (data instanceof Uint8Array) {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, width, height, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  } else {\n      gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n  }\n  gl.bindTexture(gl.TEXTURE_2D, null);\n  return texture;\n}\n\nfunction bindFramebuffer(gl, framebuffer, texture) {\n  gl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n  if (texture) {\n      gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\n  }\n}\n\nfunction bindAttribute(gl, buffer, attribute, numComponents) {\n  gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n  gl.enableVertexAttribArray(attribute);\n  gl.vertexAttribPointer(attribute, numComponents, gl.FLOAT, false, 0, 0);\n}\n\nfunction createProgram(gl, vertexSource, fragmentSource) {\n  var program = gl.createProgram();\n\n  var vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n  var fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n\n  gl.attachShader(program, vertexShader);\n  gl.attachShader(program, fragmentShader);\n\n  gl.linkProgram(program);\n  if (!gl.getProgramParameter(program, gl.LINK_STATUS)) {\n      throw new Error(gl.getProgramInfoLog(program));\n  }\n\n  var wrapper = {\n    program: program,\n    unload: unload\n  };\n\n  var numAttributes = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n  var i;\n  for (i = 0; i < numAttributes; i++) {\n      var attribute = gl.getActiveAttrib(program, i);\n      wrapper[attribute.name] = gl.getAttribLocation(program, attribute.name);\n  }\n  var numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n  for (i = 0; i < numUniforms; i++) {\n      var uniform = gl.getActiveUniform(program, i);\n      wrapper[uniform.name] = gl.getUniformLocation(program, uniform.name);\n  }\n\n  return wrapper; \n\n  function unload() {\n    gl.deleteProgram(program);\n  }\n}\n\nfunction createShader(gl, type, source) {\n  var shader = gl.createShader(type);\n  gl.shaderSource(shader, source);\n\n  gl.compileShader(shader);\n  if (!gl.getShaderParameter(shader, gl.COMPILE_STATUS)) {\n      throw new Error(gl.getShaderInfoLog(shader));\n  }\n\n  return shader;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/gl-utils.js","import BaseShaderNode from './BaseShaderNode';\nimport snoise from './parts/simplex-noise';\nimport {getInputUniforms} from './customInput';\n\nexport default class UserDefinedVelocityFunction extends BaseShaderNode {\n  constructor(updateCode) {\n    super();\n    this.updateCode = updateCode || '';\n  }\n\n  setNewUpdateCode(newUpdateCode) {\n    this.updateCode = newUpdateCode;\n  }\n\n  getDefines() {\n    return `\nuniform float frame;\nuniform vec4 cursor;\n// TODO: use inputN instead.\nuniform sampler2D u_audio;\n\n#define PI 3.1415926535897932384626433832795\n\n${getInputUniforms()}\n`\n  }\n\n  getFunctions() {\n  // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n  // TODO: Do I need to inject snoise only when it's used?\n    return `\n    // pseudo-random generator\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\nfloat rand(const vec2 co) {\n    float t = dot(rand_constants.xy, co);\n    return fract(sin(t) * (rand_constants.z + t));\n}\n\n${snoise}\n\nvec2 rotate(vec2 p,float a) {\n\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\n}\n\n// TODO: This will change. Don't use it.\nfloat audio(float index) {\n  float rgbI = floor(index/4.);\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\n  vec4 rgba = texture2D(u_audio, txPos);\n  \n  float offset = mod(index, 4.);\n  if (offset == 0.) return rgba[0];\n  if (offset == 1.) return rgba[1];\n  if (offset == 2.) return rgba[2];\n  return rgba[3];\n}\n\n${this.updateCode ? this.updateCode : 'vec2 get_velocity(vec2 p) { return vec2(0.); }'}\n  `\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/UserDefinedVelocityFunction.js","/**\n * This file encodes/decodes float values into 32bit rgba array\n * \n * It is based on https://computergraphics.stackexchange.com/questions/4151/webgl-packing-unpacking-functions-that-can-roundtrip-all-typical-32-bit-floats\n * and it is not perfect. If you know how to improve it - please let me know.\n */\n\n/**\n * Encodes float value into output array\n * @param {float} val - value to be encode\n * @param {Uint8Array} out  - array where encoded value needs to be written.\n * @param {Number} writeOffset - offset in the original array where values should be written.\n */\nexport function encodeFloatRGBA(val, out, writeOffset) {\n  if (val == 0.0) {\n    out[writeOffset + 0] = 0; out[writeOffset + 1] = 0; out[writeOffset + 2] = 0; out[writeOffset + 3] = 0;\n    return;\n  }\n\n  var mag = Math.abs(val);\n  var exponent = Math.floor(Math.log2(mag));\n  // Correct log2 approximation errors.\n  exponent += (exp2(exponent) <= mag / 2.0) ? 1 : 0;\n  exponent -= (exp2(exponent) > mag) ? 1 : 0;\n\n  var mantissa;\n  if (exponent > 100.0) {\n      mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n  } else {\n      mantissa = mag / (exp2(exponent)) - 1.0;\n  }\n\n  var a = exponent + 127.0;\n  mantissa *= 256.0;\n  var b = Math.floor(mantissa);\n  mantissa -= b;\n  mantissa *= 256.0;\n  var c = Math.floor(mantissa);\n  mantissa -= c;\n  mantissa *= 128.0;\n  var d = Math.floor(mantissa) * 2.0 + ((val < 0.0) ? 1: 0);\n\n  out[writeOffset + 0] = a; out[writeOffset + 1] = b; out[writeOffset + 2] = c; out[writeOffset + 3] = d;\n}\n\n/**\n * Given byte values in range [0..255] returns decoded float value.\n * \n * @param {Byte} r \n * @param {Byte} g \n * @param {Byte} b \n * @param {Byte} a \n */\nexport function decodeFloatRGBA(r, g, b, a) {\n  var A = Math.floor(r + 0.5);\n  var B = Math.floor(g + 0.5);\n  var C = Math.floor(b + 0.5);\n  var D = Math.floor(a + 0.5);\n\n  var exponent = A - 127.0;\n  var sign = 1.0 - (D % 2.0) * 2.0;\n  var mantissa = ((A > 0.0) ? 1 : 0)\n                  + B / 256.0\n                  + C / 65536.0\n                  + Math.floor(D / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n\nfunction exp2(exponent) { return Math.exp(exponent * Math.LN2); }\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/floatPacking.js","import BaseShaderNode from './BaseShaderNode';\nimport snoise from './parts/simplex-noise';\nimport {getInputUniforms} from './customInput';\n\nexport default class UserDefinedVelocityHamiltonianFunctions extends BaseShaderNode {\n  constructor(updateCode, updateHamiltonianCode) {\n    super();\n    this.updateCode = updateCode || '';\n    this.updateHamiltonianCode = updateHamiltonianCode || '';\n  }\n\n  setNewUpdateCode(newUpdateCode) {\n    this.updateCode = newUpdateCode;\n  }\n\n  setNewUpdateHamiltonianCode(newUpdateHamiltonianCode) {\n    this.updateHamiltonianCode = newUpdateHamiltonianCode;\n  }\n\n  getDefines() {\n    return `\nuniform float frame;\nuniform vec4 cursor;\n// TODO: use inputN instead.\nuniform sampler2D u_audio;\n\n#define PI 3.1415926535897932384626433832795\n\n${getInputUniforms()}\n`\n  }\n\n  getFunctions() {\n  // TODO: Do I need to worry about \"glsl injection\" (i.e. is there potential for security attack?)\n  // TODO: Do I need to inject snoise only when it's used?\n    return `\n    // pseudo-random generator\nconst vec3 rand_constants = vec3(12.9898, 78.233, 4375.85453);\nfloat rand(const vec2 co) {\n    float t = dot(rand_constants.xy, co);\n    return fract(sin(t) * (rand_constants.z + t));\n}\n\n${snoise}\n\nvec2 rotate(vec2 p,float a) {\n\treturn cos(a)*p+sin(a)*vec2(p.y,-p.x);\n}\n\n// TODO: This will change. Don't use it.\nfloat audio(float index) {\n  float rgbI = floor(index/4.);\n  vec2 txPos = vec2(fract(rgbI / 5.), floor(rgbI / 5.) / 5.);\n  vec4 rgba = texture2D(u_audio, txPos);\n  \n  float offset = mod(index, 4.);\n  if (offset == 0.) return rgba[0];\n  if (offset == 1.) return rgba[1];\n  if (offset == 2.) return rgba[2];\n  return rgba[3];\n}\n\n${this.updateCode ? this.updateCode : 'vec2 get_velocity(vec2 p) { return vec2(0.003); }'}\n\n${this.updateHamiltonianCode ? this.updateHamiltonianCode : `\n  float get_hamiltonian(vec2 x, vec2 p, float t) { \n    vec2 f = get_velocity(x);\n    // return - 0.01 * (f.x + f.y);\n    return 0.01 * cos(t);\n  }`}\n\n  `\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/UserDefinedVelocityHamiltonianFunctions.js","/**\n * Creates a single image binding element in the input collection.\n */\nimport loadTexture from \"./loadTexture\";\nimport glUtils from '../../gl-utils';\nimport config from '../../config';\nimport bus from '../../bus';\n\nconst FREE_TEXTURE_UNIT = config.FREE_TEXTURE_UNIT;\n\nexport default function createImageInputBinding(ctx, url, callbacks) {\n  var texture = null;\n  loadTexture(ctx.gl, url).then(setTexture).catch(handleError);\n\n  return {\n    updateBinding,\n    dispose() {\n      // TODO: Potential race condition, as loadTexture is async.\n      ctx.gl.deleteTexture(texture);\n    }\n  }\n\n  function handleError(err) {\n    if (callbacks && callbacks.error) {\n      callbacks.error(err);\n    }\n  }\n\n  function setTexture(loadedTexture) {\n    texture = loadedTexture;\n    bus.fire('refresh-speed')\n    if (callbacks && callbacks.done) {\n      callbacks.done(url);\n    }\n  }\n\n  function updateBinding(program, inputIndex) {\n    if (!texture) return;\n\n    var realIndex = inputIndex + FREE_TEXTURE_UNIT;\n    glUtils.bindTexture(ctx.gl, texture, realIndex);\n    ctx.gl.uniform1i(program[`input${inputIndex}`], realIndex);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/inputs/imageInput.js","/**\n * This file is based on https://github.com/mapbox/webgl-wind\n * by Vladimir Agafonkin\n *\n * Released under ISC License, Copyright (c) 2016, Mapbox\n * https://github.com/mapbox/webgl-wind/blob/master/LICENSE\n *\n * Adapted to field maps by Andrei Kashcha\n * Copyright (C) 2017\n */\nimport util from './gl-utils';\nimport makePanzoom from 'panzoom';\nimport bus from './bus';\nimport appState from './appState';\nimport wglPanZoom from './wglPanZoom';\n\nimport createScreenProgram from './programs/screenProgram';\nimport createDrawParticlesProgram from './programs/drawParticlesProgram';\nimport createDrawParticlesProgram_WAS from './programs/drawParticlesProgram_WAS';\nimport createCursorUpdater from './utils/cursorUpdater';\nimport createVectorFieldEditorState from './editor/vectorFieldState';\nimport createInputsModel from './createInputsModel';\n\n/**\n * Kicks offs the app rendering. Initialized before even vue is loaded.\n *\n * @param {WebGLRenderingContext} gl\n */\nexport default function initScene(gl) {\n  // Canvas size management\n  var canvasRect = { width: 0, height: 0, top: 0, left: 0 };\n  setWidthHeight(gl.canvas.width, gl.canvas.height);\n  window.addEventListener('resize', onResize, true);\n\n  // Video capturing is available in super advanced mode. You'll need to install\n  // and start https://github.com/greggman/ffmpegserver.js\n  // Then type in the console: window.startRecord();\n  // This will trigger frame-by-frame recording (it is slow). To stop it, call window.stopRecord();\n  bus.on('start-record', startRecord);\n  bus.on('stop-record', stopRecord);\n  var currentCapturer = null;\n\n  // TODO: It feels like bounding box management needs to be moved out from here.\n  // TODO: bbox needs to be a class with width/height properties.\n  var bbox = appState.getBBox() || {};\n  var currentPanZoomTransform = {\n    scale: 1,\n    x: 0,\n    y: 0\n  };\n\n  // Some Colors\n  var field_color = [1., 1., 1., 1.]; // white\n  var field_color_second = [0.949, 0.768, 0.306, 1.0]; // gold\n  var reach_color = [46/255, 121/255, 199/255, 0.9];  // blue\n  var avoid_color = [223/255, 28/255, 28/255, 0.85];  // red\n  var value_color = [245/255, 50/255, 145/255, 1.0];  // magenta for now\n\n  // Boundary Condition, i.e. Target\n  var bc = appState.getBC() || {};\n  var bc_drawing_mode = false;\n  var value_mode = false;\n  var value_transfer = false;\n  var bc_flip_mode = false;\n  var draw_fill = false;\n  var bc_reach_mode = true; // if false, then avoid\n  // var bbox_at_bc_enc = appState.getBBox() || {};\n  var bbox_at_bc_enc = JSON.parse(JSON.stringify(bbox));\n  var thresh = 0.01; // TODO: make all this editable\n  var drawing_click_sum = 0;\n\n  var field_mode = false;\n\n  // How many particles do we want?\n  var particleCount = appState.getParticleCount();\n\n  gl.disable(gl.DEPTH_TEST);\n  gl.disable(gl.STENCIL_TEST);\n\n  // Context variable is a way to share rendering state between multiple programs. It has a lot of stuff on it.\n  // I found that it's the easiest way to work in state-full world of WebGL.\n  // Until I discover a better way to write WebGL code.\n  var ctx = {\n    gl,\n    bbox,\n    field_mode,\n    canvasRect,\n\n    bc,\n    bbox_at_bc_enc,\n    bc_drawing_mode,\n    value_mode,\n    value_transfer,\n    bc_reach_mode,\n    bc_flip_mode,\n    draw_fill,\n    drawing_click_sum,\n    thresh,\n\n    inputs: null,\n\n    framebuffer: gl.createFramebuffer(),\n\n    // This is used only to render full-screen rectangle. Main magic happens inside textures.\n    quadBuffer: util.createBuffer(gl, new Float32Array([0, 0, 1, 0, 0, 1, 0, 1, 1, 0, 1, 1])),\n\n    colorMode: appState.getColorMode(),\n    colorFunction: appState.getColorFunction(),\n\n    // This defines texture unit for screen rendering. First few indices are taken by textures\n    // that compute particles position/color\n    // TODO: I need to find a better way to manage this.\n    screenTextureUnit: 3,\n\n    integrationTimeStep: appState.getIntegrationTimeStep(),\n\n    // On each frame the likelihood for a particle to reset its position is this:\n    dropProbability: appState.getDropProbability(),\n\n    // current frame number. Reset every time when new shader is compiled\n    frame: 0,\n\n    // Information about mouse cursor. Could be useful to simplify\n    // exploration\n    cursor: {\n      // Where mouse was last time clicked (or tapped)\n      clickX: 0, clickY: 0,\n      // where mouse was last time moved. If this is a touch device\n      // this is the same as clickX, clickY\n      hoverX: 0, hoverY: 0\n    },\n\n    // Texture size to store particles' positions\n    particleStateResolution: 0,\n\n    // How quickly we should fade previous frame (from 0..1)\n    fadeOpacity: appState.getFadeout(),\n\n    // Ignore this one for a moment. Yes, the app support web audio API,\n    // but it's rudimentary, so... shhh! it's a secret.\n    // Don't shhh on me!\n    // WAS - these comments precede me, but damn would audio be cool\n    // especially if the field reacted to it...!\n    audioTexture: null\n  };\n\n  // Frame management\n  var lastAnimationFrame;\n  var isPaused = false;\n\n  var inputsModel = createInputsModel(ctx);\n\n  // screen rendering;\n  var screenProgram = createScreenProgram(ctx);\n  // var drawProgram = createDrawParticlesProgram_WAS(ctx, 0, );\n  var drawProgramField = createDrawParticlesProgram_WAS(ctx, 0, field_color, field_color_second);\n  // var drawProgramField2 = createDrawParticlesProgram_WAS(ctx, 0, field_color_second, field_color_second);\n  var drawProgramBC = createDrawParticlesProgram_WAS(ctx, 1, reach_color, avoid_color); // Boundary Condition Program\n  var drawProgramValue = createDrawParticlesProgram_WAS(ctx, 2, value_color, value_color); // Value Program\n  var cursorUpdater = createCursorUpdater(ctx);\n  var vectorFieldEditorState = createVectorFieldEditorState(drawProgramField);\n  // var vectorField2EditorState = createVectorFieldEditorState(drawProgramField2);\n  var vectorFieldEditorStateBC = createVectorFieldEditorState(drawProgramBC);\n  var vectorFieldEditorStateValue = createVectorFieldEditorState(drawProgramValue);\n\n  // particles\n  updateParticlesCount(particleCount);\n\n  // values\n  drawProgramBC.encodeBCValue()\n\n  var api = {\n    start: nextFrame,\n    stop,\n    dispose,\n\n    resetBoundingBox,\n    moveBoundingBox,\n    applyBoundingBox,\n\n    setPaused,\n    setBCDrawingMode,\n    setDrawFill,\n    setFieldMode,\n\n    getParticlesCount,\n    setParticlesCount,\n\n    setFadeOutSpeed,\n    getFadeOutSpeed,\n\n    setDropProbability,\n    getDropProbability,\n\n    getIntegrationTimeStep,\n    setIntegrationTimeStep,\n\n    setColorMode,\n    getColorMode,\n\n    vectorFieldEditorState,\n    // vectorField2EditorState,\n    vectorFieldEditorStateBC,\n    vectorFieldEditorStateValue,\n\n    inputsModel,\n\n    getCanvasRect() {\n      // We trust they don't do anything bad with this ...\n      return canvasRect;\n    },\n\n    getBoundingBox() {\n      // again, we trust. Maybe to much?\n      return ctx.bbox;\n    },\n\n    getBoundaryConditionBox() {\n      // not sure if needed, but making to have\n      return ctx.bc;\n    }\n  }\n\n  var panzoom = initPanzoom();\n  restoreBBox();\n\n  setTimeout(() => {\n    bus.fire('scene-ready', api);\n  })\n\n  return api;\n\n  function moveBoundingBox(changes) {\n    if (!changes) return;\n    var parsedBoundingBox = Object.assign({}, ctx.bbox);\n\n    assignIfPossible(changes, 'minX', parsedBoundingBox);\n    assignIfPossible(changes, 'minY', parsedBoundingBox);\n    assignIfPossible(changes, 'maxX', parsedBoundingBox);\n    assignIfPossible(changes, 'maxY', parsedBoundingBox);\n\n    // for Y axis changes we need to preserve aspect ration, which means\n    // we also need to change X...\n    if (changes.minY !== undefined || changes.maxY !== undefined) {\n      // adjust values for X\n      var heightChange = Math.abs(parsedBoundingBox.minY - parsedBoundingBox.maxY)/Math.abs(ctx.bbox.minY - ctx.bbox.maxY);\n      var cx = (ctx.bbox.maxX + ctx.bbox.minX)/2;\n      var prevWidth = (ctx.bbox.maxX - ctx.bbox.minX)/2;\n      parsedBoundingBox.minX = cx - prevWidth * heightChange;\n      parsedBoundingBox.maxX = cx + prevWidth * heightChange;\n\n    }\n\n    applyBoundingBox(parsedBoundingBox);\n  }\n\n  function assignIfPossible(change, key, newBoundingBox) {\n    var value = Number.parseFloat(change[key]);\n    if (Number.isFinite(value)) {\n      newBoundingBox[key] = value;\n    }\n  }\n\n  function startRecord(capturer) {\n    currentCapturer = capturer;\n  }\n\n  function stopRecord() {\n    currentCapturer = null;\n  }\n\n  function setColorMode(x) {\n    var mode = parseInt(x, 10);\n    appState.setColorMode(mode);\n    ctx.colorMode = appState.getColorMode();\n    drawProgramField.updateColorMode(mode);\n    // drawProgramField2.updateColorMode(mode);\n    drawProgramBC.updateColorMode(mode);\n    drawProgramValue.updateColorMode(mode);\n  }\n\n  function getColorMode() {\n    return appState.getColorMode();\n  }\n\n  function getIntegrationTimeStep() {\n    return appState.getIntegrationTimeStep();\n  }\n\n  function setIntegrationTimeStep(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      ctx.integrationTimeStep = f;\n      appState.setIntegrationTimeStep(f);\n      bus.fire('integration-timestep-changed', f);\n    }\n  }\n\n  function setPaused(shouldPause) {\n    isPaused = shouldPause;\n    nextFrame();\n  }\n\n  function setBCDrawingMode(shouldBCDrawingMode) {\n    ctx.cursor.clickX = 0.;\n    ctx.cursor.clickY = 0.;\n    ctx.bc_drawing_mode = shouldBCDrawingMode;\n    // nextFrame(); // do I need this?\n  }\n\n  function setDrawFill(shouldDrawFill) {\n    ctx.draw_fill = shouldDrawFill;\n    // nextFrame(); // do I need this?\n  }\n\n  function setFieldMode(shouldFieldMode) {\n    ctx.field_mode = shouldFieldMode;\n    // nextFrame(); // do I need this?\n  }\n\n  // Main screen fade out configuration\n  function setFadeOutSpeed(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      ctx.fadeOpacity = f;\n      appState.setFadeout(f);\n    }\n  }\n\n  function getFadeOutSpeed() {\n    return appState.getFadeout();\n  }\n\n  // Number of particles configuration\n  function getParticlesCount() {\n    return appState.getParticleCount();\n  }\n\n  function setParticlesCount(newParticleCount) {\n    if (!Number.isFinite(newParticleCount)) return;\n    if (newParticleCount === particleCount) return;\n    if (newParticleCount < 1) return;\n\n    updateParticlesCount(newParticleCount);\n\n    particleCount = newParticleCount;\n    appState.setParticleCount(newParticleCount);\n  }\n\n  // drop probability\n  function setDropProbability(x) {\n    var f = parseFloat(x);\n    if (Number.isFinite(f)) {\n      // TODO: Do I need to worry about duplication/clamping?\n      appState.setDropProbability(f);\n      ctx.dropProbability = f;\n    }\n  }\n\n  function getDropProbability() {\n    return appState.getDropProbability();\n  }\n\n  function onResize() {\n    if (!ctx.bc_drawing_mode) {\n      setWidthHeight(window.innerWidth, window.innerHeight);\n\n      screenProgram.updateScreenTextures();\n\n      updateBoundingBox(currentPanZoomTransform);\n    }\n  }\n\n  function setWidthHeight(w, h) {\n    var dx = Math.max(w * 0.02, 30);\n    var dy = Math.max(h * 0.02, 30);\n    canvasRect.width = w + 2 * dx;\n    canvasRect.height = h + 2 * dy;\n    canvasRect.top = - dy;\n    canvasRect.left = - dx;\n\n\n    let canvas = gl.canvas;\n    canvas.width = canvasRect.width;\n    canvas.height = canvasRect.height;\n    canvas.style.left = (-dx) + 'px';\n    canvas.style.top = (-dy) + 'px';\n  }\n\n  function dispose() {\n      stop();\n      panzoom.dispose();\n      window.removeEventListener('resize', onResize, true);\n      cursorUpdater.dispose();\n      drawProgramBC.dispose();\n      drawProgramField.dispose();\n      // drawProgramField2.dispose();\n      drawProgramValue.dispose();\n      vectorFieldEditorState.dispose();\n      // vectorField2EditorState.dispose();\n      vectorFieldEditorStateBC.dispose();\n      vectorFieldEditorStateValue.dispose();\n  }\n\n  function nextFrame() {\n    if (lastAnimationFrame) return;\n\n    if (isPaused) return;\n\n    lastAnimationFrame = requestAnimationFrame(draw);\n  }\n\n  function stop() {\n    cancelAnimationFrame(lastAnimationFrame);\n    lastAnimationFrame = 0;\n  }\n\n  function draw() {\n    lastAnimationFrame = 0;\n\n    drawScreen();\n\n    if (currentCapturer) currentCapturer.capture(gl.canvas);\n\n    nextFrame();\n  }\n\n\n  // DRAWING FUNCTION //\n\n\n  function drawScreen() {\n    screenProgram.fadeOutLastFrame()\n\n    if (ctx.field_mode) {\n      drawProgramField.drawParticles();\n      // drawProgramField2.drawParticles();\n    }\n\n    if (ctx.value_mode && !ctx.value_transfer) {\n      drawProgramValue.drawParticles(); // only works after recompilation\n    }\n\n    // Boundary Condition Drawing\n    if (ctx.bc_drawing_mode && ctx.drawing_click_sum % 3 != 0) {\n      if (ctx.drawing_click_sum % 3 == 1) { // bc dynamic only after first click\n        drawProgramBC.convertCursor2bcParams();\n      }\n      drawProgramBC.drawParticles(); // bc stays after second\n    }\n\n    // TODO WAS: is there a way to make a seperate fade out rate for bc? (value texture ok)\n    screenProgram.renderCurrentScreen();\n\n    if (ctx.field_mode) {\n      drawProgramField.updateParticlesPositions();\n      // drawProgramField2.updateParticlesPositions();\n    }\n    if (ctx.bc_drawing_mode && ctx.drawing_click_sum % 3 != 0) {\n      // drawProgramBC.updateParticlesPositions();\n    }\n    \n    if (ctx.value_mode) {\n      drawProgramValue.updateParticlesPositions(drawProgramBC.updatePositionProgram.getTextures());\n      if (ctx.value_transfer) { ctx.value_transfer = false; }\n    }\n\n    // TODO WAS: if ctx.bc_drawing_mode, pause or slow & gray particles? \n    // TODO WAS: if ctx.bc_drawing_mode done, start value evolution (and reverse particle flow?)\n    // note, particle slowing/reversing could be done by simply altering field...\n  }\n\n\n  // //\n\n\n  function updateParticlesCount(numParticles) {\n    // we create a square texture where each pixel will hold a particle position encoded as RGBA\n    ctx.particleStateResolution = Math.ceil(Math.sqrt(numParticles));\n    drawProgramField.updateParticlesCount();\n    // drawProgramField2.updateParticlesCount();\n    // drawProgramBC.updateParticlesCount(); // don't think needed\n    drawProgramValue.updateParticlesCount(); // don't think needed\n    //TODO WAS: two separate user-defined params for particle count and value grid size\n  }\n\n  function initPanzoom() {\n    let initializedPanzoom = makePanzoom(gl.canvas, {\n      controller: wglPanZoom(gl.canvas, updateBoundingBox)\n    });\n\n    return initializedPanzoom;\n  }\n\n  function restoreBBox() {\n    var savedBBox = appState.getBBox();\n    var {width, height} = canvasRect;\n\n    let sX = Math.PI * Math.E;\n    let sY = Math.PI * Math.E;\n    let tX = 0;\n    let tY = 0;\n    if (savedBBox) {\n      sX = savedBBox.maxX - savedBBox.minX;\n      sY = savedBBox.maxY - savedBBox.minY;\n      // TODO: Not sure if this is really the best way to do it.\n      // var ar = width/height;\n      tX = width * (savedBBox.minX + savedBBox.maxX)/2;\n      tY = width * (savedBBox.minY + savedBBox.maxY)/2;\n    }\n\n    var w2 = sX * width/2;\n    var h2 = sY * height/2;\n    panzoom.showRectangle({\n      left: -w2 + tX,\n      top: -h2 - tY,\n      right: w2 + tX,\n      bottom: h2 - tY ,\n    });\n  }\n\n  function updateBoundingBox(transform) {\n    screenProgram.boundingBoxUpdated = true;\n\n    currentPanZoomTransform.x = transform.x;\n    currentPanZoomTransform.y = transform.y;\n    currentPanZoomTransform.scale = transform.scale;\n\n    var {width, height} = canvasRect;\n\n    var minX = clientX(0);\n    var minY = clientY(0);\n    var maxX = clientX(width);\n    var maxY = clientY(height);\n\n    // we divide by width to keep aspect ratio\n    // var ar = width/height;\n    var p = 10000;\n    bbox.minX = Math.round(p * minX/width)/p;\n    bbox.minY = Math.round(p * -minY/width)/p;\n    bbox.maxX = Math.round(p * maxX/width)/p;\n    bbox.maxY = Math.round(p * -maxY/ width)/p;\n\n\n    appState.saveBBox(bbox);\n\n    bus.fire('bbox-change', bbox);\n\n    function clientX(x) {\n      return (x - transform.x)/transform.scale;\n    }\n\n    function clientY(y) {\n      return (y - transform.y)/transform.scale;\n    }\n  }\n\n  function resetBoundingBox() {\n    var w = Math.PI * Math.E * 0.5;\n    var h = Math.PI * Math.E * 0.5;\n\n    applyBoundingBox({\n      minX: -w,\n      minY: -h,\n      maxX: w,\n      maxY: h\n    })\n  }\n\n  function applyBoundingBox(boundingBox) {\n    appState.saveBBox(boundingBox);\n    restoreBBox();\n    // a hack to trigger panzoom event\n    panzoom.moveBy(0, 0, false);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/scene.js","//\n// Description : Array and textureless GLSL 2D simplex noise function.\n//      Author : Ian McEwan, Ashima Arts.\n//  Maintainer : stegu\n//     Lastmod : 20110822 (ijm)\n//     License : Copyright (C) 2011 Ashima Arts. All rights reserved.\n//               Distributed under the MIT License. See LICENSE file.\n//               https://github.com/ashima/webgl-noise\n//               https://github.com/stegu/webgl-noise\n// \n\nvar code = `\nvec3 mod289(vec3 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec2 mod289(vec2 x) {\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec3 permute(vec3 x) {\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nfloat snoise(vec2 v)\n  {\n  const vec4 C = vec4(0.211324865405187,  // (3.0-sqrt(3.0))/6.0\n                      0.366025403784439,  // 0.5*(sqrt(3.0)-1.0)\n                     -0.577350269189626,  // -1.0 + 2.0 * C.x\n                      0.024390243902439); // 1.0 / 41.0\n// First corner\n  vec2 i  = floor(v + dot(v, C.yy) );\n  vec2 x0 = v -   i + dot(i, C.xx);\n\n// Other corners\n  vec2 i1;\n  //i1.x = step( x0.y, x0.x ); // x0.x > x0.y ? 1.0 : 0.0\n  //i1.y = 1.0 - i1.x;\n  i1 = (x0.x > x0.y) ? vec2(1.0, 0.0) : vec2(0.0, 1.0);\n  // x0 = x0 - 0.0 + 0.0 * C.xx ;\n  // x1 = x0 - i1 + 1.0 * C.xx ;\n  // x2 = x0 - 1.0 + 2.0 * C.xx ;\n  vec4 x12 = x0.xyxy + C.xxzz;\n  x12.xy -= i1;\n\n// Permutations\n  i = mod289(i); // Avoid truncation effects in permutation\n  vec3 p = permute( permute( i.y + vec3(0.0, i1.y, 1.0 ))\n\t\t+ i.x + vec3(0.0, i1.x, 1.0 ));\n\n  vec3 m = max(0.5 - vec3(dot(x0,x0), dot(x12.xy,x12.xy), dot(x12.zw,x12.zw)), 0.0);\n  m = m*m ;\n  m = m*m ;\n\n// Gradients: 41 points uniformly over a line, mapped onto a diamond.\n// The ring size 17*17 = 289 is close to a multiple of 41 (41*7 = 287)\n\n  vec3 x = 2.0 * fract(p * C.www) - 1.0;\n  vec3 h = abs(x) - 0.5;\n  vec3 ox = floor(x + 0.5);\n  vec3 a0 = x - ox;\n\n// Normalise gradients implicitly by scaling m\n// Approximation of: m *= inversesqrt( a0*a0 + h*h );\n  m *= 1.79284291400159 - 0.85373472095314 * ( a0*a0 + h*h );\n\n// Compute final noise value at P\n  vec3 g;\n  g.x  = a0.x  * x0.x  + h.x  * x0.y;\n  g.yz = a0.yz * x12.xz + h.yz * x12.yw;\n  return 130.0 * dot(m, g);\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/simplex-noise.js","import decodeFloatRGBA from './parts/decodeFloatRGBA';\nimport shaderBasedColor_WAS from './shaderBasedColor_WAS';\n\n// TODO: this duplicates code from texture position.\nexport default class DrawParticleGraph_WAS {\n  constructor(ctx) {\n    this.colorMode = ctx.colorMode;\n    this.colorFunction = ctx.colorFunction || '';\n  }\n\n  getFragmentShader() {\n    return `precision highp float;\nvarying vec4 v_particle_color;\nvarying float filler;\nvoid main() {\n  if (filler == 1.) {\n    // gl_FragColor = v_particle_color * vec4(1., 1., 1., 0.1);  \n    // gl_FragColor = vec4(1., 1., 1., 0.05);  // gray\n    // color = [154/255, 103/255, 103/255, 0.9];  // gray-red\n    // color = [223/255, 28/255, 28/255, 0.05];  // gray-red v2\n    gl_FragColor = vec4(154/255, 103/255, 103/255, 0.9); // weird, its always just gray to black?\n  } else {\n    gl_FragColor = v_particle_color;  \n  }\n}`\n  }\n\n  getVertexShader(vfCode, color, color2) {\n    let decodePositions = textureBasedPosition();\n    let colorParts = shaderBasedColor_WAS(this.colorMode, vfCode, this.colorFunction, color, color2);\n    let methods = []\n    addMethods(decodePositions, methods);\n    addMethods(colorParts, methods);\n    let main = [];\n    addMain(decodePositions, main);\n    addMain(colorParts, main);\n\n    return `precision highp float;\nattribute float a_index;\nuniform float u_particles_res;\nuniform vec2 u_min;\nuniform vec2 u_max;\nuniform vec2 u_min_enc;\nuniform vec2 u_max_enc;\n\nuniform int texture_type;\nuniform float thresh;\n\nuniform float bc_cx;\nuniform float bc_cy;\nuniform float bc_qx;\nuniform float bc_qy;\nuniform int bc_shape;\nuniform float drawing_click_sum; // for debugging\nuniform bool bc_drawing_mode; // for debugging\nuniform bool reach_mode;\nuniform bool flip_mode;\nuniform float sign;\nuniform bool draw_fill;\nvarying float filler;\n\n${decodePositions.getVariables() || ''}\n${colorParts.getVariables()}\n\n${decodeFloatRGBA}\n\n${methods.join('\\n')}\n\nvoid main() {\n  vec2 du = (u_max - u_min);\n  vec2 du_enc = (u_max_enc - u_min_enc);\n\n  vec2 v_particle_pos_c;\n  vec2 vals;\n  float val;\n  vec2 state_mag;\n  \n  vec2 state = vec2( // same as txPos externally\n        abs(u_max.x - u_min.x) * fract(a_index / u_particles_res) + u_min.x,\n        abs(u_max.y - u_min.y) * (floor(a_index / u_particles_res) / u_particles_res) + u_max.y); // max bcuz col major\n  // WAS: note, this dynamically fluctuates w/ the box but the value is defined for a fixed box!\n\n  if (texture_type == 0) { // Field Texture\n\n    v_particle_pos_c = vec2( // @mourner's method: RGBA texture data is position\n          decodeFloatRGBA(texture2D(u_particles_x, state)),\n          decodeFloatRGBA(texture2D(u_particles_y, state))\n    );\n    gl_PointSize = 1.0;\n\n  } else if (texture_type == 1) { // Boundary Condition Texture\n\n    v_particle_pos_c = state; // Texture RGBA data is only for transfer\n    gl_PointSize = 2.0;\n    \n  } else if (texture_type == 2) {\n\n    // v_particle_pos_c = vec2( // @mourner's method: RGBA texture data is position\n    //       decodeFloatRGBA(texture2D(u_particles_x, state)),\n    //       decodeFloatRGBA(texture2D(u_particles_y, state))\n    // );\n    \n    v_particle_pos_c = state; // Texture RGBA data is only for transfer\n    gl_PointSize = 2.0;\n\n  }\n\n${main.join('\\n')}\n\n  // vec2 du = (u_max - u_min);\n  v_particle_pos = (v_particle_pos - u_min)/du;\n\n  if (texture_type == 1) { // Boundary Condition Texture\n\n    if (bc_shape == 1) { // square\n      val = sign * 0.5 * (max(abs(state.x - bc_cx)/bc_qx, abs(state.y - bc_cy)/bc_qy) - 1.);\n\n    } else if (bc_shape == 2) { // circle\n      val = sign * 0.5 * ((state.x - bc_cx)*(state.x - bc_cx)/bc_qx + (state.y - bc_cy)*(state.y - bc_cy)/bc_qy - 1.);\n\n    } else { // free draw?\n      // TODO WAS: not implemented yet\n      val = 0.;\n    }\n    \n    // for testing bc encoding\n    if (mod(drawing_click_sum, 3.) == 2.) {\n      state_mag = vec2( // unit coding - fixed w/o respect to bbox!\n        fract(a_index / u_particles_res),\n        (floor(a_index / u_particles_res) / u_particles_res)\n      );\n      // state_mag = (state - vec2(-4.1, -2.45)) / vec2(8., 5.); // dynamic wrt default bbox\n      // state_mag = (state - (u_min_enc * vec2(1., -1.))) / (du_enc * vec2(1., -1.)) ; // dynamic wrt bbox based on bc encoding loc (small bug in yloc still smh)\n\n      if (reach_mode) {\n        val = decodeFloatRGBA(texture2D(u_particles_x, state_mag));\n      } else {\n        val = decodeFloatRGBA(texture2D(u_particles_y, state_mag));\n      }\n    }\n\n  } else if (texture_type == 2) { // Value Texture\n\n    // always draw me after ENTER?\n    \n    state_mag = vec2( // unit coding - fixed w/ respect to window not bbox (grid loc)\n        fract(a_index / u_particles_res),\n        (floor(a_index / u_particles_res) / u_particles_res)\n      );\n    // state_mag = (state - vec2(-4.1, -2.45)) / vec2(8., 5.); // dynamic wrt default bbox\n    // state_mag = (state - (u_min_enc * vec2(1., -1.))) / (du_enc * vec2(1., -1.)) ; // dynamic wrt bbox based on bc encoding loc (small bug in yloc still smh)\n    \n    val = decodeFloatRGBA(texture2D(u_particles_x, state_mag));\n    // val = 1.0\n\n  }\n  \n  // TODO WAS: draw more than zero-level? with different colors?\n  // distinguishing reach and avoid might call for drawing, epsilon above and below with diff colors \n  // TODO WAS: color mode for Vf, changes over timef\n\n  // if (abs(val) > thresh && texture_type != 0) { \n  //   // nothing\n  // } else {\n  //   gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\n  // }\n\n  if (val > thresh && texture_type != 0) { //FIXME (last condit)\n    // nothing\n  } else if (val < -thresh && texture_type != 0) { //FIXME (last condit)\n    if (draw_fill) {\n      filler = 1.;\n      gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);    \n    }\n    // nothing\n  } else {\n    filler = 0.;\n    gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\n  }\n    \n}`\n  }\n}\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\n\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables,\n    getMain\n  }\n\n  function getVariables() {\n    return `\nuniform sampler2D u_particles_x;\nuniform sampler2D u_particles_y;\n    `\n  }\n\n  function getMain() {\n    return `\n  // vec2 v_particle_pos = vec2(\n  //   decodeFloatRGBA(texture2D(u_particles_x, state)),\n  //   decodeFloatRGBA(texture2D(u_particles_y, state))\n  // );\n  vec2 v_particle_pos = v_particle_pos_c;\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/DrawParticleGraph_WAS.js","import queryState from 'query-state';\nimport bus from './bus';\nimport ColorModes from './programs/colorModes';\nimport wrapVectorField from './wrapVectorField';\nimport isSmallScreen from './isSmallScreen';\n\n/**\n * The state of the fieldplay is stored in the query string. This is the\n * only place where query string can be manipulated or fetched.\n */\n\nvar qs = queryState({}, {\n  useSearch: true,\n  // Older version of the app used hash to store application arguments.\n  // Turns out hash is not good for websites like reddit. They can block\n  // url, saying \"url was already submitted\" if the only part that is different\n  // is hash. So, we switch to search string, and maintain backward compatibility\n  // for fields created before.\n  rewriteHashToSearch: true\n});\n\nvar currentState = qs.get();\n\nvar defaultVectorField = wrapVectorField(`v.x = -0.2 * p.x + 0.1 * p.y;\n  v.y = -0.1 * p.x - 0.2 * p.y;`);\n\nvar pendingSave;\nvar defaults = {\n  timeStep: 0.01,\n  dropProbability: 0.000125,\n  particleCount: 1000000, // FIXME WAS: Separate particle count for value textures\n  fadeout: .999,\n  colorMode: ColorModes.UNIFORM\n}\n// TODO: slowly populate the particles into the screen (instead of all at once)\n// idea: random percentage (if state) based on frame var in vertex shader\n\nlet settingsPanel = {\n  // collapsed: isSmallScreen(),\n  collapsed: true,\n};\n\nexport default {\n  settingsPanel,\n  saveBBox,\n  getBBox,\n  makeBBox,\n\n  getBC, // TODO: make/save fns for editor\n\n  getQS() { return qs; },\n  saveCode,\n  getCode,\n  getDefaultCode,\n\n  getDropProbability,\n  setDropProbability,\n\n  getIntegrationTimeStep,\n  setIntegrationTimeStep,\n\n  getParticleCount,\n  setParticleCount,\n\n  getFadeout,\n  setFadeout,\n\n  getColorMode,\n  setColorMode,\n\n  getColorFunction,\n  setColorFunction\n}\n\nqs.onChange(function() {\n  bus.fire('scene-ready', window.scene);\n});\n\nfunction getColorMode() {\n  let colorMode = qs.get('cm');\n  return defined(colorMode) ? colorMode : defaults.colorMode;\n}\n\nfunction setColorMode(colorMode) {\n  if (!defined(colorMode)) return;\n  qs.set({cm: colorMode});\n  currentState.cm = colorMode;\n}\n\nfunction getColorFunction() {\n  let colorFunction = qs.get('cf');\n  return colorFunction || '';\n}\n\nfunction setColorFunction(colorFunction) {\n  qs.set({cf: colorFunction});\n  currentState.cf = colorFunction;\n}\n\nfunction getFadeout() {\n  let fadeout = qs.get('fo');\n  return defined(fadeout) ? fadeout : defaults.fadeout;\n}\n\nfunction setFadeout(fadeout) {\n  if (!defined(fadeout)) return;\n  qs.set({fo: fadeout});\n  currentState.fo = fadeout;\n}\n\nfunction getParticleCount() {\n  let particleCount = qs.get('pc');\n  return defined(particleCount) ? particleCount : defaults.particleCount;\n}\n\nfunction setParticleCount(particleCount) {\n  if (!defined(particleCount)) return;\n  qs.set({pc: particleCount});\n  currentState.pc = particleCount;\n}\n\nfunction getIntegrationTimeStep() {\n  let timeStep = qs.get('dt');\n  return defined(timeStep) ? timeStep : defaults.timeStep;\n}\n\nfunction setIntegrationTimeStep(dt) {\n  if (!defined(dt)) return;\n  qs.set({dt: dt})\n  currentState.dt = dt;\n}\n\nfunction getDropProbability() {\n  let dropProbability = qs.get('dp');\n  return defined(dropProbability) ? dropProbability : defaults.dropProbability;\n}\n\nfunction setDropProbability(dropProbability) {\n  if (!defined(dropProbability)) return;\n  clamp(dropProbability, 0, 1);\n  qs.set({dp: dropProbability})\n}\n\nfunction getBC() {\n  // return {\n  //   minX: -1.,\n  //   maxX: 1.,\n  //   minY: -1.,\n  //   maxY: 1.,\n  // };\n  return {\n    cx: 0.,\n    cy: 0.,\n    qx: 1.,\n    qy: 1.,\n    shape: 1, // 1 : square, 2 : circle, TODO WAS 3 for free draw (gonna need some math)\n  };\n}\n\nfunction getBBox() {\n  let cx = qs.get('cx');\n  let cy = qs.get('cy');\n  let w = qs.get('w');\n  let h = qs.get('h');\n  return makeBBox(cx, cy, w, h);\n}\n\nfunction makeBBox(cx, cy, w, h) {\n  let bboxDefined = defined(cx) && defined(cy) && defined(w) && defined(h);\n  if (!bboxDefined) return;\n\n  let w2 = w/2;\n  let h2 = h/2;\n  var p = 10000;\n  return {\n    minX: Math.round(p * (cx - w2))/p,\n    maxX: Math.round(p * (cx + w2))/p,\n    minY: Math.round(p * (cy - h2))/p,\n    maxY: Math.round(p * (cy + h2))/p\n  };\n}\n\nfunction saveBBox(bbox, immediate = false) {\n  bbox = {\n    cx: (bbox.minX + bbox.maxX) * 0.5,\n    cy: (bbox.minY + bbox.maxY) * 0.5,\n    w: (bbox.maxX - bbox.minX),\n    h: (bbox.maxX - bbox.minX)\n  }\n\n  if (bbox.w <= 0 || bbox.h <= 0) return;\n\n  currentState.cx = bbox.cx;\n  currentState.cy = bbox.cy;\n  currentState.w = bbox.w;\n  currentState.h = bbox.h;\n\n  if(pendingSave) {\n    clearTimeout(pendingSave);\n    pendingSave = 0;\n  }\n\n  if (immediate) qs.set(bbox);\n  else {\n    pendingSave = setTimeout(() => {\n      pendingSave = 0;\n      qs.set(bbox);\n    }, 300);\n  }\n}\n\nfunction getCode() {\n  var vfCode = qs.get('vf');\n  if (vfCode) return vfCode;\n\n  // If we didn't get code yet, let's try read to read it from previous version\n  // of the API.\n  // TODO: Need to figure out how to develop this in backward/future compatible way.\n  var oldCode = qs.get('code');\n  if (oldCode) {\n    vfCode = wrapVectorField(oldCode);\n    // side effect - let's clean the old URL\n    delete(currentState.code);\n    qs.set('vf', vfCode);\n    return vfCode;\n  }\n\n  return defaultVectorField;\n}\n\nfunction getDefaultCode() {\n  return defaultVectorField;\n}\n\nfunction saveCode(code) {\n  qs.set({\n    vf: code\n  });\n  currentState.code = code;\n}\n\nfunction defined(number) {\n  return Number.isFinite(number);\n}\n\nfunction clamp(x, min, max) {\n  return x < min ? min :\n        (x > max) ? max : x;\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/appState.js","import util from '../gl-utils';\nimport UpdatePositionGraph_WAS from '../shaderGraph/updatePositionGraph_WAS';\nimport ColorMode from './colorModes';\nimport makeReadProgram from './colorProgram';\nimport textureCollection_WAS from '../utils/textureCollection_WAS';\nimport makeStatCounter from '../utils/makeStatCounter';\nimport {decodeFloatRGBA} from '../utils/floatPacking';\nimport bus from '../bus';\n\nconst particlePositionShaderCodeBuilder = new UpdatePositionGraph_WAS();\n\nexport default function updatePositionProgram_WAS(ctx, texture_type) {\n  var gl = ctx.gl;\n  var readTextures, writeTextures;\n  // var bc_textures;\n  var particleStateResolution;\n  var updateProgram;\n  var readVelocity = makeReadProgram(ctx);\n\n  // If someone needs to get vectors out from the GPU, they send a `vector-lines-request`\n  // over the bus. This request is delayed until next compute frame. Once it is handled,\n  // we send them back response with calculated vectors.\n  // var pendingVectorLines; // FIXME WAS: commenting for now\n\n  // TODO: need to make sure we are not leaking.\n  // bus.on('vector-lines-request', putVectorLinesRequestIntoQueue);\n\n  return {\n    updateCode,\n    updateParticlesPositions,\n    updateParticlesCount,\n    prepareToDraw,\n    encodeBCValue,\n    getTextures,\n    // setBCTextures, \n  };\n\n  function updateCode(vectorField) {\n    particlePositionShaderCodeBuilder.setCustomVectorField(vectorField);\n    let fragment = particlePositionShaderCodeBuilder.getFragmentShader(texture_type);\n    let vertex = particlePositionShaderCodeBuilder.getVertexShader();\n\n    let newProgram = util.createProgram(gl, vertex, fragment);\n\n    if (updateProgram) updateProgram.unload();\n    updateProgram = newProgram;\n\n    if (ctx.colorMode === ColorMode.VELOCITY) readVelocity.requestSpeedUpdate();\n  }\n\n  function getTextures() {\n    return readTextures\n  }\n\n  // function setBCTextures(bc_textures_in) {\n  //   // modification to distinguish index etc?\n  //   bc_textures = {...bc_textures_in}\n  //   bc_textures.textures.index + uniqueness_offset\n  // }\n  \n  function updateParticlesCount(x, y) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'x',\n      particleState: x\n    }, {\n      name: 'y',\n      particleState: y\n    }];\n\n    if (readTextures) readTextures.dispose();\n    readTextures = textureCollection_WAS(gl, dimensions, particleStateResolution);\n    // if (texture_type == 1) {console.log(\"readTextures (inside uPP)\", readTextures)} // DELETE ME\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = textureCollection_WAS(gl, dimensions, particleStateResolution);\n\n    readVelocity.updateParticlesCount();\n  }\n\n  function encodeBCValue(reach, avoid) {\n    particleStateResolution = ctx.particleStateResolution;\n\n    var dimensions = [{\n      name: 'reach',\n      particleState: reach\n    }, {\n      name: 'avoid',\n      particleState: avoid\n    }]; // WAS: somehow x and y are still the proper tags in shaders...?\n\n    if (readTextures) readTextures.dispose();\n    readTextures = textureCollection_WAS(gl, dimensions, particleStateResolution);\n\n    if (writeTextures) writeTextures.dispose();\n    writeTextures = textureCollection_WAS(gl, dimensions, particleStateResolution);\n  }\n\n  function prepareToDraw(program) {\n    var colorMode = ctx.colorMode;\n    if (colorMode === ColorMode.VELOCITY) readVelocity.setColorMinMax(program);\n\n    readTextures.bindTextures(gl, program);\n  }\n\n  function updateParticlesPositions(bc_textures=null) {\n    var program = updateProgram;\n    gl.useProgram(program.program);\n  \n    util.bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n  \n    ctx.inputs.updateBindings(program);\n\n    // TODO: Remove this.\n    if (ctx.audioTexture) {\n      util.bindTexture(gl, ctx.audioTexture, 5);\n      gl.uniform1i(program['u_audio'], 5);\n    }\n\n    readTextures.bindTextures(gl, program);\n\n    gl.uniform1i(program.texture_type, texture_type);\n    gl.uniform1f(program.value_transfer, ctx.value_transfer);\n    // console.log(\"bc_textures (inside uPP)\", bc_textures)\n    if (texture_type == 2 && bc_textures) {\n      // console.log(\"binding the bc textures to value uPP shader\")\n      var extra_tag = '_bc';\n      var unit_offset = 2;\n      bc_textures.bindTextures(gl, program, extra_tag, unit_offset) // for texturePositionNode\n    }\n    // late night idea: really need to ultimately interpolate the value with frag shader\n    // late night idea: M optimal flow mode based on value evolution\n    // late night idea: evolution relative to the target\n\n    gl.uniform1f(program.u_rand_seed, ctx.frameSeed);\n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    gl.uniform1f(program.u_drop_rate, ctx.dropProbability);\n\n    // Draw each coordinate individually\n    for(var i = 0; i < writeTextures.length; ++i) {\n      var writeInfo = writeTextures.get(i);\n      gl.uniform1i(program.u_out_coordinate, i);\n      util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n      gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n      gl.drawArrays(gl.TRIANGLES, 0, 6);\n    }\n\n    // TODO: I think I need to keep this time-bound, i.e. allocate X ms to\n    // process particle positions, and move on. So that the rendering thread is not paused for too long\n    if (ctx.colorMode === ColorMode.VELOCITY) {\n      readVelocity.updateParticlesPositions(program);\n    }\n\n    // if (pendingVectorLines) {\n    //   processVectorLinesRequest(program);\n    //   pendingVectorLines = null;\n    // }\n\n    // swap the particle state textures so the new one becomes the current one\n    var temp = readTextures;\n    readTextures = writeTextures;\n    writeTextures = temp;\n  }\n\n  // // WAS: programBC for transferring BC to Value texture data\n  // function transferValue(valueUpdatePositionProgram) {\n  //   var programBC = updateProgram;\n  //   var programVal = valueUpdatePositionProgram;\n\n  //   gl.useProgram(programBC.programBC);\n    \n  //   // old bindings\n  //   util.bindAttribute(gl, ctx.quadBuffer, programBC.a_pos, 2);\n  //   ctx.inputs.updateBindings(programBC);\n  //   readTextures.bindTextures(gl, programBC); // this old fn hides all the binding\n  //   gl.uniform2f(programBC.u_min, ctx.bbox.minX, ctx.bbox.minY);\n  //   gl.uniform2f(programBC.u_max, ctx.bbox.maxX, ctx.bbox.maxY);\n  \n  //   // WAS: For BC-Value Transfer, bind target texture (value) to buffer\n  //   gl.useProgram(programVal.program);\n  //   util.bindFramebuffer(gl, ctx.framebuffer, programVal.writeTextures.get(0).texture); // WAS: maybe reads?\n\n  //   // WAS: For BC-Value Transfer, switch back to use TransferNode shader\n  //   gl.useProgram(programBC.program);\n  //   gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n  //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n  //   // if fails, plan b: move this inside value program & swap roles?\n\n  //   // Draw each coordinate individually (OLD)\n  //   // for(var i = 0; i < writeTextures.length; ++i) {\n  //   //   var writeInfo = writeTextures.get(i);\n  //   //   gl.uniform1i(programBC.u_out_coordinate, i);\n  //   //   util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n  //   //   gl.viewport(0, 0, particleStateResolution, particleStateResolution);\n  //   //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n  //   // }\n\n  //   // swap the particle state textures so the new one becomes the current one\n  //   // var temp = readTextures;\n  //   // readTextures = writeTextures;\n  //   // writeTextures = temp;\n  // }\n\n  // function putVectorLinesRequestIntoQueue(request) {\n  //   pendingVectorLines = request;\n  // }\n\n  // function processVectorLinesRequest(program) {\n  //   // TODO: Move this out\n  //   var dimensions = [{\n  //     name: 'x',\n  //     particleState: pendingVectorLines.x\n  //   }, {\n  //     name: 'y',\n  //     particleState: pendingVectorLines.y\n  //   }];\n\n  //   // We create temporary textures and load requested positions in there\n  //   var resolutionOfParticlesInRequest = pendingVectorLines.resolution;\n  //   var numParticles = resolutionOfParticlesInRequest * resolutionOfParticlesInRequest;\n\n  //   var texturesForRead = textureCollection_WAS(gl, dimensions, resolutionOfParticlesInRequest);\n  //   var texturesForWrite = textureCollection_WAS(gl, dimensions, resolutionOfParticlesInRequest);\n\n  //   texturesForRead.bindTextures(gl, program);\n\n  //   // Then we request coordinates out from GPU for each dimension\n  //   var writeInfo = texturesForWrite.get(0);\n  //   gl.uniform1i(program.u_out_coordinate, 6); // v_x\n\n  //   util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n  //   gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n  //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n  //   var velocity_x = new Uint8Array(numParticles * 4);\n  //   gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n  //   gl.uniform1i(program.u_out_coordinate, 7); // v_y\n  //   writeInfo = texturesForWrite.get(1);\n  //   util.bindFramebuffer(gl, ctx.framebuffer, writeInfo.texture);\n  //   gl.viewport(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest);\n  //   gl.drawArrays(gl.TRIANGLES, 0, 6);\n\n  //   var velocity_y = new Uint8Array(numParticles * 4);\n  //   gl.readPixels(0, 0, resolutionOfParticlesInRequest, resolutionOfParticlesInRequest, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n  //   texturesForWrite.dispose();\n  //   texturesForRead.dispose();\n\n  //   var xStats = makeStatCounter();\n  //   var yStats = makeStatCounter();\n\n  //   var decoded_velocity_x = new Float32Array(numParticles);\n  //   var decoded_velocity_y = new Float32Array(numParticles);\n  //   for(var i = 0; i < velocity_y.length; i+=4) {\n  //     var idx = i/4;\n  //     var vx = readFloat(velocity_x, i);\n  //     var vy = readFloat(velocity_y, i);\n  //     decoded_velocity_x[idx] = vx;\n  //     decoded_velocity_y[idx] = vy;\n  //     xStats.add(vx);\n  //     yStats.add(vy);\n  //   }\n\n  //   var vectorLineInfo = {\n  //     xStats,\n  //     yStats,\n  //     decoded_velocity_x,\n  //     decoded_velocity_y,\n  //     resolution: resolutionOfParticlesInRequest\n  //   };\n\n  //   bus.fire('vector-line-ready', vectorLineInfo);\n  // }\n}\n\nfunction readFloat(buffer, offset) {\n    return decodeFloatRGBA(\n      buffer[offset + 0],\n      buffer[offset + 1],\n      buffer[offset + 2],\n      buffer[offset + 3]\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/updatePositionProgram_WAS.js","import BaseShaderNode from './BaseShaderNode';\nimport TexturePositionNode from './TexturePositionNode';\nimport renderNodes from './renderNodes';\nimport UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport PanzoomTransform from './PanzoomTransform';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\n\nexport default class UpdatePositionGraph {\n  constructor(options) {\n    this.readStoredPosition = new TexturePositionNode(/* isDecode = */ true);\n    this.udfVelocity = new UserDefinedVelocityFunction();\n    this.integratePositions = new RungeKuttaIntegrator();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new TexturePositionNode(/* isDecode = */ false);\n    this.panZoomDecode = new PanzoomTransform({decode: true});\n    this.panZoomEncode = new PanzoomTransform({decode: false});\n\n    this.colorMode = options && options.colorMode;\n  }\n\n  setCustomVectorField(velocityCode) {\n    this.udfVelocity.setNewUpdateCode(velocityCode);\n  }\n\n  getVertexShader () {\n    return `precision highp float;\n\nattribute vec2 a_pos;\nvarying vec2 v_tex_pos;\nuniform vec2 u_min;\nuniform vec2 u_max;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\n}`\n  }\n\n  getFragmentShader() {\n    var nodes = [\n      this.readStoredPosition,\n      this.dropParticles,\n      this.udfVelocity,\n      this.integratePositions, {\n        getMainBody() {\n          return `\n  vec2 newPos = pos + velocity;\n  `\n        }\n      },\n      this.writeComputedPosition\n    ];\n    return renderNodes(nodes);\n  }\n}\n\nclass RandomParticleDropper extends BaseShaderNode {\n  getDefines() {\n    return `\nuniform float u_drop_rate;\nuniform float u_rand_seed;\nuniform vec2 u_min;\nuniform vec2 u_max;\n`\n  }\n\n  getFunctions() {\n    // TODO: Ideally this node should probably depend on\n    // random number generator node, so that we don't duplicate code\n    return `\n`\n  }\n\n  getMainBody() {\n    return `\n  // a random seed to use for the particle drop\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\n  float drop = step(1.0 - u_drop_rate, rand(seed));\n\n  // TODO: This can be customized to produce various emitters\n  // random_pos is in range from 0..1, we move it to the bounding box:\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\n  pos = mix(pos, random_pos, drop);\n`;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/updatePositionGraph.js","\nexport default function renderNodes(nodes) {\n  let code = [] \n\n  nodes.forEach(node => { if (node.getDefines) addToCode(node.getDefines()); });\n  nodes.forEach(node => { if (node.getFunctions) addToCode(node.getFunctions()); });\n\n  addToCode('void main() {')\n    nodes.forEach(node => { if (node.getMainBody) addToCode(node.getMainBody()); });\n  addToCode('}')\n  return code.join('\\n');\n\n  function addToCode(line) {\n    if (line) code.push(line)\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/renderNodes.js","import BaseShaderNode from './BaseShaderNode';\nimport TexturePositionNode from './TexturePositionNode';\nimport renderNodes from './renderNodes';\nimport UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport UserDefinedVelocityHamiltonianFunctions from './UserDefinedVelocityHamiltonianFunctions';\nimport PanzoomTransform from './PanzoomTransform';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\n\n// import TextureTransferNode from './TextureTransferNode';\nimport TextureValueNode from './TextureValueNode';\nimport ValueIntegrator from './ValueIntegrator';\n\nexport default class UpdatePositionGraph_WAS {\n  constructor(options) {\n    // Field Texture (old)\n    this.readStoredPosition = new TexturePositionNode(/* isDecode = */ true);\n    this.udfVelocity = new UserDefinedVelocityFunction();\n    this.integratePositions = new RungeKuttaIntegrator();\n    this.dropParticles = new RandomParticleDropper();\n    this.writeComputedPosition = new TexturePositionNode(/* isDecode = */ false);\n    this.panZoomDecode = new PanzoomTransform({decode: true});\n    this.panZoomEncode = new PanzoomTransform({decode: false});\n    this.colorMode = options && options.colorMode;\n\n    // BC Texture\n    // this.transferValue = new TextureTransferNode(/* isDecode = */ false);\n\n    // Value Texture\n    this.readStoredValue = new TextureValueNode(/* isDecode = */ true); // TextureValueNode\n    this.udfVelocityHamiltonian = new UserDefinedVelocityHamiltonianFunctions(); // user defined Hamiltonian!\n    this.integrateValues = new ValueIntegrator(); // WENO + TVD-RK #fun\n    this.writeComputedValue = new TextureValueNode(/* isDecode = */ false); // TextureValueNode\n    // this.colorMode = options && options.colorMode;\n  }\n\n  setCustomVectorField(velocityCode) {\n    this.udfVelocity.setNewUpdateCode(velocityCode);\n    this.udfVelocityHamiltonian.setNewUpdateCode(velocityCode);\n  }\n\n  // setCustomHamiltonian(hamiltonianCode) {\n  //   this.udfVelocityHamiltonian.setNewHamiltonianUpdateCode(hamiltonianCode);\n  // }\n\n  getVertexShader () {\n    return `precision highp float;\n\nattribute vec2 a_pos;\nvarying vec2 v_tex_pos;\nuniform vec2 u_min;\nuniform vec2 u_max;\n// uniform int texture_type;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    gl_Position = vec4(1.0 - 2.0 * a_pos, 0, 1);\n}`\n  }\n\n  getFragmentShader(texture_type) {\n\n    if (texture_type == 0) { // Field\n      var nodes = [\n        this.readStoredPosition,\n        this.dropParticles,\n        this.udfVelocity,\n        this.integratePositions, \n        {\n          getMainBody() {\n            return `\n            vec2 newPos = pos + velocity;\n            `\n          }\n        },\n        this.writeComputedPosition\n      ];\n      \n    } else if (texture_type == 1) { // Boundary Condition\n      var nodes = [\n        // this.readStoredPosition,\n        // this.dropParticles,\n        // this.udfVelocity,\n        // this.integratePositions, \n        // {\n        //   getMainBody() {\n        //     return `\n        //     vec2 newPos = pos;\n        //     `\n        //   }\n        // },\n        // this.writeComputedPosition\n      ];\n    } else if (texture_type == 2) { // Value\n      var nodes = [\n        this.readStoredValue,\n        this.udfVelocityHamiltonian, // TODO WAS: udfHamiltonian \n        this.integrateValues, // TODO WAS: integrateValues (WENO/TVD RK5)\n        {\n          getMainBody() {\n            return `\n            // vec2 newPos = pos + velocity;\n            float newVal = val + valVelocity; // (to be computed)\n            `\n          }\n        },\n        this.writeComputedValue\n      ];\n    }\n    return renderNodes(nodes);\n  }\n}\n\nclass RandomParticleDropper extends BaseShaderNode {\n  getDefines() {\n    return `\nuniform float u_drop_rate;\nuniform float u_rand_seed;\nuniform vec2 u_min;\nuniform vec2 u_max;\n`\n  }\n\n  getFunctions() {\n    // TODO: Ideally this node should probably depend on\n    // random number generator node, so that we don't duplicate code\n    return `\n`\n  }\n\n  getMainBody() {\n    return `\n  // a random seed to use for the particle drop\n  vec2 seed = (pos + v_tex_pos) * u_rand_seed;\n  // drop rate is a chance a particle will restart at random position, to avoid degeneration\n  float drop = step(1.0 - u_drop_rate, rand(seed));\n\n  // TODO: This can be customized to produce various emitters\n  // random_pos is in range from 0..1, we move it to the bounding box:\n  vec2 random_pos = vec2(rand(seed + 1.9), rand(seed + 8.4)) * (u_max - u_min) + u_min;\n  pos = mix(pos, random_pos, drop);\n`;\n  }\n\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/updatePositionGraph_WAS.js","/**\n * A simple interface to compute eventual min/max \n */\nexport default function makeStatCounter() {\n  var min, max;\n\n  var api = {\n    getMin() { return min; },\n    getMax() { return max; },\n    add(x) {\n      if (x < min) min = x;\n      if (x > max) max = x;\n    },\n    reset: reset\n  };\n\n  return api;\n\n  function reset() {\n    min = Number.POSITIVE_INFINITY;\n    max = Number.NEGATIVE_INFINITY;\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/makeStatCounter.js","import util from '../gl-utils';\nimport DrawParticleGraph_WAS from '../shaderGraph/DrawParticleGraph_WAS';\nimport makeUpdatePositionProgram_WAS from './updatePositionProgram_WAS';\nimport { encodeFloatRGBA, decodeFloatRGBA } from '../utils/floatPacking.js';\n// import { encodeFloatRGBA } from '../utils/floatPacking.js';\nimport config from '../config';\nimport createAudioProgram from './audioProgram';\n\n/**\n * This program manages particles life-cycle. It updates particles positions\n * and initiates drawing them on screen.\n * \n * @param {Object} ctx rendering context. Holds WebGL state\n * @param {Int} texture_type gives the type: 1 = bc texture (no tex enc/dec), 2 = value texture\n * @param {Float32Array} color_start gives the color of the texture\n * @param {Float32Array} color_start2 gives second color of the texture\n */\nexport default function drawParticlesProgram_WAS(ctx, texture_type, color_start, color_start2, external_program=null) {\n  var gl = ctx.gl;\n  var color = color_start;\n  var color2 = color_start2;\n\n  var particleStateResolution, particleIndexBuffer;\n  var valueIndexBuffer;\n  var numParticles;\n  var valueReachRGBA_enc, valueAvoidRGBA_enc;\n\n  var currentVectorField = '';\n  var updatePositionProgram = makeUpdatePositionProgram_WAS(ctx, texture_type, external_program);\n  var audioProgram;\n\n  let keysPressed = {};\n  window.addEventListener('keydown', onKeyDown, true);\n  window.addEventListener('keyup', onKeyUp, true);\n\n  var drawProgram;\n  initPrograms();\n\n  return {\n    updateParticlesCount,\n    updateParticlesPositions,\n    drawParticles,\n    updateCode,\n    updateColorMode,\n    convertCursor2bcParams,\n    encodeBCValue,\n    dispose,\n    drawProgram,\n    updatePositionProgram,\n    eraseBC\n  }\n\n  function initPrograms() {\n    // need to update the draw graph because color mode shader has changed.\n    initDrawProgram();\n\n    if (config.isAudioEnabled) {\n      if (audioProgram) audioProgram.dispose();\n      audioProgram = createAudioProgram(ctx);\n    }\n  }\n\n  function initDrawProgram() {\n    if (drawProgram) drawProgram.unload();\n\n    const drawGraph = new DrawParticleGraph_WAS(ctx);\n    const vertexShaderCode = drawGraph.getVertexShader(currentVectorField, color, color2);\n    drawProgram = util.createProgram(gl, vertexShaderCode, drawGraph.getFragmentShader());\n  }\n\n  function dispose() {\n    window.removeEventListener('keydown', onKeyUp, true);\n    window.removeEventListener('keyup', onKeyUp, true);\n  }\n\n  function updateParticlesPositions(external_textures=null) {\n    if (!currentVectorField) return;\n\n    ctx.frame += 1\n    ctx.frameSeed = Math.random();\n\n    // TODO: Remove this.\n    if (audioProgram) audioProgram.updateTextures();\n\n    updatePositionProgram.updateParticlesPositions(external_textures);\n  }\n\n  // function transferValue(valueProgram) {\n  //   if (texture_type != 1) return;\n\n  //   // WAS TODO: ready SPACEBAR for starting value evolution?\n\n  //   updatePositionProgram.transferValue(valueProgram);\n  // }\n\n  function updateColorMode() {\n    initDrawProgram();\n  }\n\n  function updateCode(vfCode) {\n    ctx.frame = 0;\n    currentVectorField = vfCode;\n    updatePositionProgram.updateCode(vfCode);\n\n    initDrawProgram();\n  }\n\n  function updateParticlesCount() {\n    particleStateResolution = ctx.particleStateResolution; // TODO: make second res for bc/vals\n    numParticles = particleStateResolution * particleStateResolution;\n    var particleIndices = new Float32Array(numParticles);\n    var particleStateX = new Uint8Array(numParticles * 4);\n    var particleStateY = new Uint8Array(numParticles * 4);\n\n    var minX = ctx.bbox.minX; var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n    for (var i = 0; i < numParticles; i++) {\n      encodeFloatRGBA((Math.random()) * width + minX, particleStateX, i * 4); // randomize the initial particle positions\n      encodeFloatRGBA((Math.random()) * height + minY, particleStateY, i * 4); // randomize the initial particle positions\n\n      particleIndices[i] = i;\n    }\n\n    if (particleIndexBuffer) gl.deleteBuffer(particleIndexBuffer);\n    particleIndexBuffer = util.createBuffer(gl, particleIndices);\n\n    updatePositionProgram.updateParticlesCount(particleStateX, particleStateY);\n  }\n\n  function encodeBCValue() {\n    particleStateResolution = ctx.particleStateResolution; // TODO: make second res for bc/vals\n    numParticles = particleStateResolution * particleStateResolution;\n\n    var valueIndices = new Float32Array(numParticles);\n    var valueReachRGBA = new Uint8Array(numParticles * 4);\n    var valueAvoidRGBA = new Uint8Array(numParticles * 4);\n    var reach_mode = ctx.bc_reach_mode;\n    var avoid_mode = !ctx.bc_reach_mode;\n    var flip_mode = ctx.bc_flip_mode;\n\n    var minX = ctx.bbox.minX;\n    var minY = ctx.bbox.minY;\n    var width = ctx.bbox.maxX - minX;\n    var height = ctx.bbox.maxY - minY;\n\n    ctx.bbox_at_bc_enc = JSON.parse(JSON.stringify(ctx.bbox)); // bbox right now defines the grid location!\n\n    var bbox_enc = ctx.bbox_at_bc_enc;\n    // console.log(\"u_min_enc:\", bbox_enc.minX, bbox_enc.minY)\n    // console.log(\"du_enc:\", bbox_enc.maxX - bbox_enc.minX, bbox_enc.maxY - bbox_enc.minY)\n\n    var bc = ctx.bc\n\n    // var sign = (2 * reach_mode - 1) * (2 * !flip_mode - 1) // determines up/down of bc\n    var sign = (2 * !flip_mode - 1) // determines up/down of bc\n    console.log(\"reach mode?\", reach_mode)\n    console.log(\"flip mode?\", flip_mode)\n    console.log(\"sign\", sign)\n\n    for (var i = 0; i < numParticles; i++) {\n\n      var flr_ix = Math.floor(i / particleStateResolution);\n      var x = width * ((i / particleStateResolution) - flr_ix) + minX;\n      var y = -height * (flr_ix / particleStateResolution) + ctx.bbox.maxY; // col major? also maxY/minY bug (not mine!)\n      \n      if (valueReachRGBA_enc && valueAvoidRGBA_enc) { // TODO WAS: walk thru cases!\n        if (bc.shape == 1) { // square\n          var bc_val = sign * 0.5 * (Math.max(Math.abs(x - bc.cx)/bc.qx, Math.abs(y - bc.cy)/bc.qy) - 1.);\n        } else if (bc.shape == 2) { // circle\n          var bc_val = sign * 0.5 * ((x - bc.cx)*(x - bc.cx)/bc.qx + (y - bc.cy)*(y - bc.cy)/bc.qy - 1.);\n        } else { // free draw (not implemented yet)\n          var bc_val = 0.;\n        }\n      } else {\n        var bc_val = 3.4028234663852886e+38 // FIXME WAS: atm, ~largest 32-bit number, 10^38            \n      }\n      \n      if (i==0) {\n        console.log(\"First i, Before min/max, bc_val\", bc_val)\n      }\n\n      // if (i == 0) {\n      //   console.log(\"reach mode:\", reach_mode)\n      //   // console.log(\"valueReachRGBA_enc:\", valueReachRGBA_enc)\n      //   if (valueReachRGBA_enc) {\n      //     console.log(\"Should be taking min!\")\n      //   }\n      // }\n\n      // Flip Draw Sets (Need to fill shapes for this to be usable, still might recommend against (given avoid))\n      // if (!flip_mode && valueReachRGBA_enc && valueAvoidRGBA_enc) {\n      //   bc_val = - bc_val;\n      // }\n\n      // Take minimum with existing bc (Reach or Avoid)\n      if (reach_mode && valueReachRGBA_enc) {\n        var old_val_rgba = valueReachRGBA_enc.slice(i*4, i*4 + 4)\n        if (!flip_mode) {\n          bc_val = Math.min(decodeFloatRGBA(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        } else {\n          bc_val = Math.min(decodeFloatRGBA(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        }\n      } else if (avoid_mode && valueAvoidRGBA_enc) {\n        var old_val_rgba = valueAvoidRGBA_enc.slice(i*4, i*4 + 4)\n        if (!flip_mode) {\n          bc_val = Math.min(decodeFloatRGBA(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        } else {\n          bc_val = Math.min(decodeFloatRGBA(old_val_rgba[0], old_val_rgba[1], old_val_rgba[2], old_val_rgba[3]), bc_val);\n        }\n      }\n\n      // insert value into temp array\n      if (i==0) {\n        console.log(\"First i, After min/max, bc_val\", bc_val)\n      }\n      encodeFloatRGBA(bc_val, valueReachRGBA, i * 4);\n      encodeFloatRGBA(bc_val, valueAvoidRGBA, i * 4);\n\n      // // encoding/decoding test, interestingly only accurate to 1e-6\n      // if (i == 0) {\n      //   console.log(\"TEST, bc val before:\", bc_val);\n      //   var slice = valueReachRGBA.slice(i*4, i*4 + 4);\n      //   console.log(\"slice:\", slice)\n      //   console.log(\"TEST, bc val after at (i*4, i*4 + 4):\", decodeFloatRGBA(slice[0], slice[1], slice[2], slice[3]))\n      // }\n\n      valueIndices[i] = i;\n    }\n\n    if (valueIndexBuffer) gl.deleteBuffer(valueIndexBuffer);\n    valueIndexBuffer = util.createBuffer(gl, valueIndices);\n\n    // only store new one, this assumes the grid fixed after first bc encoding...\n    if (valueReachRGBA_enc || valueAvoidRGBA_enc) {\n      if (reach_mode) {\n        valueReachRGBA = valueReachRGBA;\n        valueAvoidRGBA = valueAvoidRGBA_enc; // avoid stays old, doesnt change\n      } else if (avoid_mode) {\n        valueReachRGBA = valueReachRGBA_enc; // reach stays old, doesnt change\n        valueAvoidRGBA = valueAvoidRGBA;\n      }\n    }\n    \n    // Overwrite and Store BC Textures\n    // console.log(\"valueReachRGBA\", valueReachRGBA)\n    // console.log(\"valueAvoidRGBA\", valueAvoidRGBA)\n    updatePositionProgram.updateParticlesCount(valueReachRGBA, valueAvoidRGBA); // this works as intended for some rzn...\n    // updatePositionProgram.encodeBCValue(valueReachRGBA, valueAvoidRGBA); // doesn't show the textures for some rzn... something in uPP/uPG_WAS.js\n    if (texture_type == 1) {console.log(\"uPP.readTextures UPDATED\", updatePositionProgram.getTextures())} // DELETE ME\n\n    valueReachRGBA_enc = valueReachRGBA\n    valueAvoidRGBA_enc = valueAvoidRGBA\n    // console.log(\"valueReachRGBA_enc\", valueReachRGBA_enc)\n    // console.log(\"valueAvoidRGBA_enc\", valueAvoidRGBA_enc)\n    \n  }\n\n  function eraseBC(erase_reach, erase_avoid) {\n    if (erase_reach) {\n      valueReachRGBA_enc = null; \n    } else if (erase_avoid) {\n      valueAvoidRGBA_enc = null;\n    }\n    if (erase_reach || erase_avoid) {\n      encodeBCValue();\n    }\n  }\n\n  function drawParticles() {\n    if (!currentVectorField) return;\n\n    var program = drawProgram;\n    gl.useProgram(program.program);\n    \n    if (texture_type == 0 || texture_type == 2) {\n      util.bindAttribute(gl, particleIndexBuffer, program.a_index, 1);\n    } else {\n      util.bindAttribute(gl, valueIndexBuffer, program.a_index, 1);\n    }\n    \n    updatePositionProgram.prepareToDraw(program);\n    ctx.inputs.updateBindings(program);\n  \n    gl.uniform1f(program.u_h, ctx.integrationTimeStep);\n    gl.uniform1f(program.frame, ctx.frame);\n    gl.uniform1f(program.u_particles_res, particleStateResolution);\n    var bbox = ctx.bbox;\n    gl.uniform2f(program.u_min, bbox.minX, bbox.minY);\n    gl.uniform2f(program.u_max, bbox.maxX, bbox.maxY);\n\n    var bbox_enc = ctx.bbox_at_bc_enc;\n    gl.uniform2f(program.u_min_enc, bbox_enc.minX, bbox_enc.minY);\n    gl.uniform2f(program.u_max_enc, bbox_enc.maxX, bbox_enc.maxY);\n\n    gl.uniform1i(program.texture_type, texture_type);\n    gl.uniform1f(program.thresh, ctx.thresh);\n    gl.uniform1f(program.drawing_click_sum, ctx.drawing_click_sum);\n    gl.uniform1i(program.bc_drawing_mode, ctx.bc_drawing_mode);\n    gl.uniform1i(program.reach_mode, ctx.bc_reach_mode);\n    gl.uniform1i(program.flip_mode, ctx.bc_flip_mode);\n    // gl.uniform1f(program.sign, (2 * ctx.bc_reach_mode - 1) * (2 * !ctx.bc_flip_mode - 1))\n    gl.uniform1f(program.sign, (2 * !ctx.bc_flip_mode - 1))\n    // console.log(\"program.sign\", (2 * ctx.bc_reach_mode - 1) * (2 * !ctx.bc_flip_mode - 1))\n    gl.uniform1i(program.draw_fill, ctx.draw_fill);\n    \n    if (texture_type == 1) { // Boundary Condition Texture (value defined by implicit location)\n\n      // draw the fill partially transparent - doesn't integrate with screenProgram mechanics yet, coming soon\n      // if (ctx.draw_fill) {\n      //   gl.enable(gl.BLEND); \n      //   gl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n      //   // gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n      //   // gl.clearColor(color[0], color[1], color[2], color[3]);\n      // }\n\n      var bc = ctx.bc;\n      gl.uniform1f(program.bc_cx, bc.cx);\n      gl.uniform1f(program.bc_cy, bc.cy);\n      gl.uniform1f(program.bc_qx, bc.qx);\n      gl.uniform1f(program.bc_qy, bc.qy);\n      gl.uniform1i(program.bc_shape, bc.shape); // TODO: Make string  \n\n    } else if (texture_type == 2) { // Value Texture (value encoded in texture RGBA data)\n\n      // TODO: bind some things?\n    \n    } else {\n\n      // TODO\n\n    }\n\n    var cursor = ctx.cursor;\n    gl.uniform4f(program.cursor, cursor.clickX, cursor.clickY, cursor.hoverX, cursor.hoverY);\n    gl.drawArrays(gl.POINTS, 0, numParticles); \n    // TODO: draw triangles between the points (shade)\n\n    // draw the fill partially transparent - doesn't integrate with screenProgram mechanics yet, coming soon\n    // if (ctx.draw_fill) {\n    //   gl.clear(gl.COLOR_BUFFER_BIT);\n    //   gl.disable(gl.BLEND);\n    // }\n  }\n\n\n  function convertCursor2bcParams() {\n    var cursor = ctx.cursor;\n\n    // Corner Drawing Method\n    var w = Math.abs(cursor.clickX - cursor.hoverX);\n    var h = Math.abs(cursor.clickY - cursor.hoverY); \n    ctx.bc.cx = Math.min(cursor.clickX, cursor.hoverX) + 0.5 * w;\n    ctx.bc.cy = Math.min(cursor.clickY, cursor.hoverY) + 0.5 * h;\n\n    // Radial Drawing Method\n    // ctx.bc.cx = cursor.clickX\n    // ctx.bc.cy = cursor.clickY\n    // var w = 2 * Math.abs(ctx.bc.cx - cursor.hoverX);\n    // var h = 2 * Math.abs(ctx.bc.cy - cursor.hoverY);\n\n    if (ctx.bc.shape == 1) { // square\n      ctx.bc.qx = 0.5 * w;\n      ctx.bc.qy = 0.5 * h;\n    } else if (ctx.bc.shape == 2) { // circle\n      ctx.bc.qx = 2 * Math.pow(0.5 * w, 2);\n      ctx.bc.qy = 2 * Math.pow(0.5 * h, 2); // 2x for better Ux\n    } else {\n      console.log(\"Drawing mode \", ctx.bc.shape, \" not possible yet!\")\n    }\n  }\n\n  function onKeyDown(e) {\n    keysPressed[e.key] = true;\n    if (ctx.bc_drawing_mode && texture_type == 1) {\n      if (e.which === 13 && e.target === document.body) { // ENTER for BC Drawing Transfer\n        encodeBCValue(); // I get a violation(warning?) saying this takes too long\n        e.preventDefault(); // do I need this?\n        console.log(\"bc encoded\")\n      }\n      if (e.which === 49 && e.target === document.body) { // 1 for square drawing\n        ctx.bc.shape = 1;\n        e.preventDefault();\n        console.log(\"square drawing mode\")\n      }\n      if (e.which === 50 && e.target === document.body) { // 2 for circle drawing\n        ctx.bc.shape = 2;\n        e.preventDefault();\n        console.log(\"circle drawing mode\")\n      }\n      if (e.which === 82 && e.target === document.body) { // r for reach drawing (default)\n        ctx.bc_reach_mode = true;\n        // color = [46/255, 121/255, 199/255, 0.9];  // blue\n        color = color_start;\n        initDrawProgram();\n        console.log(\"You are reach drawing (reach mode true, default)\")\n        e.preventDefault();\n      }\n      if (e.which === 65 && e.target === document.body) { // a for avoid drawing\n        ctx.bc_reach_mode = false;\n        // color = [223/255, 28/255, 28/255, 0.85];  // red\n        color = color_start2;\n        initDrawProgram();\n        console.log(\"You are avoid drawing (reach mode false)\")\n        e.preventDefault();\n      }\n      if (e.which === 73 && e.target === document.body) { // i for inside drawing (default)\n        ctx.bc_flip_mode = false;\n        e.preventDefault();\n        console.log(\"You are inside drawing which takes unions (flip mode false, default)\")\n      }\n      if (e.which === 79 && e.target === document.body) { // o for inside drawing\n        ctx.bc_flip_mode = true;\n        e.preventDefault();\n        console.log(\"You are outside drawing which takes intersections (flip mode true)\")\n      }\n    }\n    if (keysPressed['Backspace']) {\n      if (keysPressed['r']) {\n        console.log('Reach drawings erased.');\n        eraseBC(true, false); // BUG WAS: if field going, both bc & field die and cant turn on w/o refresh\n      } else if (keysPressed['a']) {\n        console.log('Avoid drawings erased.');\n        eraseBC(false, true);\n      } else if (keysPressed['Shift']) {\n        console.log('All drawings erased.');\n        eraseBC(true, true);\n        ctx.value_mode = false;\n      } else if (keysPressed['v']) {\n        console.log('Value erased.')\n        ctx.value_mode = false;\n      }\n    } \n    if (keysPressed['Shift'] && (keysPressed['Return'] || keysPressed['Enter'])) {\n      ctx.value_transfer = true;\n      ctx.value_mode = true;\n      updateCode(currentVectorField) // resets frame and shaders\n      console.log('Value evolution beginning :)');\n    } \n    // if (ctx.bc_drawing_mode && texture_type == 2) {\n    //   if (e.which === 13 && e.target === document.body) { // SPACE set value in motion? actually probably should just be pause induced so UL button also works\n    //     // encodeBCValue();\n    //     transferValue(); //TODO\n\n    //     e.preventDefault(); // do I need this?\n    //     console.log(\"value transferred bc to value\")\n    //   }\n    //   if (e.which === 49 && e.target === document.body) { // Q for reset?\n    //     ctx.bc.shape = 1;\n    //     e.preventDefault();\n    //     console.log(\"square drawing mode\")\n    //   }\n    // }\n  }\n\n  function onKeyUp(e) {\n    delete keysPressed[e.key];\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/drawParticlesProgram_WAS.js","/**\n * A shader function to decode rgba encoded color into float position.\n */\nconst code = `\nhighp float decodeFloatRGBA( vec4 v ) {\n  float a = floor(v.r * 255.0 + 0.5);\n  float b = floor(v.g * 255.0 + 0.5);\n  float c = floor(v.b * 255.0 + 0.5);\n  float d = floor(v.a * 255.0 + 0.5);\n\n  float exponent = a - 127.0;\n  float sign = 1.0 - mod(d, 2.0)*2.0;\n  float mantissa = float(a > 0.0)\n                  + b / 256.0\n                  + c / 65536.0\n                  + floor(d / 2.0) / 8388608.0;\n  return sign * mantissa * exp2(exponent);\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/decodeFloatRGBA.js","import BaseShaderNode from './BaseShaderNode';\nimport encodeFloatRGBA from './parts/encodeFloatRGBA';\nimport decodeFloatRGBA from './parts/decodeFloatRGBA';\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\nexport default class TexturePosition extends BaseShaderNode {\n  constructor(isDecode) {\n    super();\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    this.isDecode = isDecode;\n  }\n\n  getFunctions() {\n    if (this.isDecode) {\n      return `\n    ${encodeFloatRGBA}\n    ${decodeFloatRGBA}\n`\n    }\n  }\n\n  getDefines() {\n    if (this.isDecode) {\n      // TODO: How to avoid duplication and silly checks?\n    return `\nprecision highp float;\n\nuniform sampler2D u_particles_x;\nuniform sampler2D u_particles_y;\n\n// Which coordinate needs to be printed onto the texture\nuniform int u_out_coordinate;\n\nvarying vec2 v_tex_pos;\n`;\n    }\n  }\n\n  getMainBody() {\n  if (this.isDecode) {\n    return `\n   vec2 pos = vec2(\n     decodeFloatRGBA(texture2D(u_particles_x, v_tex_pos)),\n     decodeFloatRGBA(texture2D(u_particles_y, v_tex_pos))\n   );\n`\n    }\n    return `\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newPos.x);\n    else if (u_out_coordinate == 1) gl_FragColor = encodeFloatRGBA(newPos.y);\n    else if (u_out_coordinate == 6) gl_FragColor = encodeFloatRGBA(get_velocity(pos).x);\n    else if (u_out_coordinate == 7) gl_FragColor = encodeFloatRGBA(get_velocity(pos).y);\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/TexturePositionNode.js","/**\n * The main entry point to the application.\n *\n * It is initialized immediately with webgl, and puts\n * vue.js app loading into the future.\n */\nimport initScene from './scene';\nimport bus from './bus';\nimport { initAutoMode } from './autoMode';\n\nvar canvas = document.getElementById('scene');\n// Canvas may not be available in test run\nif (canvas) initVectorFieldApp(canvas);\n\n// Tell webpack to split bundle, and download settings UI later.\nrequire.ensure('@/vueApp.js', () => {\n  // Settings UI is ready, initialize vue.js application\n  require('@/vueApp.js');\n});\n\nfunction initVectorFieldApp(canvas) {\n  canvas.width = window.innerWidth;\n  canvas.height =  window.innerHeight;\n  var ctxOptions = {antialiasing: false };\n\n  var gl = canvas.getContext('webgl', ctxOptions) ||\n          canvas.getContext('experimental-webgl', ctxOptions);\n\n  if (gl) {\n    window.webGLEnabled = true;\n    var scene = initScene(gl);\n    scene.start();\n    initAutoMode(scene);\n    window.scene = scene;\n  } else {\n    window.webGLEnabled = false;\n  }\n}\n\nvar CCapture;\nvar currentCapturer;\n\nwindow.startRecord = startRecord;\nwindow.isRecording = false;\n\nfunction startRecord(url) {\n  if (!CCapture) {\n    require.ensure('ccapture.js', () => {\n      CCapture = require('ccapture.js');\n      window.stopRecord = stopRecord;\n      startRecord(url);\n    });\n\n    return;\n  }\n\n  if (currentCapturer) {\n    currentCapturer.stop();\n  }\n\n  if (!ffmpegScriptLoaded()) {\n    var ffmpegServer = document.createElement('script');\n    ffmpegServer.setAttribute('src', url || 'http://localhost:8080/ffmpegserver/ffmpegserver.js');\n    ffmpegServer.onload = () => startRecord(url);\n    document.head.appendChild(ffmpegServer);\n    return;\n  }\n\n  currentCapturer = new CCapture( {\n      format: 'ffmpegserver',\n      framerate: 60,\n      verbose: true,\n      name: \"fieldplay\",\n      extension: \".mp4\",\n      codec: \"mpeg4\",\n      ffmpegArguments: [\n        \"-b:v\", \"12M\",\n      ],\n  });\n\n  window.isRecording = true;\n  currentCapturer.start();\n  bus.fire('start-record', currentCapturer)\n}\n\nfunction ffmpegScriptLoaded() {\n  return typeof FFMpegServer !== 'undefined'\n}\n\nfunction stopRecord() {\n  window.isRecording = false;\n  bus.fire('stop-record', currentCapturer)\n  currentCapturer.stop();\n  currentCapturer.save();\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/nativeMain.js","const code = `\nvec4 encodeFloatRGBA(highp float val) {\n    if (val == 0.0) {\n        return vec4(0.0, 0.0, 0.0, 0.0);\n    }\n\n    float mag = abs(val);\n    float exponent = floor(log2(mag));\n    // Correct log2 approximation errors.\n    exponent += float(exp2(exponent) <= mag / 2.0);\n    exponent -= float(exp2(exponent) > mag);\n\n    float mantissa;\n    if (exponent > 100.0) {\n        // Not sure why this needs to be done in two steps for the largest float to work.\n        // Best guess is the optimizer rewriting '/ exp2(e)' into '* exp2(-e)',\n        // but exp2(-128.0) is too small to represent.\n        mantissa = mag / 1024.0 / exp2(exponent - 10.0) - 1.0;\n    } else {\n        mantissa = mag / float(exp2(exponent)) - 1.0;\n    }\n\n    float a = exponent + 127.0;\n    mantissa *= 256.0;\n    float b = floor(mantissa);\n    mantissa -= b;\n    mantissa *= 256.0;\n    float c = floor(mantissa);\n    mantissa -= c;\n    mantissa *= 128.0;\n    float d = floor(mantissa) * 2.0 + float(val < 0.0);\n    return vec4(a, b, c, d) / 255.0;\n}\n`\n\nexport default code;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/parts/encodeFloatRGBA.js","import decodeFloatRGBA from './parts/decodeFloatRGBA';\nimport shaderBasedColor from './shaderBasedColor';\n\n// TODO: this duplicates code from texture position.\nexport default class DrawParticleGraph {\n  constructor(ctx) {\n    this.colorMode = ctx.colorMode;\n    this.colorFunction = ctx.colorFunction || '';\n  }\n\n  getFragmentShader() {\n    return `precision highp float;\nvarying vec4 v_particle_color;\nvoid main() {\n  gl_FragColor = v_particle_color;\n}`\n  }\n\n  getVertexShader(vfCode) {\n    let decodePositions = textureBasedPosition();\n    let colorParts = shaderBasedColor(this.colorMode, vfCode, this.colorFunction);\n    let methods = []\n    addMethods(decodePositions, methods);\n    addMethods(colorParts, methods);\n    let main = [];\n    addMain(decodePositions, main);\n    addMain(colorParts, main);\n\n    return `precision highp float;\nattribute float a_index;\nuniform float u_particles_res;\nuniform vec2 u_min;\nuniform vec2 u_max;\n\n${decodePositions.getVariables() || ''}\n${colorParts.getVariables()}\n\n${decodeFloatRGBA}\n\n${methods.join('\\n')}\n\nvoid main() {\n  vec2 txPos = vec2(\n        fract(a_index / u_particles_res),\n        floor(a_index / u_particles_res) / u_particles_res);\n  gl_PointSize = 1.0;\n\n${main.join('\\n')}\n\n  vec2 du = (u_max - u_min);\n  v_particle_pos = (v_particle_pos - u_min)/du;\n  gl_Position = vec4(2.0 * v_particle_pos.x - 1.0, (1. - 2. * (v_particle_pos.y)),  0., 1.);\n}`\n  }\n}\n\nfunction addMethods(producer, array) {\n  if (producer.getMethods) {\n    array.push(producer.getMethods());\n  }\n}\n\nfunction addMain(producer, array) {\n  if (producer.getMain) {\n    array.push(producer.getMain());\n  }\n}\n\nfunction textureBasedPosition() {\n  return {\n    getVariables,\n    getMain\n  }\n\n  function getVariables() {\n    return `\nuniform sampler2D u_particles_x;\nuniform sampler2D u_particles_y;\n    `\n  }\n\n  function getMain() {\n    return `\n  vec2 v_particle_pos = vec2(\n    decodeFloatRGBA(texture2D(u_particles_x, txPos)),\n    decodeFloatRGBA(texture2D(u_particles_y, txPos))\n  );\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/DrawParticleGraph.js","export function getInputUniforms() {\n  return `uniform sampler2D input0;\nuniform sampler2D input1;`;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/customInput.js","/**\n * Checks whether current window belongs to a \"Small\" screen\n * size. Small screens have slightly different initial behavior.\n * E.g. the settings window is always collapsed.\n * \n * This needs to be in sync with `small-screen` variable in\n *  ../commponents/shared.styl\n */\nexport default function isSmallScreen() {\n  return window.innerWidth < 600\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/isSmallScreen.js","import UserDefinedVelocityFunction from './UserDefinedVelocityFunction';\nimport RungeKuttaIntegrator from './RungeKuttaIntegrator';\nimport ColorModes from '../programs/colorModes';\n\nexport default function shaderBasedColor(colorMode, vfCode, colorCode) {\n  var udf = new UserDefinedVelocityFunction(vfCode);\n  var integrate = new RungeKuttaIntegrator();\n\n  return {\n    getVariables,\n    getMain,\n    getMethods\n  }\n\n  function getVariables() {\n    return `\nuniform vec2 u_velocity_range;\nvarying vec4 v_particle_color;\n\n${udf.getDefines()}\n${integrate.getDefines()}\n`\n  }\n\n  function getMethods() {\n    return `\n// https://github.com/hughsk/glsl-hsv2rgb\nvec3 hsv2rgb(vec3 c) {\n  vec4 K = vec4(1.0, 2.0 / 3.0, 1.0 / 3.0, 3.0);\n  vec3 p = abs(fract(c.xxx + K.xyz) * 6.0 - K.www);\n  return c.z * mix(K.xxx, clamp(p - K.xxx, 0.0, 1.0), c.y);\n}\n\n${udf.getFunctions()}\n${integrate.getFunctions()}\n${getColorFunctionBody()}\n`\n  }\n\n  function getColorFunctionBody() {\n    if (colorMode === ColorModes.UNIFORM) {\n      return `\nvec4 get_color(vec2 p) {\n  return vec4(0.302, 0.737, 0.788, 1.);\n}\n`\n    }\n    if (colorMode === ColorModes.VELOCITY) {\n      return `\nvec4 get_color(vec2 p) {\n  vec2 velocity = get_velocity(p);\n  float speed = (length(velocity) - u_velocity_range[0])/(u_velocity_range[1] - u_velocity_range[0]);\n  return vec4(hsv2rgb(vec3(0.05 + (1. - speed) * 0.5, 0.9, 1.)), 1.0);\n}\n`\n    } \n\n    if (colorMode === ColorModes.CUSTOM) {\n      if (!colorCode) throw new Error('color mode is set to custom, but no color function is specified');\n\n      return colorCode;\n    }\n\n    return ` \nvec4 get_color(vec2 p) {\n  vec2 velocity = get_velocity(p);\n  float speed = (atan(velocity.y, velocity.x) + PI)/(2.0 * PI);\n  return vec4(hsv2rgb(vec3(speed, 0.9, 1.)), 1.0);\n}\n`;\n  }\n\n  function getMain() {\n    return `  v_particle_color = get_color(v_particle_pos);`\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/shaderBasedColor.js","import bus from '../bus';\nimport appState from '../appState';\nimport getParsedVectorFieldFunction from './getParsedVectorFieldFunction';\n\n/**\n * A text editor state for the vector field equation. Manages vector field\n * program compilation and error reporting state.\n *\n * @param {Object} drawProgram \n */\nexport default function createVectorFieldEditorState(drawProgram) {\n  bus.on('glsl-parser-ready', parseCode);\n  var currentVectorFieldVersion = 0;\n\n  // What is the current code?\n  var currentVectorFieldCode = appState.getCode();\n\n  // For delayed parsing result verification (e.g. when vue is loaded it\n  // can request us to see if there were any errors)\n  var parserResult;\n\n  loadCodeFromAppState();\n\n  var api = {\n    getCode,\n    setCode,\n    dispose,\n\n    // These properties are for UI only\n    code: currentVectorFieldCode,\n    error: '',\n    errorDetail: '',\n    isFloatError: false \n  };\n\n  return api;\n\n  function dispose() {\n    bus.off('glsl-parser-ready', parseCode);\n  }\n\n  function getCode() {\n    return appState.getCode();\n  }\n\n  function setCode(vectorFieldCode) {\n    if (vectorFieldCode === currentVectorFieldCode) {\n      // If field hasn't changed, let's make sure that there was no previous\n      // error\n      if (parserResult && parserResult.error) {\n        // And if there was error, let's revalidate code:\n        parseCode();\n      }\n      return;\n    } \n\n    trySetNewCode(vectorFieldCode).then((result) => {\n      if (result.cancelled) return;\n\n      if (result && result.error) {\n        updateErrorInfo(result.error);\n        return result;\n      }\n\n      currentVectorFieldCode = vectorFieldCode;\n      api.code = vectorFieldCode;\n      appState.saveCode(vectorFieldCode);\n    });\n  }\n\n  function updateErrorInfo(parserResult) {\n    if (parserResult && parserResult.error) {\n      api.error = parserResult.error;\n      api.errorDetail = parserResult.errorDetail;\n      api.isFloatError = parserResult.isFloatError;\n    } else {\n      api.error = '';\n      api.errorDetail = '';\n      api.isFloatError = false;\n    }\n  }\n\n  function loadCodeFromAppState() {\n    let persistedCode = appState.getCode();\n    if (persistedCode) {\n      trySetNewCode(persistedCode).then(result => {\n        if (!result.error) return; // This means we set correctly;\n        // If we get here - something went wrong. see the console\n        console.error('Failed to restore previous vector field: ', result.error);\n        // Let's use default vector field\n        trySetNewCode(appState.getDefaultCode());\n      });\n    } else {\n      // we want a default vector field\n      trySetNewCode(appState.getDefaultCode());\n    }\n  }\n\n  function parseCode(customCode) {\n    return getParsedVectorFieldFunction(customCode || currentVectorFieldCode)\n      .then(currentResult => {\n        parserResult = currentResult\n        updateErrorInfo(parserResult.error);\n        return parserResult;\n      });\n  }\n\n  function trySetNewCode(vectorFieldCode) {\n    currentVectorFieldVersion += 1;\n    var capturedVersion = currentVectorFieldVersion;\n    // step 1 - run through parser\n    return parseCode(vectorFieldCode).then(parserResult => {\n      if (capturedVersion !== currentVectorFieldVersion) {\n        parserResult.cancelled = true;\n        // a newer request was issued. Ignore these results.\n        return parserResult;\n      }\n\n      if (parserResult.error) {\n        return parserResult;\n      }\n      // step 2 - run through real webgl\n      try {\n        drawProgram.updateCode(parserResult.code);\n        return parserResult;\n      } catch (e) {\n        return {\n          error: {\n            error: e.message\n          }\n        }\n      }\n    });\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/vectorFieldState.js","/**\n * Wraps a simple vector field string into our default shader code.\n * @param {String} field \n */\nexport default function wrapVectorField(field) {\n  return `// Given any state (p.x, p.y),\n// we define how it moves (v.x, v.y),\n// determining how space flows.\n\nvec2 get_velocity(vec2 p) {\n\n  vec2 v = vec2(0., 0.);\n\n  ${field}\n\n  return v;\n}`\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/wrapVectorField.js","/**\n * A simple message bus. Facilitates uncoupled communication between\n * components of fieldplay.\n */\nvar eventify = require('ngraph.events');\n\nmodule.exports = eventify({});\n\n\n// WEBPACK FOOTER //\n// ./src/lib/bus.js","// https://developer.mozilla.org/en-US/docs/Web/API/WebGL_API/Tutorial/Using_textures_in_WebGL\nexport default function loadTexture(gl, url) {\n  var resolveTexture, rejectTexture;\n\n  var image = new Image();\n  image.crossOrigin = '';\n\n  image.onload = bindTexture;\n  image.onerror = reportError;\n  image.src = url;\n\n  return new Promise((resolve, reject) => {\n    resolveTexture = resolve;\n    rejectTexture = reject;\n  });\n\n  function reportError(err) {\n    rejectTexture(err);\n  }\n\n  function bindTexture() {\n    var texture = gl.createTexture();\n    var level = 0;\n    var internalFormat = gl.RGBA;\n    var srcFormat = gl.RGBA;\n    var srcType = gl.UNSIGNED_BYTE;\n    gl.bindTexture(gl.TEXTURE_2D, texture);\n    gl.texImage2D(gl.TEXTURE_2D, level, internalFormat,\n                  srcFormat, srcType, image);\n\n    if (isPowerOf2(image.width) && isPowerOf2(image.height)) {\n       gl.generateMipmap(gl.TEXTURE_2D);\n    } else {\n       gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n       gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n       gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n    }\n\n    resolveTexture(texture);\n  }\n}\n\nfunction isPowerOf2(value) {\n  return (value & (value - 1)) == 0;\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/inputs/loadTexture.js","import util from '../gl-utils';\nimport bus from '../bus';\nimport {decodeFloatRGBA} from '../utils/floatPacking';\nimport makeStatCounter from '../utils/makeStatCounter';\n\nconst OUT_V_X = 6;\nconst OUT_V_Y = 7;\n/**\n * This program allows to change color of each particle. It works by\n * reading current velocities into a texture from the framebuffer. Once\n * velocities are read, it checks velocity scale and passes it to a draw program.\n */\nexport default function colorProgram(ctx) {\n  var speedNeedsUpdate = true;\n  var {gl} = ctx;\n  var velocity_y_texture, velocity_x_texture;\n  var particleStateResolution;\n  var pendingSpeedUpdate;\n  var numParticles;\n  var velocityCounter = makeStatCounter();\n  var velocity_x;\n  var velocity_y;\n\n  listenToEvents();\n\n  return {\n    updateCode,\n    updateParticlesPositions,\n    updateParticlesCount,\n    setColorMinMax,\n    requestSpeedUpdate,\n    dispose\n  };\n\n  function listenToEvents() {\n    bus.on('integration-timestep-changed', requestSpeedUpdate);\n    bus.on('bbox-change', requestSpeedUpdate);\n    bus.on('refresh-speed', requestSpeedUpdate);\n  }\n\n  function dispose() {\n    bus.off('integration-timestep-changed', requestSpeedUpdate);\n    bus.off('bbox-change', requestSpeedUpdate);\n    bus.off('refresh-speed', requestSpeedUpdate);\n    disposeTextures();\n  }\n\n  function disposeTextures() {\n    if (velocity_x_texture) gl.deleteTexture(velocity_x_texture);\n    if (velocity_y_texture) gl.deleteTexture(velocity_y_texture);\n  }\n\n  function requestSpeedUpdate() {\n    if (pendingSpeedUpdate) clearTimeout(pendingSpeedUpdate);\n    pendingSpeedUpdate = setTimeout(() => {\n      speedNeedsUpdate = true;\n      pendingSpeedUpdate = 0;\n    }, 50);\n  }\n\n  function setColorMinMax(program) {\n    gl.uniform2f(program.u_velocity_range, velocityCounter.getMin(), velocityCounter.getMax());\n  }\n\n  function updateParticlesCount() {\n    disposeTextures();\n\n    particleStateResolution = ctx.particleStateResolution;\n    numParticles = particleStateResolution * particleStateResolution;\n\n    velocity_x = new Uint8Array(numParticles * 4);\n    velocity_y = new Uint8Array(numParticles * 4);\n    velocity_x_texture = util.createTexture(gl, gl.NEAREST, velocity_x, particleStateResolution, particleStateResolution);\n    velocity_y_texture = util.createTexture(gl, gl.NEAREST, velocity_y, particleStateResolution, particleStateResolution);\n\n    requestSpeedUpdate();\n  }\n\n  function updateCode() {\n    requestSpeedUpdate();\n  }\n\n  function updateParticlesPositions(program) {\n    if (!speedNeedsUpdate || !velocity_x || !velocity_y) return;\n    speedNeedsUpdate = false;\n\n    // We assume this is called from update position program\n    util.bindFramebuffer(gl, ctx.framebuffer, velocity_x_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_X);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_x);\n\n    util.bindFramebuffer(gl, ctx.framebuffer, velocity_y_texture);\n    gl.uniform1i(program.u_out_coordinate, OUT_V_Y);\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n    gl.readPixels(0, 0, particleStateResolution, particleStateResolution, gl.RGBA, gl.UNSIGNED_BYTE, velocity_y);\n\n    updateMinMax();\n  }\n\n  function updateMinMax() {\n    velocityCounter.reset();\n    // TODO: Do I want this to be async?\n    for(var i = 0; i < velocity_y.length; i+=4) {\n      var vx = readFloat(velocity_x, i);\n      var vy = readFloat(velocity_y, i);\n      var v = Math.sqrt(vx * vx + vy * vy);\n      velocityCounter.add(v);\n    }\n  }\n}\n\nfunction readFloat(buffer, offset) {\n    return decodeFloatRGBA(\n      buffer[offset + 0],\n      buffer[offset + 1],\n      buffer[offset + 2],\n      buffer[offset + 3]\n    );\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/colorProgram.js","/**\n * Renders computed state onto the screen.\n */\nimport glUtils from '../gl-utils';\n\nconst NO_TRANSFORM = {dx: 0, dy: 0, scale: 1};\n\nexport default function makeScreenProgram(ctx) {\n  var {gl, canvasRect} = ctx;\n\n  var screenTexture, backgroundTexture;\n  var boundBoxTextureTransform = {dx: 0, dy: 0, scale: 1};\n  var lastRenderedBoundingBox = null;\n\n  // TODO: Allow customization? Last time I tried, I didn't like it too much.\n  // It was very easy to screw up the design, and the tool looked ugly :-/\n  // let backgroundColor = { r: 19/255, g: 41/255, b: 79/255, a: 1 }; // deep gray blue (og)\n  let backgroundColor = { r: 12/255, g: 16/255, b: 18/255, a: 0.95 }; // charcoal dark\n\n  updateScreenTextures();\n  var screenProgram = glUtils.createProgram(gl, getScreenVertexShader(), getScreenFragmentShader());\n  \n  var api = {\n    fadeOutLastFrame,\n    renderCurrentScreen,\n    updateScreenTextures,\n\n    boundingBoxUpdated: false\n  };\n\n  return api;\n  \n  function fadeOutLastFrame() {\n    // render to the frame buffer\n    glUtils.bindFramebuffer(gl, ctx.framebuffer, screenTexture);\n    gl.viewport(0, 0, canvasRect.width, canvasRect.height);\n\n    if (api.boundingBoxUpdated && lastRenderedBoundingBox) {\n      // We move the back texture, relative to the bounding box change. This eliminates\n      // particle train artifacts, though, not all of them: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n      // If you know how to improve this - please let me know.\n      boundBoxTextureTransform.dx = -(ctx.bbox.minX - lastRenderedBoundingBox.minX)/(ctx.bbox.maxX - ctx.bbox.minX);\n      boundBoxTextureTransform.dy = -(ctx.bbox.minY - lastRenderedBoundingBox.minY)/(ctx.bbox.maxY - ctx.bbox.minY);\n      boundBoxTextureTransform.scale = (ctx.bbox.maxX - ctx.bbox.minX) / (lastRenderedBoundingBox.maxX - lastRenderedBoundingBox.minX);\n      drawTexture(backgroundTexture, ctx.fadeOpacity, boundBoxTextureTransform);\n    } else {\n      drawTexture(backgroundTexture, ctx.fadeOpacity, NO_TRANSFORM)\n    }\n  } // TODO WAS: is there a way to change this system so that the bc drawing is not faded but erased?\n\n  function renderCurrentScreen() {\n    glUtils.bindFramebuffer(gl, null);\n\n    saveLastBbox();\n\n    gl.enable(gl.BLEND); \n    gl.blendFunc(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA);\n    gl.clearColor(backgroundColor.r, backgroundColor.g, backgroundColor.b, backgroundColor.a);\n    gl.clear(gl.COLOR_BUFFER_BIT);\n    drawTexture(screenTexture, 1.0, NO_TRANSFORM);\n    gl.disable(gl.BLEND);\n\n    var temp = backgroundTexture;\n    backgroundTexture = screenTexture;\n    screenTexture = temp;\n\n    api.boundingBoxUpdated = false;\n    if (window.audioTexture) {\n      drawTexture(window.audioTexture, 1.0, NO_TRANSFORM);\n    }\n  }\n\n  function updateScreenTextures() {\n    var {width, height} = canvasRect;\n    var emptyPixels = new Uint8Array(width * height * 4);\n    if (screenTexture) {\n      gl.deleteTexture(screenTexture);\n    }\n    if (backgroundTexture) {\n      gl.deleteTexture(backgroundTexture);\n    }\n\n    screenTexture = glUtils.createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n    backgroundTexture = glUtils.createTexture(gl, gl.NEAREST, emptyPixels, width, height);\n  }\n\n  function saveLastBbox() {\n    if (!lastRenderedBoundingBox) {\n      lastRenderedBoundingBox = {\n        minX: ctx.bbox.minX,\n        minY: ctx.bbox.minY,\n        maxX: ctx.bbox.maxX,\n        maxY: ctx.bbox.maxY\n      }\n\n      return;\n    } \n\n    lastRenderedBoundingBox.minX = ctx.bbox.minX;\n    lastRenderedBoundingBox.minY = ctx.bbox.minY;\n    lastRenderedBoundingBox.maxX = ctx.bbox.maxX;\n    lastRenderedBoundingBox.maxY = ctx.bbox.maxY;\n  }\n\n  function drawTexture(texture, opacity, textureTransform) {\n    var program = screenProgram;\n    gl.useProgram(program.program);\n    glUtils.bindAttribute(gl, ctx.quadBuffer, program.a_pos, 2);\n\n    // TODO: This index is very fragile. I need to find a way\n    glUtils.bindTexture(gl, texture, ctx.screenTextureUnit);\n    gl.uniform1i(program.u_screen, ctx.screenTextureUnit);\n\n    gl.uniform1f(program.u_opacity_border, 0.02);\n    gl.uniform1f(program.u_opacity, opacity);\n    gl.uniform3f(program.u_transform, textureTransform.dx, textureTransform.dy, textureTransform.scale);\n\n    gl.drawArrays(gl.TRIANGLES, 0, 6);\n  }\n}\n\nfunction getScreenVertexShader() {\n  return `// screen program\nprecision highp float;\n\nattribute vec2 a_pos;\nvarying vec2 v_tex_pos;\nuniform vec3 u_transform;\n\nvoid main() {\n    v_tex_pos = a_pos;\n    vec2 pos = a_pos;\n\n    // This transformation tries to move texture (raster) to the approximate position\n    // of particles on the current frame. This is needed to avoid rendering artifacts\n    // during pan/zoom: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n\n    // PS: I must admit, I wrote this formula through sweat and tears, and\n    // I still have no idea why I don't need to apply (pos.y - 0.5) to Y coordinate.\n    // Is it because I use aspect ratio for bounding box?\n    pos.x = (pos.x - 0.5) / u_transform.z - u_transform.x + 0.5 * u_transform.z;\n    pos.y = pos.y / u_transform.z + u_transform.y;\n\n    pos = 1.0 - 2.0 * pos;\n    gl_Position = vec4(pos, 0, 1);\n}`\n}\n\nfunction getScreenFragmentShader() {\n  return `precision highp float;\nuniform sampler2D u_screen;\nuniform float u_opacity;\nuniform float u_opacity_border;\n\nvarying vec2 v_tex_pos;\n\nvoid main() {\n  vec2 p = 1.0 - v_tex_pos;\n  vec4 color = texture2D(u_screen, p);\n\n  // For some reason particles near border leave trace when we translate the texture\n  // This is my dirty hack to fix it: https://computergraphics.stackexchange.com/questions/5754/fading-particles-and-transition\n  if (p.x < u_opacity_border || p.x > 1. - u_opacity_border || p.y < u_opacity_border || p.y > 1. - u_opacity_border) {\n    gl_FragColor = vec4(0.);\n  } else {\n    // opacity fade out even with a value close to 0.0\n    gl_FragColor = vec4(floor(255.0 * color * u_opacity) / 255.0);\n  }\n}`\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/screenProgram.js","import BaseShaderNode from './BaseShaderNode';\n\nexport default class RungeKuttaIntegrator extends BaseShaderNode {\n  constructor () {\n    super();\n  }\n\n  getDefines() {\n    return `\nuniform float u_h;\n`\n  }\n\n  getFunctions() {\n    return `\nvec2 rk4(const vec2 point) {\n  vec2 k1 = get_velocity( point );\n  vec2 k2 = get_velocity( point + k1 * u_h * 0.5);\n  vec2 k3 = get_velocity( point + k2 * u_h * 0.5);\n  vec2 k4 = get_velocity( point + k3 * u_h);\n\n  return k1 * u_h / 6. + k2 * u_h/3. + k3 * u_h/3. + k4 * u_h/6.;\n}`\n  }\n\n  getMainBody() {\n    return `\n  vec2 velocity = rk4(pos);\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/RungeKuttaIntegrator.js","var loadedLinks = new Map(); // from link to response\nimport request from '../utils/request';\n\nexport default function fetchGLSL(link) {\n  if (!link) return Promise.reject('Missing link')\n  var trimmed = link.trim();\n  if (!trimmed) return Promise.reject('Missing link');\n\n  let cachedResponse = loadedLinks.get(trimmed)\n  if (cachedResponse) return Promise.resolve(cachedResponse);\n\n  return request(link).then(code => {\n    loadedLinks.set(link, code);\n    return code;\n  });\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/fetchGLSL.js","/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\nimport glUtil from '../gl-utils';\n\nexport default function textureCollection_WAS(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map((d, index) => {\n    var textureInfo = {\n      texture: glUtil.createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    }\n\n    return textureInfo;\n  })\n\n  return {\n    dispose,\n    bindTextures,\n    assignProgramUniforms,\n    length: dimensions.length,\n    textures,\n    get(i) { return textures[i]; }\n  }\n\n  function assignProgramUniforms(program) {\n    textures.forEach(tInfo => {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(tInfo => gl.deleteTexture(tInfo.texture));\n  }\n\n  function bindTextures(gl, program, extra_tag='', unit_offset=0) {\n    textures.forEach((tInfo) => {\n      glUtil.bindTexture(gl, tInfo.texture, tInfo.index + unit_offset);\n      gl.uniform1i(program['u_particles_' + tInfo.name + extra_tag], tInfo.index + unit_offset);\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/textureCollection_WAS.js","/**\n * Collection of input bindings. Individual program works with this collection\n * to command it update texture bindings.\n */\nexport default function createInputCollection() {\n  var boundInputs = new Map() \n  var currentProgram;\n  return {\n    updateBindings,\n    bindInput,\n  }\n\n  function bindInput(inputIndex, inputBinding) {\n    var prevBinding = boundInputs.get(inputIndex);\n    if (prevBinding) {\n      prevBinding.dispose();\n    }\n    boundInputs.set(inputIndex, inputBinding);\n  }\n\n  function updateBindings(program) {\n    currentProgram = program;\n    boundInputs.forEach(updateInputBinding);\n  }\n\n  function updateInputBinding(input, inputIndex) {\n    input.updateBinding(currentProgram, inputIndex);\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/programs/inputs/inputCollection.js","/**\n * Enables panning and zooming of canvas with vector field\n * \n * @param {HTMLCanvasElement} canvas that needs to be panned and zoomed\n * @param {*} updateBoundingBoxCallback callback that is called when vector field bounding box\n * needs to be updated\n */\nexport default function wglPanZoom(canvas, updateBoundingBoxCallback) {\n  var lastDx = 0;\n  var lastDy = 0;\n  var lastScale = 1;\n\n  // We need to be moved at least this many pixels in order to let\n  // transform update bounding box.\n  var transformThreshold = 2.1;\n\n  return {\n    applyTransform(newTransform) {\n      var dx = newTransform.x;\n      var dy = newTransform.y; \n\n      let dScale = (lastScale - newTransform.scale);\n      if (dScale === 0 && \n          Math.abs(dx - lastDx) < transformThreshold &&\n          Math.abs(dy - lastDy) < transformThreshold) {\n          // Wait for larger transform\n          return; \n      }\n\n      lastDx = dx;\n      lastDy = dy;\n      lastScale = newTransform.scale;\n\n      updateBoundingBoxCallback(newTransform)\n    },\n\n    getOwner() {\n      return canvas\n    }\n  };\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/wglPanZoom.js","/**\n * This module allows to pass mouse coordinates down to the shader. Coordinates\n * will be available as `vec4 cursor` variable, where `xy` are the last\n * click position, and `zw` are the last hover position.\n * \n * Note: On Touch devices hover is the same click.\n * \n * Hopefully this will enables easier exploration\n */\nexport default function createCursorUpdater(ctx) {\n  var {canvasRect, bbox} = ctx;\n\n  window.addEventListener('mousemove', onMouseMove, true);\n  window.addEventListener('mousedown', onMouseClick, true);\n  window.addEventListener('touchstart', onTouchStart, true);\n  // window.addEventListener('click', onMouseClick2, true); // FIXME WAS, would like to drag screen around without obejct dissapearing\n  // window.addEventListener('keydown', onKeyDown, true);\n\n  return {\n    dispose\n  }\n\n  function dispose() {\n    window.removeEventListener('mousemove', onMouseMove, true);\n    window.removeEventListener('mousedown', onMouseClick, true);\n    window.removeEventListener('touchstart', onTouchStart, true);\n    window.removeEventListener('touchmove', onTouchMove, true);\n    // window.removeEventListener('click', onMouseClick2, true); // FIXME WAS\n    // window.removeEventListener('keydown', onKeyDown, true);\n  }\n\n  function onTouchStart(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n\n    setClick(firstTouch.clientX, firstTouch.clientY);\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onTouchMove(e) {\n    var firstTouch = e.touches[0];\n    if (!firstTouch) return;\n    setHover(firstTouch.clientX, firstTouch.clientY);\n  }\n\n  function onMouseMove(e) { setHover(e.clientX, e.clientY); }\n\n  function onMouseClick(e) { setClick(e.clientX, e.clientY); }\n\n  function onMouseClick2(e) { setClick2(e.clientX, e.clientY); }\n\n  function setHover(clientX, clientY) {\n    ctx.cursor.hoverX = getSceneXFromClientX(clientX);\n    ctx.cursor.hoverY = getSceneYFromClientY(clientY);\n  }\n\n  function setClick(clientX, clientY) {\n    if (ctx.bc_drawing_mode) {\n      ctx.drawing_click_sum += 1;\n    }\n    ctx.cursor.clickX = getSceneXFromClientX(clientX);\n    ctx.cursor.clickY = getSceneYFromClientY(clientY);\n  }\n\n  function setClick2(clientX, clientY) { // FIXME WAS, would like to drag screen around without obejct dissapearing\n    ctx.cursor.clickX = getSceneXFromClientX(clientX);\n    ctx.cursor.clickY = getSceneYFromClientY(clientY);\n  }\n\n  function getSceneXFromClientX(clientX) {\n    var dx = (clientX - canvasRect.left)/canvasRect.width;\n    return (bbox.maxX - bbox.minX) * dx + bbox.minX;\n  }\n\n  function getSceneYFromClientY(clientY) {\n    var dy = 1. - ((clientY - canvasRect.top)/canvasRect.height);\n    return (bbox.minY - bbox.maxY) * dy + bbox.maxY;\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/cursorUpdater.js","/**\n * A wrapper over collection of textures. Can be used to represent\n * individual textures for every dimension.\n */\nimport glUtil from '../gl-utils';\n\nexport default function textureCollection(gl, dimensions, particleStateResolution) {\n  var textures = dimensions.map((d, index) => {\n    var textureInfo = {\n      texture: glUtil.createTexture(gl, gl.NEAREST, d.particleState, particleStateResolution, particleStateResolution),\n      index: index,\n      name: d.name\n    }\n\n    return textureInfo;\n  })\n\n  return {\n    dispose,\n    bindTextures,\n    assignProgramUniforms,\n    length: dimensions.length,\n    textures,\n    get(i) { return textures[i]; }\n  }\n\n  function assignProgramUniforms(program) {\n    textures.forEach(tInfo => {\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    });\n  }\n\n  function dispose() {\n    textures.forEach(tInfo => gl.deleteTexture(tInfo.texture));\n  }\n\n  function bindTextures(gl, program) {\n    textures.forEach((tInfo) => {\n      glUtil.bindTexture(gl, tInfo.texture, tInfo.index);\n      gl.uniform1i(program['u_particles_' + tInfo.name], tInfo.index);\n    })\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/utils/textureCollection.js","import appState from './appState';\n\nconst defaultConfig = {\n  // I need to flash our more details before making any promises.\n  isAudioEnabled: false,\n  // this allows to render an overlay grid with vectors. Enable it\n  // and drag the scene a little bit.\n  vectorLinesEnabled: false,\n\n  // Starting from which texture unit we can bind custom inputs?\n  FREE_TEXTURE_UNIT: 4,\n\n  // whether input bindings should be visible\n  showBindings: appState.getQS().get('showBindings') || false\n}\n\nexport default defaultConfig;\n\n\n// WEBPACK FOOTER //\n// ./src/lib/config.js","import BaseShaderNode from './BaseShaderNode';\nimport encodeFloatRGBA from './parts/encodeFloatRGBA';\nimport decodeFloatRGBA from './parts/decodeFloatRGBA';\n\n/**\n * Reads/writes particle coordinates from/to a texture;\n */\nexport default class TextureValue extends BaseShaderNode {\n  constructor(isDecode) {\n    super();\n\n    // When it's decoding, it must read from the texture.\n    // Otherwise it must write to the texture;\n    this.isDecode = isDecode;\n  }\n\n  getFunctions() {\n    if (this.isDecode) {\n      return `\n    ${encodeFloatRGBA}\n    ${decodeFloatRGBA}\n`\n    }\n  }\n\n  getDefines() {\n    if (this.isDecode) {\n      // TODO: How to avoid duplication and silly checks?\n    return `\nprecision highp float;\n\nuniform vec2 u_min;\nuniform vec2 u_max;\nuniform float value_transfer;\n\nuniform sampler2D u_particles_x;     // stores evolving value\nuniform sampler2D u_particles_y;     // unneeded\nuniform sampler2D u_particles_x_bc;  // reach bc\nuniform sampler2D u_particles_y_bc;  // avoid bc\n\n// Which coordinate needs to be printed onto the texture\nuniform int u_out_coordinate;\n\nvarying vec2 v_tex_pos;\n`;\n    }\n  }\n\n  getMainBody() {\n  if (this.isDecode) {\n    return `\n  float reach_val = decodeFloatRGBA(texture2D(u_particles_x_bc, 1.-v_tex_pos)); // works when flipped, interesting\n  float avoid_val = decodeFloatRGBA(texture2D(u_particles_y_bc, 1.-v_tex_pos));\n  float old_val = decodeFloatRGBA(texture2D(u_particles_x, 1.-v_tex_pos));\n  \n  vec2 state = abs(u_max - u_min) * (0.5 - v_tex_pos);\n  \n  float val;\n\n  // this will probably move to body\n  if (value_transfer > 0.) {\n    val = reach_val;\n    // val = min(reach_val, avoid_val);\n  } else {\n    val = old_val;\n  }\n`\n    }\n    return `\n    if (u_out_coordinate == 0) gl_FragColor = encodeFloatRGBA(newVal); // write to x only\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/TextureValueNode.js","import appState from './appState';\nimport presets from './autoPresets';\nimport generateFunction from './generate-equation';\nimport wrapVectorField from './wrapVectorField';\n\nlet delayTime, incomingPresetsQueue, scene, scheduledUpdate, autoSource;\n\nexport function initAutoMode(_scene) {\n  scene = _scene;\n\n  const qs = appState.getQS();\n\n  autoSource = qs.get('autosource');\n  if (!['presets', 'generator', 'both'].includes(autoSource)) {\n    if (autoSource) {\n      console.error('unknown autosource param; options are presets, generator, or both');\n    }\n\n    autoSource = 'both';\n  }\n\n  let autoTime = qs.get('autotime');\n  if (!autoTime) {\n    autoTime = qs.get('auto'); // Backwards compatibility\n    if (!autoTime) {\n      return;\n    }\n\n    console.warn('the auto param is deprecated; please use autotime');\n  }\n\n  let parsedMilliseconds = parseFloat(autoTime);\n  if (Number.isNaN(parsedMilliseconds)) {\n    console.error('malformed autotime param; not a number');\n    return;\n  }\n\n  if (/ms$/i.test(autoTime)) {\n    // Already good\n  } else if (/s$/i.test(autoTime)) {\n    parsedMilliseconds *= 1000; // Convert from seconds\n  } else if (/m$/i.test(autoTime)) {\n    parsedMilliseconds *= 1000 * 60; // Convert from minutes\n  } else if (/h$/i.test(autoTime)) {\n    parsedMilliseconds *= 1000 * 60 * 60; // Convert from hours\n  }\n\n  if (parsedMilliseconds <= 500) {\n    console.warn('autotime param is too small; defaulting to 30 seconds');\n    parsedMilliseconds = 30000;\n  }\n\n  delayTime = parsedMilliseconds;\n  next({ immediately: true });\n\n  // TODO: When user changes any argument of a field, we need to stop the mode.\n  // we could use `bus` here to listen for change events, and dispose.\n  return dispose;\n}\n\nfunction dispose() {\n  clearTimeout(scheduledUpdate);\n  scheduledUpdate = 0;\n  // TODO: When disposed we need to drop the `auto` argument from the query string.\n  // otherwise if people share it, they can unintentionally switch on auto mode\n}\n\nfunction next(options) {\n  options = options || {};\n\n  let source = autoSource;\n  if (source === 'both') {\n    source = Math.random() < 0.5 ? 'presets' : 'generator';\n  }\n\n  if (source === 'generator') {\n    scene.setParticlesCount(500000);\n    scene.vectorFieldEditorState.setCode(wrapVectorField(generateFunction()));\n  } else if (source === 'presets') {\n    if (!incomingPresetsQueue || !incomingPresetsQueue.length) {\n      incomingPresetsQueue = shuffle(presets);\n    }\n\n    const preset = incomingPresetsQueue.shift();\n\n    scene.vectorFieldEditorState.setCode(preset.code);\n\n    if (defined(preset.colorMode)) {\n      scene.setColorMode(preset.colorMode);\n    }\n\n    if (defined(preset.timeStep)) {\n      scene.setIntegrationTimeStep(preset.timeStep);\n    }\n\n    if (defined(preset.fadeOut)) {\n      scene.setFadeOutSpeed(preset.fadeOut);\n    }\n\n    if (defined(preset.dropProbability)) {\n      scene.setDropProbability(preset.dropProbability);\n    }\n\n    if (defined(preset.particleCount)) {\n      scene.setParticlesCount(preset.particleCount);\n    }\n\n    const bbox = appState.makeBBox(preset.cx, preset.cy, preset.w, preset.h);\n    if (bbox) {\n      if (options.immediately) {\n        scene.applyBoundingBox(bbox);\n      } else {\n        animateBBox(bbox);\n      }\n    }\n\n    // TODO: support these additional params: i0, showBindings\n  }\n\n  scheduledUpdate = setTimeout(next, delayTime);\n}\n\nfunction animateBBox(endBBox) {\n  const startBBox = Object.assign({}, scene.getBoundingBox());\n  const duration = 3000;\n  const startTime = Date.now();\n  const diffMinX = endBBox.minX - startBBox.minX;\n  const diffMaxX = endBBox.maxX - startBBox.maxX;\n  const diffMinY = endBBox.minY - startBBox.minY;\n  const diffMaxY = endBBox.maxY - startBBox.maxY;\n\n  const frame = function() {\n    const factor = (Date.now() - startTime) / duration;\n    if (factor >= 1) {\n      scene.applyBoundingBox(endBBox);\n      return;\n    }\n\n    requestAnimationFrame(frame);\n\n    const bbox = {\n      minX: startBBox.minX + (diffMinX * factor),\n      maxX: startBBox.maxX + (diffMaxX * factor),\n      minY: startBBox.minY + (diffMinY * factor),\n      maxY: startBBox.maxY + (diffMaxY * factor)\n    };\n\n    scene.applyBoundingBox(bbox);\n  };\n\n  frame();\n}\n\nfunction shuffle(inputArray) {\n  const outputArray = inputArray.slice();\n  for (let i = 0; i < outputArray.length; i++) {\n    const j = Math.floor(Math.random() * outputArray.length);\n    const temp = outputArray[i];\n    outputArray[i] = outputArray[j];\n    outputArray[j] = temp;\n  }\n\n  return outputArray;\n}\n\nfunction defined(number) {\n  return Number.isFinite(number);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./src/lib/autoMode.js","import fetchGLSL from './fetchGLSL.js';\n\nvar pragmaInclude = '#include ';\nvar nullCode = { code: '' }\n\n/**\n * Naively parses glsl code and tries to replace all `#pragma` statements\n * with empty string. Gives structured collection of pragma statements back\n * \n * @param {String} code \n */\nexport default function makePragmaParser(code) {\n  if (!code) return new Promise(resolve => resolve(nullCode));\n\n  var parsedLines = processLineByLine(code);\n  if (parsedLines.pending.length > 0) {\n    return Promise.all(parsedLines.pending).then(() => parsedLines)\n      .catch(error => { return {error: {error}}; });\n  }\n\n  return new Promise(resolve => resolve(parsedLines));\n}\n\nfunction processLineByLine(code) {\n  var pending = []\n  var lines = code.split('\\n');\n  var outputLines = [];\n  var currentIndex = 0;\n  lines.forEach((line, index) => {\n    currentIndex = index;\n    if (line && line[0] === '#') {\n      outputLines.push('');\n      processPragma(line);\n    } else {\n      outputLines.push(line);\n    }\n  });\n\n  return {\n    getCode,\n    pending\n  };\n\n  function getCode() {\n    return outputLines.join('\\n');\n  }\n\n  function processPragma(line) {\n    if (line.indexOf(pragmaInclude) === 0) {\n      var include = line.substr(pragmaInclude.length);\n      var insertIndex = currentIndex;\n      pending.push(fetchGLSL(include).then(code => {\n        outputLines[insertIndex] = code\n      }))\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/editor/pragmaParser.js","import BaseShaderNode from './BaseShaderNode';\n\nexport default class PanzoomTransform extends BaseShaderNode {\n  constructor(config) {\n    super();\n    // decode is used when we move particle read from the texture\n    // otherwise we write particle to texture and need to reverse transform\n    this.decode = config && config.decode;\n    this.srcPosName = (config && config.posName) || 'pos';\n  }\n\n  getDefines() {\n    if (this.decode) {\n      // TODO: Need to figure out how to not duplicate this.\n    return `\n  uniform vec2 u_min;\n  uniform vec2 u_max;\n`;\n    }\n  }\n\n  getMainBody() {\n    if (this.decode) {\n      return `\n  // move particle position according to current transform\n  vec2 du = (u_max - u_min);\n  pos.x = ${this.srcPosName}.x * du.x + u_min.x;\n  pos.y = ${this.srcPosName}.y * du.y + u_min.y;\n`\n    }\n    return `\n  pos.x = (${this.srcPosName}.x - u_min.x)/du.x;\n  pos.y = (${this.srcPosName}.y - u_min.y)/du.y;\n`\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./src/lib/shaderGraph/PanzoomTransform.js"],"sourceRoot":""}